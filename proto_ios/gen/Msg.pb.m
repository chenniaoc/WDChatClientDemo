// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Msg.pb.h"
// @@protoc_insertion_point(imports)

@implementation MsgRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MsgRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL EConstMsgTypesIsValidValue(EConstMsgTypes value) {
  switch (value) {
    case EConstMsgTypesMsgTypeNormal:
    case EConstMsgTypesMsgTypeAotomsg:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromEConstMsgTypes(EConstMsgTypes value) {
  switch (value) {
    case EConstMsgTypesMsgTypeNormal:
      return @"EConstMsgTypesMsgTypeNormal";
    case EConstMsgTypesMsgTypeAotomsg:
      return @"EConstMsgTypesMsgTypeAotomsg";
    default:
      return nil;
  }
}

BOOL EConstMsgMediaTypesIsValidValue(EConstMsgMediaTypes value) {
  switch (value) {
    case EConstMsgMediaTypesMsgMediaTypeText:
    case EConstMsgMediaTypesMsgMediaTypeImg:
    case EConstMsgMediaTypesMsgMediaTypeAudio:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromEConstMsgMediaTypes(EConstMsgMediaTypes value) {
  switch (value) {
    case EConstMsgMediaTypesMsgMediaTypeText:
      return @"EConstMsgMediaTypesMsgMediaTypeText";
    case EConstMsgMediaTypesMsgMediaTypeImg:
      return @"EConstMsgMediaTypesMsgMediaTypeImg";
    case EConstMsgMediaTypesMsgMediaTypeAudio:
      return @"EConstMsgMediaTypesMsgMediaTypeAudio";
    default:
      return nil;
  }
}

BOOL EConstPBMsgSendRespCodesIsValidValue(EConstPBMsgSendRespCodes value) {
  switch (value) {
    case EConstPBMsgSendRespCodesPbMsgSendRespUserBlocked:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromEConstPBMsgSendRespCodes(EConstPBMsgSendRespCodes value) {
  switch (value) {
    case EConstPBMsgSendRespCodesPbMsgSendRespUserBlocked:
      return @"EConstPBMsgSendRespCodesPbMsgSendRespUserBlocked";
    default:
      return nil;
  }
}

@interface CMsgPBContent ()
@property UInt32 fromSourceType;
@property UInt32 toSourceType;
@property UInt64 fromUid;
@property UInt64 toUid;
@property UInt64 time;
@property UInt64 msgid;
@property UInt32 msgType;
@property UInt32 msgMediaType;
@property UInt32 syncFlag;
@property (strong) NSString* msgData;
@property (strong) NSString* detail;
@end

@implementation CMsgPBContent

- (BOOL) hasFromSourceType {
  return !!hasFromSourceType_;
}
- (void) setHasFromSourceType:(BOOL) _value_ {
  hasFromSourceType_ = !!_value_;
}
@synthesize fromSourceType;
- (BOOL) hasToSourceType {
  return !!hasToSourceType_;
}
- (void) setHasToSourceType:(BOOL) _value_ {
  hasToSourceType_ = !!_value_;
}
@synthesize toSourceType;
- (BOOL) hasFromUid {
  return !!hasFromUid_;
}
- (void) setHasFromUid:(BOOL) _value_ {
  hasFromUid_ = !!_value_;
}
@synthesize fromUid;
- (BOOL) hasToUid {
  return !!hasToUid_;
}
- (void) setHasToUid:(BOOL) _value_ {
  hasToUid_ = !!_value_;
}
@synthesize toUid;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value_ {
  hasTime_ = !!_value_;
}
@synthesize time;
- (BOOL) hasMsgid {
  return !!hasMsgid_;
}
- (void) setHasMsgid:(BOOL) _value_ {
  hasMsgid_ = !!_value_;
}
@synthesize msgid;
- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) _value_ {
  hasMsgType_ = !!_value_;
}
@synthesize msgType;
- (BOOL) hasMsgMediaType {
  return !!hasMsgMediaType_;
}
- (void) setHasMsgMediaType:(BOOL) _value_ {
  hasMsgMediaType_ = !!_value_;
}
@synthesize msgMediaType;
- (BOOL) hasSyncFlag {
  return !!hasSyncFlag_;
}
- (void) setHasSyncFlag:(BOOL) _value_ {
  hasSyncFlag_ = !!_value_;
}
@synthesize syncFlag;
- (BOOL) hasMsgData {
  return !!hasMsgData_;
}
- (void) setHasMsgData:(BOOL) _value_ {
  hasMsgData_ = !!_value_;
}
@synthesize msgData;
- (BOOL) hasDetail {
  return !!hasDetail_;
}
- (void) setHasDetail:(BOOL) _value_ {
  hasDetail_ = !!_value_;
}
@synthesize detail;
- (instancetype) init {
  if ((self = [super init])) {
    self.fromSourceType = 0;
    self.toSourceType = 0;
    self.fromUid = 0L;
    self.toUid = 0L;
    self.time = 0L;
    self.msgid = 0L;
    self.msgType = 0;
    self.msgMediaType = 0;
    self.syncFlag = 0;
    self.msgData = @"";
    self.detail = @"";
  }
  return self;
}
static CMsgPBContent* defaultCMsgPBContentInstance = nil;
+ (void) initialize {
  if (self == [CMsgPBContent class]) {
    defaultCMsgPBContentInstance = [[CMsgPBContent alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgPBContentInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgPBContentInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFromSourceType) {
    [output writeUInt32:1 value:self.fromSourceType];
  }
  if (self.hasToSourceType) {
    [output writeUInt32:2 value:self.toSourceType];
  }
  if (self.hasFromUid) {
    [output writeUInt64:3 value:self.fromUid];
  }
  if (self.hasToUid) {
    [output writeUInt64:4 value:self.toUid];
  }
  if (self.hasTime) {
    [output writeUInt64:5 value:self.time];
  }
  if (self.hasMsgid) {
    [output writeUInt64:6 value:self.msgid];
  }
  if (self.hasMsgType) {
    [output writeUInt32:7 value:self.msgType];
  }
  if (self.hasMsgMediaType) {
    [output writeUInt32:8 value:self.msgMediaType];
  }
  if (self.hasSyncFlag) {
    [output writeUInt32:9 value:self.syncFlag];
  }
  if (self.hasMsgData) {
    [output writeString:10 value:self.msgData];
  }
  if (self.hasDetail) {
    [output writeString:11 value:self.detail];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFromSourceType) {
    size_ += computeUInt32Size(1, self.fromSourceType);
  }
  if (self.hasToSourceType) {
    size_ += computeUInt32Size(2, self.toSourceType);
  }
  if (self.hasFromUid) {
    size_ += computeUInt64Size(3, self.fromUid);
  }
  if (self.hasToUid) {
    size_ += computeUInt64Size(4, self.toUid);
  }
  if (self.hasTime) {
    size_ += computeUInt64Size(5, self.time);
  }
  if (self.hasMsgid) {
    size_ += computeUInt64Size(6, self.msgid);
  }
  if (self.hasMsgType) {
    size_ += computeUInt32Size(7, self.msgType);
  }
  if (self.hasMsgMediaType) {
    size_ += computeUInt32Size(8, self.msgMediaType);
  }
  if (self.hasSyncFlag) {
    size_ += computeUInt32Size(9, self.syncFlag);
  }
  if (self.hasMsgData) {
    size_ += computeStringSize(10, self.msgData);
  }
  if (self.hasDetail) {
    size_ += computeStringSize(11, self.detail);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgPBContent*) parseFromData:(NSData*) data {
  return (CMsgPBContent*)[[[CMsgPBContent builder] mergeFromData:data] build];
}
+ (CMsgPBContent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgPBContent*)[[[CMsgPBContent builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgPBContent*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgPBContent*)[[[CMsgPBContent builder] mergeFromInputStream:input] build];
}
+ (CMsgPBContent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgPBContent*)[[[CMsgPBContent builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgPBContent*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgPBContent*)[[[CMsgPBContent builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgPBContent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgPBContent*)[[[CMsgPBContent builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgPBContentBuilder*) builder {
  return [[CMsgPBContentBuilder alloc] init];
}
+ (CMsgPBContentBuilder*) builderWithPrototype:(CMsgPBContent*) prototype {
  return [[CMsgPBContent builder] mergeFrom:prototype];
}
- (CMsgPBContentBuilder*) builder {
  return [CMsgPBContent builder];
}
- (CMsgPBContentBuilder*) toBuilder {
  return [CMsgPBContent builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFromSourceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromSourceType", [NSNumber numberWithInteger:self.fromSourceType]];
  }
  if (self.hasToSourceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toSourceType", [NSNumber numberWithInteger:self.toSourceType]];
  }
  if (self.hasFromUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUid", [NSNumber numberWithLongLong:self.fromUid]];
  }
  if (self.hasToUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toUid", [NSNumber numberWithLongLong:self.toUid]];
  }
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithLongLong:self.time]];
  }
  if (self.hasMsgid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgid", [NSNumber numberWithLongLong:self.msgid]];
  }
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgType", [NSNumber numberWithInteger:self.msgType]];
  }
  if (self.hasMsgMediaType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgMediaType", [NSNumber numberWithInteger:self.msgMediaType]];
  }
  if (self.hasSyncFlag) {
    [output appendFormat:@"%@%@: %@\n", indent, @"syncFlag", [NSNumber numberWithInteger:self.syncFlag]];
  }
  if (self.hasMsgData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgData", self.msgData];
  }
  if (self.hasDetail) {
    [output appendFormat:@"%@%@: %@\n", indent, @"detail", self.detail];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgPBContent class]]) {
    return NO;
  }
  CMsgPBContent *otherMessage = other;
  return
      self.hasFromSourceType == otherMessage.hasFromSourceType &&
      (!self.hasFromSourceType || self.fromSourceType == otherMessage.fromSourceType) &&
      self.hasToSourceType == otherMessage.hasToSourceType &&
      (!self.hasToSourceType || self.toSourceType == otherMessage.toSourceType) &&
      self.hasFromUid == otherMessage.hasFromUid &&
      (!self.hasFromUid || self.fromUid == otherMessage.fromUid) &&
      self.hasToUid == otherMessage.hasToUid &&
      (!self.hasToUid || self.toUid == otherMessage.toUid) &&
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      self.hasMsgid == otherMessage.hasMsgid &&
      (!self.hasMsgid || self.msgid == otherMessage.msgid) &&
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      self.hasMsgMediaType == otherMessage.hasMsgMediaType &&
      (!self.hasMsgMediaType || self.msgMediaType == otherMessage.msgMediaType) &&
      self.hasSyncFlag == otherMessage.hasSyncFlag &&
      (!self.hasSyncFlag || self.syncFlag == otherMessage.syncFlag) &&
      self.hasMsgData == otherMessage.hasMsgData &&
      (!self.hasMsgData || [self.msgData isEqual:otherMessage.msgData]) &&
      self.hasDetail == otherMessage.hasDetail &&
      (!self.hasDetail || [self.detail isEqual:otherMessage.detail]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFromSourceType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.fromSourceType] hash];
  }
  if (self.hasToSourceType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.toSourceType] hash];
  }
  if (self.hasFromUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.fromUid] hash];
  }
  if (self.hasToUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.toUid] hash];
  }
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.time] hash];
  }
  if (self.hasMsgid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgid] hash];
  }
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgType] hash];
  }
  if (self.hasMsgMediaType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgMediaType] hash];
  }
  if (self.hasSyncFlag) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.syncFlag] hash];
  }
  if (self.hasMsgData) {
    hashCode = hashCode * 31 + [self.msgData hash];
  }
  if (self.hasDetail) {
    hashCode = hashCode * 31 + [self.detail hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgPBContentBuilder()
@property (strong) CMsgPBContent* resultCmsgPbcontent;
@end

@implementation CMsgPBContentBuilder
@synthesize resultCmsgPbcontent;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgPbcontent = [[CMsgPBContent alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgPbcontent;
}
- (CMsgPBContentBuilder*) clear {
  self.resultCmsgPbcontent = [[CMsgPBContent alloc] init];
  return self;
}
- (CMsgPBContentBuilder*) clone {
  return [CMsgPBContent builderWithPrototype:resultCmsgPbcontent];
}
- (CMsgPBContent*) defaultInstance {
  return [CMsgPBContent defaultInstance];
}
- (CMsgPBContent*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgPBContent*) buildPartial {
  CMsgPBContent* returnMe = resultCmsgPbcontent;
  self.resultCmsgPbcontent = nil;
  return returnMe;
}
- (CMsgPBContentBuilder*) mergeFrom:(CMsgPBContent*) other {
  if (other == [CMsgPBContent defaultInstance]) {
    return self;
  }
  if (other.hasFromSourceType) {
    [self setFromSourceType:other.fromSourceType];
  }
  if (other.hasToSourceType) {
    [self setToSourceType:other.toSourceType];
  }
  if (other.hasFromUid) {
    [self setFromUid:other.fromUid];
  }
  if (other.hasToUid) {
    [self setToUid:other.toUid];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasMsgid) {
    [self setMsgid:other.msgid];
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  if (other.hasMsgMediaType) {
    [self setMsgMediaType:other.msgMediaType];
  }
  if (other.hasSyncFlag) {
    [self setSyncFlag:other.syncFlag];
  }
  if (other.hasMsgData) {
    [self setMsgData:other.msgData];
  }
  if (other.hasDetail) {
    [self setDetail:other.detail];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgPBContentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgPBContentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFromSourceType:[input readUInt32]];
        break;
      }
      case 16: {
        [self setToSourceType:[input readUInt32]];
        break;
      }
      case 24: {
        [self setFromUid:[input readUInt64]];
        break;
      }
      case 32: {
        [self setToUid:[input readUInt64]];
        break;
      }
      case 40: {
        [self setTime:[input readUInt64]];
        break;
      }
      case 48: {
        [self setMsgid:[input readUInt64]];
        break;
      }
      case 56: {
        [self setMsgType:[input readUInt32]];
        break;
      }
      case 64: {
        [self setMsgMediaType:[input readUInt32]];
        break;
      }
      case 72: {
        [self setSyncFlag:[input readUInt32]];
        break;
      }
      case 82: {
        [self setMsgData:[input readString]];
        break;
      }
      case 90: {
        [self setDetail:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasFromSourceType {
  return resultCmsgPbcontent.hasFromSourceType;
}
- (UInt32) fromSourceType {
  return resultCmsgPbcontent.fromSourceType;
}
- (CMsgPBContentBuilder*) setFromSourceType:(UInt32) value {
  resultCmsgPbcontent.hasFromSourceType = YES;
  resultCmsgPbcontent.fromSourceType = value;
  return self;
}
- (CMsgPBContentBuilder*) clearFromSourceType {
  resultCmsgPbcontent.hasFromSourceType = NO;
  resultCmsgPbcontent.fromSourceType = 0;
  return self;
}
- (BOOL) hasToSourceType {
  return resultCmsgPbcontent.hasToSourceType;
}
- (UInt32) toSourceType {
  return resultCmsgPbcontent.toSourceType;
}
- (CMsgPBContentBuilder*) setToSourceType:(UInt32) value {
  resultCmsgPbcontent.hasToSourceType = YES;
  resultCmsgPbcontent.toSourceType = value;
  return self;
}
- (CMsgPBContentBuilder*) clearToSourceType {
  resultCmsgPbcontent.hasToSourceType = NO;
  resultCmsgPbcontent.toSourceType = 0;
  return self;
}
- (BOOL) hasFromUid {
  return resultCmsgPbcontent.hasFromUid;
}
- (UInt64) fromUid {
  return resultCmsgPbcontent.fromUid;
}
- (CMsgPBContentBuilder*) setFromUid:(UInt64) value {
  resultCmsgPbcontent.hasFromUid = YES;
  resultCmsgPbcontent.fromUid = value;
  return self;
}
- (CMsgPBContentBuilder*) clearFromUid {
  resultCmsgPbcontent.hasFromUid = NO;
  resultCmsgPbcontent.fromUid = 0L;
  return self;
}
- (BOOL) hasToUid {
  return resultCmsgPbcontent.hasToUid;
}
- (UInt64) toUid {
  return resultCmsgPbcontent.toUid;
}
- (CMsgPBContentBuilder*) setToUid:(UInt64) value {
  resultCmsgPbcontent.hasToUid = YES;
  resultCmsgPbcontent.toUid = value;
  return self;
}
- (CMsgPBContentBuilder*) clearToUid {
  resultCmsgPbcontent.hasToUid = NO;
  resultCmsgPbcontent.toUid = 0L;
  return self;
}
- (BOOL) hasTime {
  return resultCmsgPbcontent.hasTime;
}
- (UInt64) time {
  return resultCmsgPbcontent.time;
}
- (CMsgPBContentBuilder*) setTime:(UInt64) value {
  resultCmsgPbcontent.hasTime = YES;
  resultCmsgPbcontent.time = value;
  return self;
}
- (CMsgPBContentBuilder*) clearTime {
  resultCmsgPbcontent.hasTime = NO;
  resultCmsgPbcontent.time = 0L;
  return self;
}
- (BOOL) hasMsgid {
  return resultCmsgPbcontent.hasMsgid;
}
- (UInt64) msgid {
  return resultCmsgPbcontent.msgid;
}
- (CMsgPBContentBuilder*) setMsgid:(UInt64) value {
  resultCmsgPbcontent.hasMsgid = YES;
  resultCmsgPbcontent.msgid = value;
  return self;
}
- (CMsgPBContentBuilder*) clearMsgid {
  resultCmsgPbcontent.hasMsgid = NO;
  resultCmsgPbcontent.msgid = 0L;
  return self;
}
- (BOOL) hasMsgType {
  return resultCmsgPbcontent.hasMsgType;
}
- (UInt32) msgType {
  return resultCmsgPbcontent.msgType;
}
- (CMsgPBContentBuilder*) setMsgType:(UInt32) value {
  resultCmsgPbcontent.hasMsgType = YES;
  resultCmsgPbcontent.msgType = value;
  return self;
}
- (CMsgPBContentBuilder*) clearMsgType {
  resultCmsgPbcontent.hasMsgType = NO;
  resultCmsgPbcontent.msgType = 0;
  return self;
}
- (BOOL) hasMsgMediaType {
  return resultCmsgPbcontent.hasMsgMediaType;
}
- (UInt32) msgMediaType {
  return resultCmsgPbcontent.msgMediaType;
}
- (CMsgPBContentBuilder*) setMsgMediaType:(UInt32) value {
  resultCmsgPbcontent.hasMsgMediaType = YES;
  resultCmsgPbcontent.msgMediaType = value;
  return self;
}
- (CMsgPBContentBuilder*) clearMsgMediaType {
  resultCmsgPbcontent.hasMsgMediaType = NO;
  resultCmsgPbcontent.msgMediaType = 0;
  return self;
}
- (BOOL) hasSyncFlag {
  return resultCmsgPbcontent.hasSyncFlag;
}
- (UInt32) syncFlag {
  return resultCmsgPbcontent.syncFlag;
}
- (CMsgPBContentBuilder*) setSyncFlag:(UInt32) value {
  resultCmsgPbcontent.hasSyncFlag = YES;
  resultCmsgPbcontent.syncFlag = value;
  return self;
}
- (CMsgPBContentBuilder*) clearSyncFlag {
  resultCmsgPbcontent.hasSyncFlag = NO;
  resultCmsgPbcontent.syncFlag = 0;
  return self;
}
- (BOOL) hasMsgData {
  return resultCmsgPbcontent.hasMsgData;
}
- (NSString*) msgData {
  return resultCmsgPbcontent.msgData;
}
- (CMsgPBContentBuilder*) setMsgData:(NSString*) value {
  resultCmsgPbcontent.hasMsgData = YES;
  resultCmsgPbcontent.msgData = value;
  return self;
}
- (CMsgPBContentBuilder*) clearMsgData {
  resultCmsgPbcontent.hasMsgData = NO;
  resultCmsgPbcontent.msgData = @"";
  return self;
}
- (BOOL) hasDetail {
  return resultCmsgPbcontent.hasDetail;
}
- (NSString*) detail {
  return resultCmsgPbcontent.detail;
}
- (CMsgPBContentBuilder*) setDetail:(NSString*) value {
  resultCmsgPbcontent.hasDetail = YES;
  resultCmsgPbcontent.detail = value;
  return self;
}
- (CMsgPBContentBuilder*) clearDetail {
  resultCmsgPbcontent.hasDetail = NO;
  resultCmsgPbcontent.detail = @"";
  return self;
}
@end

@interface CMsgSendResp ()
@end

@implementation CMsgSendResp

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgSendResp* defaultCMsgSendRespInstance = nil;
+ (void) initialize {
  if (self == [CMsgSendResp class]) {
    defaultCMsgSendRespInstance = [[CMsgSendResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgSendRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgSendRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgSendResp*) parseFromData:(NSData*) data {
  return (CMsgSendResp*)[[[CMsgSendResp builder] mergeFromData:data] build];
}
+ (CMsgSendResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgSendResp*)[[[CMsgSendResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgSendResp*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgSendResp*)[[[CMsgSendResp builder] mergeFromInputStream:input] build];
}
+ (CMsgSendResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgSendResp*)[[[CMsgSendResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgSendResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgSendResp*)[[[CMsgSendResp builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgSendResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgSendResp*)[[[CMsgSendResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgSendRespBuilder*) builder {
  return [[CMsgSendRespBuilder alloc] init];
}
+ (CMsgSendRespBuilder*) builderWithPrototype:(CMsgSendResp*) prototype {
  return [[CMsgSendResp builder] mergeFrom:prototype];
}
- (CMsgSendRespBuilder*) builder {
  return [CMsgSendResp builder];
}
- (CMsgSendRespBuilder*) toBuilder {
  return [CMsgSendResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgSendResp class]]) {
    return NO;
  }
  CMsgSendResp *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgSendRespBuilder()
@property (strong) CMsgSendResp* resultCmsgSendResp;
@end

@implementation CMsgSendRespBuilder
@synthesize resultCmsgSendResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgSendResp = [[CMsgSendResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgSendResp;
}
- (CMsgSendRespBuilder*) clear {
  self.resultCmsgSendResp = [[CMsgSendResp alloc] init];
  return self;
}
- (CMsgSendRespBuilder*) clone {
  return [CMsgSendResp builderWithPrototype:resultCmsgSendResp];
}
- (CMsgSendResp*) defaultInstance {
  return [CMsgSendResp defaultInstance];
}
- (CMsgSendResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgSendResp*) buildPartial {
  CMsgSendResp* returnMe = resultCmsgSendResp;
  self.resultCmsgSendResp = nil;
  return returnMe;
}
- (CMsgSendRespBuilder*) mergeFrom:(CMsgSendResp*) other {
  if (other == [CMsgSendResp defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgSendRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgSendRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgAckContent ()
@property UInt32 ackSourceType;
@property UInt64 ackUid;
@property UInt64 ackMsgid;
@end

@implementation CMsgAckContent

- (BOOL) hasAckSourceType {
  return !!hasAckSourceType_;
}
- (void) setHasAckSourceType:(BOOL) _value_ {
  hasAckSourceType_ = !!_value_;
}
@synthesize ackSourceType;
- (BOOL) hasAckUid {
  return !!hasAckUid_;
}
- (void) setHasAckUid:(BOOL) _value_ {
  hasAckUid_ = !!_value_;
}
@synthesize ackUid;
- (BOOL) hasAckMsgid {
  return !!hasAckMsgid_;
}
- (void) setHasAckMsgid:(BOOL) _value_ {
  hasAckMsgid_ = !!_value_;
}
@synthesize ackMsgid;
- (instancetype) init {
  if ((self = [super init])) {
    self.ackSourceType = 0;
    self.ackUid = 0L;
    self.ackMsgid = 0L;
  }
  return self;
}
static CMsgAckContent* defaultCMsgAckContentInstance = nil;
+ (void) initialize {
  if (self == [CMsgAckContent class]) {
    defaultCMsgAckContentInstance = [[CMsgAckContent alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgAckContentInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgAckContentInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAckSourceType) {
    [output writeUInt32:1 value:self.ackSourceType];
  }
  if (self.hasAckUid) {
    [output writeUInt64:2 value:self.ackUid];
  }
  if (self.hasAckMsgid) {
    [output writeUInt64:3 value:self.ackMsgid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAckSourceType) {
    size_ += computeUInt32Size(1, self.ackSourceType);
  }
  if (self.hasAckUid) {
    size_ += computeUInt64Size(2, self.ackUid);
  }
  if (self.hasAckMsgid) {
    size_ += computeUInt64Size(3, self.ackMsgid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgAckContent*) parseFromData:(NSData*) data {
  return (CMsgAckContent*)[[[CMsgAckContent builder] mergeFromData:data] build];
}
+ (CMsgAckContent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAckContent*)[[[CMsgAckContent builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgAckContent*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgAckContent*)[[[CMsgAckContent builder] mergeFromInputStream:input] build];
}
+ (CMsgAckContent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAckContent*)[[[CMsgAckContent builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgAckContent*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgAckContent*)[[[CMsgAckContent builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgAckContent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAckContent*)[[[CMsgAckContent builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgAckContentBuilder*) builder {
  return [[CMsgAckContentBuilder alloc] init];
}
+ (CMsgAckContentBuilder*) builderWithPrototype:(CMsgAckContent*) prototype {
  return [[CMsgAckContent builder] mergeFrom:prototype];
}
- (CMsgAckContentBuilder*) builder {
  return [CMsgAckContent builder];
}
- (CMsgAckContentBuilder*) toBuilder {
  return [CMsgAckContent builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAckSourceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ackSourceType", [NSNumber numberWithInteger:self.ackSourceType]];
  }
  if (self.hasAckUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ackUid", [NSNumber numberWithLongLong:self.ackUid]];
  }
  if (self.hasAckMsgid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ackMsgid", [NSNumber numberWithLongLong:self.ackMsgid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgAckContent class]]) {
    return NO;
  }
  CMsgAckContent *otherMessage = other;
  return
      self.hasAckSourceType == otherMessage.hasAckSourceType &&
      (!self.hasAckSourceType || self.ackSourceType == otherMessage.ackSourceType) &&
      self.hasAckUid == otherMessage.hasAckUid &&
      (!self.hasAckUid || self.ackUid == otherMessage.ackUid) &&
      self.hasAckMsgid == otherMessage.hasAckMsgid &&
      (!self.hasAckMsgid || self.ackMsgid == otherMessage.ackMsgid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAckSourceType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ackSourceType] hash];
  }
  if (self.hasAckUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.ackUid] hash];
  }
  if (self.hasAckMsgid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.ackMsgid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgAckContentBuilder()
@property (strong) CMsgAckContent* resultCmsgAckContent;
@end

@implementation CMsgAckContentBuilder
@synthesize resultCmsgAckContent;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgAckContent = [[CMsgAckContent alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgAckContent;
}
- (CMsgAckContentBuilder*) clear {
  self.resultCmsgAckContent = [[CMsgAckContent alloc] init];
  return self;
}
- (CMsgAckContentBuilder*) clone {
  return [CMsgAckContent builderWithPrototype:resultCmsgAckContent];
}
- (CMsgAckContent*) defaultInstance {
  return [CMsgAckContent defaultInstance];
}
- (CMsgAckContent*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgAckContent*) buildPartial {
  CMsgAckContent* returnMe = resultCmsgAckContent;
  self.resultCmsgAckContent = nil;
  return returnMe;
}
- (CMsgAckContentBuilder*) mergeFrom:(CMsgAckContent*) other {
  if (other == [CMsgAckContent defaultInstance]) {
    return self;
  }
  if (other.hasAckSourceType) {
    [self setAckSourceType:other.ackSourceType];
  }
  if (other.hasAckUid) {
    [self setAckUid:other.ackUid];
  }
  if (other.hasAckMsgid) {
    [self setAckMsgid:other.ackMsgid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgAckContentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgAckContentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAckSourceType:[input readUInt32]];
        break;
      }
      case 16: {
        [self setAckUid:[input readUInt64]];
        break;
      }
      case 24: {
        [self setAckMsgid:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasAckSourceType {
  return resultCmsgAckContent.hasAckSourceType;
}
- (UInt32) ackSourceType {
  return resultCmsgAckContent.ackSourceType;
}
- (CMsgAckContentBuilder*) setAckSourceType:(UInt32) value {
  resultCmsgAckContent.hasAckSourceType = YES;
  resultCmsgAckContent.ackSourceType = value;
  return self;
}
- (CMsgAckContentBuilder*) clearAckSourceType {
  resultCmsgAckContent.hasAckSourceType = NO;
  resultCmsgAckContent.ackSourceType = 0;
  return self;
}
- (BOOL) hasAckUid {
  return resultCmsgAckContent.hasAckUid;
}
- (UInt64) ackUid {
  return resultCmsgAckContent.ackUid;
}
- (CMsgAckContentBuilder*) setAckUid:(UInt64) value {
  resultCmsgAckContent.hasAckUid = YES;
  resultCmsgAckContent.ackUid = value;
  return self;
}
- (CMsgAckContentBuilder*) clearAckUid {
  resultCmsgAckContent.hasAckUid = NO;
  resultCmsgAckContent.ackUid = 0L;
  return self;
}
- (BOOL) hasAckMsgid {
  return resultCmsgAckContent.hasAckMsgid;
}
- (UInt64) ackMsgid {
  return resultCmsgAckContent.ackMsgid;
}
- (CMsgAckContentBuilder*) setAckMsgid:(UInt64) value {
  resultCmsgAckContent.hasAckMsgid = YES;
  resultCmsgAckContent.ackMsgid = value;
  return self;
}
- (CMsgAckContentBuilder*) clearAckMsgid {
  resultCmsgAckContent.hasAckMsgid = NO;
  resultCmsgAckContent.ackMsgid = 0L;
  return self;
}
@end

@interface CMsgSendAckResp ()
@end

@implementation CMsgSendAckResp

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgSendAckResp* defaultCMsgSendAckRespInstance = nil;
+ (void) initialize {
  if (self == [CMsgSendAckResp class]) {
    defaultCMsgSendAckRespInstance = [[CMsgSendAckResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgSendAckRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgSendAckRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgSendAckResp*) parseFromData:(NSData*) data {
  return (CMsgSendAckResp*)[[[CMsgSendAckResp builder] mergeFromData:data] build];
}
+ (CMsgSendAckResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgSendAckResp*)[[[CMsgSendAckResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgSendAckResp*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgSendAckResp*)[[[CMsgSendAckResp builder] mergeFromInputStream:input] build];
}
+ (CMsgSendAckResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgSendAckResp*)[[[CMsgSendAckResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgSendAckResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgSendAckResp*)[[[CMsgSendAckResp builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgSendAckResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgSendAckResp*)[[[CMsgSendAckResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgSendAckRespBuilder*) builder {
  return [[CMsgSendAckRespBuilder alloc] init];
}
+ (CMsgSendAckRespBuilder*) builderWithPrototype:(CMsgSendAckResp*) prototype {
  return [[CMsgSendAckResp builder] mergeFrom:prototype];
}
- (CMsgSendAckRespBuilder*) builder {
  return [CMsgSendAckResp builder];
}
- (CMsgSendAckRespBuilder*) toBuilder {
  return [CMsgSendAckResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgSendAckResp class]]) {
    return NO;
  }
  CMsgSendAckResp *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgSendAckRespBuilder()
@property (strong) CMsgSendAckResp* resultCmsgSendAckResp;
@end

@implementation CMsgSendAckRespBuilder
@synthesize resultCmsgSendAckResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgSendAckResp = [[CMsgSendAckResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgSendAckResp;
}
- (CMsgSendAckRespBuilder*) clear {
  self.resultCmsgSendAckResp = [[CMsgSendAckResp alloc] init];
  return self;
}
- (CMsgSendAckRespBuilder*) clone {
  return [CMsgSendAckResp builderWithPrototype:resultCmsgSendAckResp];
}
- (CMsgSendAckResp*) defaultInstance {
  return [CMsgSendAckResp defaultInstance];
}
- (CMsgSendAckResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgSendAckResp*) buildPartial {
  CMsgSendAckResp* returnMe = resultCmsgSendAckResp;
  self.resultCmsgSendAckResp = nil;
  return returnMe;
}
- (CMsgSendAckRespBuilder*) mergeFrom:(CMsgSendAckResp*) other {
  if (other == [CMsgSendAckResp defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgSendAckRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgSendAckRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgCommonReq ()
@property UInt32 fromSourceType;
@property UInt64 fromUid;
@property UInt64 toUid;
@property UInt64 time;
@property UInt64 msgid;
@property UInt32 msgType;
@property (strong) NSData* msgData;
@end

@implementation CMsgCommonReq

- (BOOL) hasFromSourceType {
  return !!hasFromSourceType_;
}
- (void) setHasFromSourceType:(BOOL) _value_ {
  hasFromSourceType_ = !!_value_;
}
@synthesize fromSourceType;
- (BOOL) hasFromUid {
  return !!hasFromUid_;
}
- (void) setHasFromUid:(BOOL) _value_ {
  hasFromUid_ = !!_value_;
}
@synthesize fromUid;
- (BOOL) hasToUid {
  return !!hasToUid_;
}
- (void) setHasToUid:(BOOL) _value_ {
  hasToUid_ = !!_value_;
}
@synthesize toUid;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value_ {
  hasTime_ = !!_value_;
}
@synthesize time;
- (BOOL) hasMsgid {
  return !!hasMsgid_;
}
- (void) setHasMsgid:(BOOL) _value_ {
  hasMsgid_ = !!_value_;
}
@synthesize msgid;
- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) _value_ {
  hasMsgType_ = !!_value_;
}
@synthesize msgType;
- (BOOL) hasMsgData {
  return !!hasMsgData_;
}
- (void) setHasMsgData:(BOOL) _value_ {
  hasMsgData_ = !!_value_;
}
@synthesize msgData;
- (instancetype) init {
  if ((self = [super init])) {
    self.fromSourceType = 0;
    self.fromUid = 0L;
    self.toUid = 0L;
    self.time = 0L;
    self.msgid = 0L;
    self.msgType = 0;
    self.msgData = [NSData data];
  }
  return self;
}
static CMsgCommonReq* defaultCMsgCommonReqInstance = nil;
+ (void) initialize {
  if (self == [CMsgCommonReq class]) {
    defaultCMsgCommonReqInstance = [[CMsgCommonReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgCommonReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgCommonReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFromSourceType) {
    [output writeUInt32:1 value:self.fromSourceType];
  }
  if (self.hasFromUid) {
    [output writeUInt64:2 value:self.fromUid];
  }
  if (self.hasToUid) {
    [output writeUInt64:3 value:self.toUid];
  }
  if (self.hasTime) {
    [output writeUInt64:4 value:self.time];
  }
  if (self.hasMsgid) {
    [output writeUInt64:5 value:self.msgid];
  }
  if (self.hasMsgType) {
    [output writeUInt32:6 value:self.msgType];
  }
  if (self.hasMsgData) {
    [output writeData:7 value:self.msgData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFromSourceType) {
    size_ += computeUInt32Size(1, self.fromSourceType);
  }
  if (self.hasFromUid) {
    size_ += computeUInt64Size(2, self.fromUid);
  }
  if (self.hasToUid) {
    size_ += computeUInt64Size(3, self.toUid);
  }
  if (self.hasTime) {
    size_ += computeUInt64Size(4, self.time);
  }
  if (self.hasMsgid) {
    size_ += computeUInt64Size(5, self.msgid);
  }
  if (self.hasMsgType) {
    size_ += computeUInt32Size(6, self.msgType);
  }
  if (self.hasMsgData) {
    size_ += computeDataSize(7, self.msgData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgCommonReq*) parseFromData:(NSData*) data {
  return (CMsgCommonReq*)[[[CMsgCommonReq builder] mergeFromData:data] build];
}
+ (CMsgCommonReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgCommonReq*)[[[CMsgCommonReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgCommonReq*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgCommonReq*)[[[CMsgCommonReq builder] mergeFromInputStream:input] build];
}
+ (CMsgCommonReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgCommonReq*)[[[CMsgCommonReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgCommonReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgCommonReq*)[[[CMsgCommonReq builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgCommonReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgCommonReq*)[[[CMsgCommonReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgCommonReqBuilder*) builder {
  return [[CMsgCommonReqBuilder alloc] init];
}
+ (CMsgCommonReqBuilder*) builderWithPrototype:(CMsgCommonReq*) prototype {
  return [[CMsgCommonReq builder] mergeFrom:prototype];
}
- (CMsgCommonReqBuilder*) builder {
  return [CMsgCommonReq builder];
}
- (CMsgCommonReqBuilder*) toBuilder {
  return [CMsgCommonReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFromSourceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromSourceType", [NSNumber numberWithInteger:self.fromSourceType]];
  }
  if (self.hasFromUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUid", [NSNumber numberWithLongLong:self.fromUid]];
  }
  if (self.hasToUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toUid", [NSNumber numberWithLongLong:self.toUid]];
  }
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithLongLong:self.time]];
  }
  if (self.hasMsgid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgid", [NSNumber numberWithLongLong:self.msgid]];
  }
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgType", [NSNumber numberWithInteger:self.msgType]];
  }
  if (self.hasMsgData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgData", self.msgData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgCommonReq class]]) {
    return NO;
  }
  CMsgCommonReq *otherMessage = other;
  return
      self.hasFromSourceType == otherMessage.hasFromSourceType &&
      (!self.hasFromSourceType || self.fromSourceType == otherMessage.fromSourceType) &&
      self.hasFromUid == otherMessage.hasFromUid &&
      (!self.hasFromUid || self.fromUid == otherMessage.fromUid) &&
      self.hasToUid == otherMessage.hasToUid &&
      (!self.hasToUid || self.toUid == otherMessage.toUid) &&
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      self.hasMsgid == otherMessage.hasMsgid &&
      (!self.hasMsgid || self.msgid == otherMessage.msgid) &&
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      self.hasMsgData == otherMessage.hasMsgData &&
      (!self.hasMsgData || [self.msgData isEqual:otherMessage.msgData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFromSourceType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.fromSourceType] hash];
  }
  if (self.hasFromUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.fromUid] hash];
  }
  if (self.hasToUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.toUid] hash];
  }
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.time] hash];
  }
  if (self.hasMsgid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgid] hash];
  }
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgType] hash];
  }
  if (self.hasMsgData) {
    hashCode = hashCode * 31 + [self.msgData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgCommonReqBuilder()
@property (strong) CMsgCommonReq* resultCmsgCommonReq;
@end

@implementation CMsgCommonReqBuilder
@synthesize resultCmsgCommonReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgCommonReq = [[CMsgCommonReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgCommonReq;
}
- (CMsgCommonReqBuilder*) clear {
  self.resultCmsgCommonReq = [[CMsgCommonReq alloc] init];
  return self;
}
- (CMsgCommonReqBuilder*) clone {
  return [CMsgCommonReq builderWithPrototype:resultCmsgCommonReq];
}
- (CMsgCommonReq*) defaultInstance {
  return [CMsgCommonReq defaultInstance];
}
- (CMsgCommonReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgCommonReq*) buildPartial {
  CMsgCommonReq* returnMe = resultCmsgCommonReq;
  self.resultCmsgCommonReq = nil;
  return returnMe;
}
- (CMsgCommonReqBuilder*) mergeFrom:(CMsgCommonReq*) other {
  if (other == [CMsgCommonReq defaultInstance]) {
    return self;
  }
  if (other.hasFromSourceType) {
    [self setFromSourceType:other.fromSourceType];
  }
  if (other.hasFromUid) {
    [self setFromUid:other.fromUid];
  }
  if (other.hasToUid) {
    [self setToUid:other.toUid];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasMsgid) {
    [self setMsgid:other.msgid];
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  if (other.hasMsgData) {
    [self setMsgData:other.msgData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgCommonReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgCommonReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFromSourceType:[input readUInt32]];
        break;
      }
      case 16: {
        [self setFromUid:[input readUInt64]];
        break;
      }
      case 24: {
        [self setToUid:[input readUInt64]];
        break;
      }
      case 32: {
        [self setTime:[input readUInt64]];
        break;
      }
      case 40: {
        [self setMsgid:[input readUInt64]];
        break;
      }
      case 48: {
        [self setMsgType:[input readUInt32]];
        break;
      }
      case 58: {
        [self setMsgData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasFromSourceType {
  return resultCmsgCommonReq.hasFromSourceType;
}
- (UInt32) fromSourceType {
  return resultCmsgCommonReq.fromSourceType;
}
- (CMsgCommonReqBuilder*) setFromSourceType:(UInt32) value {
  resultCmsgCommonReq.hasFromSourceType = YES;
  resultCmsgCommonReq.fromSourceType = value;
  return self;
}
- (CMsgCommonReqBuilder*) clearFromSourceType {
  resultCmsgCommonReq.hasFromSourceType = NO;
  resultCmsgCommonReq.fromSourceType = 0;
  return self;
}
- (BOOL) hasFromUid {
  return resultCmsgCommonReq.hasFromUid;
}
- (UInt64) fromUid {
  return resultCmsgCommonReq.fromUid;
}
- (CMsgCommonReqBuilder*) setFromUid:(UInt64) value {
  resultCmsgCommonReq.hasFromUid = YES;
  resultCmsgCommonReq.fromUid = value;
  return self;
}
- (CMsgCommonReqBuilder*) clearFromUid {
  resultCmsgCommonReq.hasFromUid = NO;
  resultCmsgCommonReq.fromUid = 0L;
  return self;
}
- (BOOL) hasToUid {
  return resultCmsgCommonReq.hasToUid;
}
- (UInt64) toUid {
  return resultCmsgCommonReq.toUid;
}
- (CMsgCommonReqBuilder*) setToUid:(UInt64) value {
  resultCmsgCommonReq.hasToUid = YES;
  resultCmsgCommonReq.toUid = value;
  return self;
}
- (CMsgCommonReqBuilder*) clearToUid {
  resultCmsgCommonReq.hasToUid = NO;
  resultCmsgCommonReq.toUid = 0L;
  return self;
}
- (BOOL) hasTime {
  return resultCmsgCommonReq.hasTime;
}
- (UInt64) time {
  return resultCmsgCommonReq.time;
}
- (CMsgCommonReqBuilder*) setTime:(UInt64) value {
  resultCmsgCommonReq.hasTime = YES;
  resultCmsgCommonReq.time = value;
  return self;
}
- (CMsgCommonReqBuilder*) clearTime {
  resultCmsgCommonReq.hasTime = NO;
  resultCmsgCommonReq.time = 0L;
  return self;
}
- (BOOL) hasMsgid {
  return resultCmsgCommonReq.hasMsgid;
}
- (UInt64) msgid {
  return resultCmsgCommonReq.msgid;
}
- (CMsgCommonReqBuilder*) setMsgid:(UInt64) value {
  resultCmsgCommonReq.hasMsgid = YES;
  resultCmsgCommonReq.msgid = value;
  return self;
}
- (CMsgCommonReqBuilder*) clearMsgid {
  resultCmsgCommonReq.hasMsgid = NO;
  resultCmsgCommonReq.msgid = 0L;
  return self;
}
- (BOOL) hasMsgType {
  return resultCmsgCommonReq.hasMsgType;
}
- (UInt32) msgType {
  return resultCmsgCommonReq.msgType;
}
- (CMsgCommonReqBuilder*) setMsgType:(UInt32) value {
  resultCmsgCommonReq.hasMsgType = YES;
  resultCmsgCommonReq.msgType = value;
  return self;
}
- (CMsgCommonReqBuilder*) clearMsgType {
  resultCmsgCommonReq.hasMsgType = NO;
  resultCmsgCommonReq.msgType = 0;
  return self;
}
- (BOOL) hasMsgData {
  return resultCmsgCommonReq.hasMsgData;
}
- (NSData*) msgData {
  return resultCmsgCommonReq.msgData;
}
- (CMsgCommonReqBuilder*) setMsgData:(NSData*) value {
  resultCmsgCommonReq.hasMsgData = YES;
  resultCmsgCommonReq.msgData = value;
  return self;
}
- (CMsgCommonReqBuilder*) clearMsgData {
  resultCmsgCommonReq.hasMsgData = NO;
  resultCmsgCommonReq.msgData = [NSData data];
  return self;
}
@end

@interface CMsgCommonResp ()
@end

@implementation CMsgCommonResp

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgCommonResp* defaultCMsgCommonRespInstance = nil;
+ (void) initialize {
  if (self == [CMsgCommonResp class]) {
    defaultCMsgCommonRespInstance = [[CMsgCommonResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgCommonRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgCommonRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgCommonResp*) parseFromData:(NSData*) data {
  return (CMsgCommonResp*)[[[CMsgCommonResp builder] mergeFromData:data] build];
}
+ (CMsgCommonResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgCommonResp*)[[[CMsgCommonResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgCommonResp*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgCommonResp*)[[[CMsgCommonResp builder] mergeFromInputStream:input] build];
}
+ (CMsgCommonResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgCommonResp*)[[[CMsgCommonResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgCommonResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgCommonResp*)[[[CMsgCommonResp builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgCommonResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgCommonResp*)[[[CMsgCommonResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgCommonRespBuilder*) builder {
  return [[CMsgCommonRespBuilder alloc] init];
}
+ (CMsgCommonRespBuilder*) builderWithPrototype:(CMsgCommonResp*) prototype {
  return [[CMsgCommonResp builder] mergeFrom:prototype];
}
- (CMsgCommonRespBuilder*) builder {
  return [CMsgCommonResp builder];
}
- (CMsgCommonRespBuilder*) toBuilder {
  return [CMsgCommonResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgCommonResp class]]) {
    return NO;
  }
  CMsgCommonResp *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgCommonRespBuilder()
@property (strong) CMsgCommonResp* resultCmsgCommonResp;
@end

@implementation CMsgCommonRespBuilder
@synthesize resultCmsgCommonResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgCommonResp = [[CMsgCommonResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgCommonResp;
}
- (CMsgCommonRespBuilder*) clear {
  self.resultCmsgCommonResp = [[CMsgCommonResp alloc] init];
  return self;
}
- (CMsgCommonRespBuilder*) clone {
  return [CMsgCommonResp builderWithPrototype:resultCmsgCommonResp];
}
- (CMsgCommonResp*) defaultInstance {
  return [CMsgCommonResp defaultInstance];
}
- (CMsgCommonResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgCommonResp*) buildPartial {
  CMsgCommonResp* returnMe = resultCmsgCommonResp;
  self.resultCmsgCommonResp = nil;
  return returnMe;
}
- (CMsgCommonRespBuilder*) mergeFrom:(CMsgCommonResp*) other {
  if (other == [CMsgCommonResp defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgCommonRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgCommonRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgGetOfflineMsgReq ()
@property UInt32 msgType;
@property UInt32 limit;
@property UInt64 startMsgid;
@property UInt64 startTime;
@end

@implementation CMsgGetOfflineMsgReq

- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) _value_ {
  hasMsgType_ = !!_value_;
}
@synthesize msgType;
- (BOOL) hasLimit {
  return !!hasLimit_;
}
- (void) setHasLimit:(BOOL) _value_ {
  hasLimit_ = !!_value_;
}
@synthesize limit;
- (BOOL) hasStartMsgid {
  return !!hasStartMsgid_;
}
- (void) setHasStartMsgid:(BOOL) _value_ {
  hasStartMsgid_ = !!_value_;
}
@synthesize startMsgid;
- (BOOL) hasStartTime {
  return !!hasStartTime_;
}
- (void) setHasStartTime:(BOOL) _value_ {
  hasStartTime_ = !!_value_;
}
@synthesize startTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgType = 0;
    self.limit = 0;
    self.startMsgid = 0L;
    self.startTime = 0L;
  }
  return self;
}
static CMsgGetOfflineMsgReq* defaultCMsgGetOfflineMsgReqInstance = nil;
+ (void) initialize {
  if (self == [CMsgGetOfflineMsgReq class]) {
    defaultCMsgGetOfflineMsgReqInstance = [[CMsgGetOfflineMsgReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgGetOfflineMsgReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgGetOfflineMsgReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgType) {
    [output writeUInt32:1 value:self.msgType];
  }
  if (self.hasLimit) {
    [output writeUInt32:2 value:self.limit];
  }
  if (self.hasStartMsgid) {
    [output writeUInt64:3 value:self.startMsgid];
  }
  if (self.hasStartTime) {
    [output writeUInt64:4 value:self.startTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgType) {
    size_ += computeUInt32Size(1, self.msgType);
  }
  if (self.hasLimit) {
    size_ += computeUInt32Size(2, self.limit);
  }
  if (self.hasStartMsgid) {
    size_ += computeUInt64Size(3, self.startMsgid);
  }
  if (self.hasStartTime) {
    size_ += computeUInt64Size(4, self.startTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGetOfflineMsgReq*) parseFromData:(NSData*) data {
  return (CMsgGetOfflineMsgReq*)[[[CMsgGetOfflineMsgReq builder] mergeFromData:data] build];
}
+ (CMsgGetOfflineMsgReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineMsgReq*)[[[CMsgGetOfflineMsgReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineMsgReq*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGetOfflineMsgReq*)[[[CMsgGetOfflineMsgReq builder] mergeFromInputStream:input] build];
}
+ (CMsgGetOfflineMsgReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineMsgReq*)[[[CMsgGetOfflineMsgReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGetOfflineMsgReq*)[[[CMsgGetOfflineMsgReq builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGetOfflineMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineMsgReq*)[[[CMsgGetOfflineMsgReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineMsgReqBuilder*) builder {
  return [[CMsgGetOfflineMsgReqBuilder alloc] init];
}
+ (CMsgGetOfflineMsgReqBuilder*) builderWithPrototype:(CMsgGetOfflineMsgReq*) prototype {
  return [[CMsgGetOfflineMsgReq builder] mergeFrom:prototype];
}
- (CMsgGetOfflineMsgReqBuilder*) builder {
  return [CMsgGetOfflineMsgReq builder];
}
- (CMsgGetOfflineMsgReqBuilder*) toBuilder {
  return [CMsgGetOfflineMsgReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgType", [NSNumber numberWithInteger:self.msgType]];
  }
  if (self.hasLimit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"limit", [NSNumber numberWithInteger:self.limit]];
  }
  if (self.hasStartMsgid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startMsgid", [NSNumber numberWithLongLong:self.startMsgid]];
  }
  if (self.hasStartTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startTime", [NSNumber numberWithLongLong:self.startTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGetOfflineMsgReq class]]) {
    return NO;
  }
  CMsgGetOfflineMsgReq *otherMessage = other;
  return
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      self.hasLimit == otherMessage.hasLimit &&
      (!self.hasLimit || self.limit == otherMessage.limit) &&
      self.hasStartMsgid == otherMessage.hasStartMsgid &&
      (!self.hasStartMsgid || self.startMsgid == otherMessage.startMsgid) &&
      self.hasStartTime == otherMessage.hasStartTime &&
      (!self.hasStartTime || self.startTime == otherMessage.startTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgType] hash];
  }
  if (self.hasLimit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.limit] hash];
  }
  if (self.hasStartMsgid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.startMsgid] hash];
  }
  if (self.hasStartTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.startTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGetOfflineMsgReqBuilder()
@property (strong) CMsgGetOfflineMsgReq* resultCmsgGetOfflineMsgReq;
@end

@implementation CMsgGetOfflineMsgReqBuilder
@synthesize resultCmsgGetOfflineMsgReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgGetOfflineMsgReq = [[CMsgGetOfflineMsgReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgGetOfflineMsgReq;
}
- (CMsgGetOfflineMsgReqBuilder*) clear {
  self.resultCmsgGetOfflineMsgReq = [[CMsgGetOfflineMsgReq alloc] init];
  return self;
}
- (CMsgGetOfflineMsgReqBuilder*) clone {
  return [CMsgGetOfflineMsgReq builderWithPrototype:resultCmsgGetOfflineMsgReq];
}
- (CMsgGetOfflineMsgReq*) defaultInstance {
  return [CMsgGetOfflineMsgReq defaultInstance];
}
- (CMsgGetOfflineMsgReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGetOfflineMsgReq*) buildPartial {
  CMsgGetOfflineMsgReq* returnMe = resultCmsgGetOfflineMsgReq;
  self.resultCmsgGetOfflineMsgReq = nil;
  return returnMe;
}
- (CMsgGetOfflineMsgReqBuilder*) mergeFrom:(CMsgGetOfflineMsgReq*) other {
  if (other == [CMsgGetOfflineMsgReq defaultInstance]) {
    return self;
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  if (other.hasLimit) {
    [self setLimit:other.limit];
  }
  if (other.hasStartMsgid) {
    [self setStartMsgid:other.startMsgid];
  }
  if (other.hasStartTime) {
    [self setStartTime:other.startTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGetOfflineMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGetOfflineMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMsgType:[input readUInt32]];
        break;
      }
      case 16: {
        [self setLimit:[input readUInt32]];
        break;
      }
      case 24: {
        [self setStartMsgid:[input readUInt64]];
        break;
      }
      case 32: {
        [self setStartTime:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgType {
  return resultCmsgGetOfflineMsgReq.hasMsgType;
}
- (UInt32) msgType {
  return resultCmsgGetOfflineMsgReq.msgType;
}
- (CMsgGetOfflineMsgReqBuilder*) setMsgType:(UInt32) value {
  resultCmsgGetOfflineMsgReq.hasMsgType = YES;
  resultCmsgGetOfflineMsgReq.msgType = value;
  return self;
}
- (CMsgGetOfflineMsgReqBuilder*) clearMsgType {
  resultCmsgGetOfflineMsgReq.hasMsgType = NO;
  resultCmsgGetOfflineMsgReq.msgType = 0;
  return self;
}
- (BOOL) hasLimit {
  return resultCmsgGetOfflineMsgReq.hasLimit;
}
- (UInt32) limit {
  return resultCmsgGetOfflineMsgReq.limit;
}
- (CMsgGetOfflineMsgReqBuilder*) setLimit:(UInt32) value {
  resultCmsgGetOfflineMsgReq.hasLimit = YES;
  resultCmsgGetOfflineMsgReq.limit = value;
  return self;
}
- (CMsgGetOfflineMsgReqBuilder*) clearLimit {
  resultCmsgGetOfflineMsgReq.hasLimit = NO;
  resultCmsgGetOfflineMsgReq.limit = 0;
  return self;
}
- (BOOL) hasStartMsgid {
  return resultCmsgGetOfflineMsgReq.hasStartMsgid;
}
- (UInt64) startMsgid {
  return resultCmsgGetOfflineMsgReq.startMsgid;
}
- (CMsgGetOfflineMsgReqBuilder*) setStartMsgid:(UInt64) value {
  resultCmsgGetOfflineMsgReq.hasStartMsgid = YES;
  resultCmsgGetOfflineMsgReq.startMsgid = value;
  return self;
}
- (CMsgGetOfflineMsgReqBuilder*) clearStartMsgid {
  resultCmsgGetOfflineMsgReq.hasStartMsgid = NO;
  resultCmsgGetOfflineMsgReq.startMsgid = 0L;
  return self;
}
- (BOOL) hasStartTime {
  return resultCmsgGetOfflineMsgReq.hasStartTime;
}
- (UInt64) startTime {
  return resultCmsgGetOfflineMsgReq.startTime;
}
- (CMsgGetOfflineMsgReqBuilder*) setStartTime:(UInt64) value {
  resultCmsgGetOfflineMsgReq.hasStartTime = YES;
  resultCmsgGetOfflineMsgReq.startTime = value;
  return self;
}
- (CMsgGetOfflineMsgReqBuilder*) clearStartTime {
  resultCmsgGetOfflineMsgReq.hasStartTime = NO;
  resultCmsgGetOfflineMsgReq.startTime = 0L;
  return self;
}
@end

@interface CMsgGetOfflineMsgResp ()
@property (strong) NSMutableArray * msgsArray;
@property UInt32 msgType;
@property UInt64 lastMsgid;
@property UInt64 lastTime;
@end

@implementation CMsgGetOfflineMsgResp

@synthesize msgsArray;
@dynamic msgs;
- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) _value_ {
  hasMsgType_ = !!_value_;
}
@synthesize msgType;
- (BOOL) hasLastMsgid {
  return !!hasLastMsgid_;
}
- (void) setHasLastMsgid:(BOOL) _value_ {
  hasLastMsgid_ = !!_value_;
}
@synthesize lastMsgid;
- (BOOL) hasLastTime {
  return !!hasLastTime_;
}
- (void) setHasLastTime:(BOOL) _value_ {
  hasLastTime_ = !!_value_;
}
@synthesize lastTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgType = 0;
    self.lastMsgid = 0L;
    self.lastTime = 0L;
  }
  return self;
}
static CMsgGetOfflineMsgResp* defaultCMsgGetOfflineMsgRespInstance = nil;
+ (void) initialize {
  if (self == [CMsgGetOfflineMsgResp class]) {
    defaultCMsgGetOfflineMsgRespInstance = [[CMsgGetOfflineMsgResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgGetOfflineMsgRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgGetOfflineMsgRespInstance;
}
- (NSArray *)msgs {
  return msgsArray;
}
- (NSData*)msgsAtIndex:(NSUInteger)index {
  return [msgsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.msgsArray enumerateObjectsUsingBlock:^(NSData *element, NSUInteger idx, BOOL *stop) {
    [output writeData:1 value:element];
  }];
  if (self.hasMsgType) {
    [output writeUInt32:2 value:self.msgType];
  }
  if (self.hasLastMsgid) {
    [output writeUInt64:3 value:self.lastMsgid];
  }
  if (self.hasLastTime) {
    [output writeUInt64:4 value:self.lastTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.msgsArray.count;
    [self.msgsArray enumerateObjectsUsingBlock:^(NSData *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeDataSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasMsgType) {
    size_ += computeUInt32Size(2, self.msgType);
  }
  if (self.hasLastMsgid) {
    size_ += computeUInt64Size(3, self.lastMsgid);
  }
  if (self.hasLastTime) {
    size_ += computeUInt64Size(4, self.lastTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGetOfflineMsgResp*) parseFromData:(NSData*) data {
  return (CMsgGetOfflineMsgResp*)[[[CMsgGetOfflineMsgResp builder] mergeFromData:data] build];
}
+ (CMsgGetOfflineMsgResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineMsgResp*)[[[CMsgGetOfflineMsgResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineMsgResp*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGetOfflineMsgResp*)[[[CMsgGetOfflineMsgResp builder] mergeFromInputStream:input] build];
}
+ (CMsgGetOfflineMsgResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineMsgResp*)[[[CMsgGetOfflineMsgResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineMsgResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGetOfflineMsgResp*)[[[CMsgGetOfflineMsgResp builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGetOfflineMsgResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineMsgResp*)[[[CMsgGetOfflineMsgResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineMsgRespBuilder*) builder {
  return [[CMsgGetOfflineMsgRespBuilder alloc] init];
}
+ (CMsgGetOfflineMsgRespBuilder*) builderWithPrototype:(CMsgGetOfflineMsgResp*) prototype {
  return [[CMsgGetOfflineMsgResp builder] mergeFrom:prototype];
}
- (CMsgGetOfflineMsgRespBuilder*) builder {
  return [CMsgGetOfflineMsgResp builder];
}
- (CMsgGetOfflineMsgRespBuilder*) toBuilder {
  return [CMsgGetOfflineMsgResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.msgsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgs", obj];
  }];
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgType", [NSNumber numberWithInteger:self.msgType]];
  }
  if (self.hasLastMsgid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastMsgid", [NSNumber numberWithLongLong:self.lastMsgid]];
  }
  if (self.hasLastTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastTime", [NSNumber numberWithLongLong:self.lastTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGetOfflineMsgResp class]]) {
    return NO;
  }
  CMsgGetOfflineMsgResp *otherMessage = other;
  return
      [self.msgsArray isEqualToArray:otherMessage.msgsArray] &&
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      self.hasLastMsgid == otherMessage.hasLastMsgid &&
      (!self.hasLastMsgid || self.lastMsgid == otherMessage.lastMsgid) &&
      self.hasLastTime == otherMessage.hasLastTime &&
      (!self.hasLastTime || self.lastTime == otherMessage.lastTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.msgsArray enumerateObjectsUsingBlock:^(NSData *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgType] hash];
  }
  if (self.hasLastMsgid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastMsgid] hash];
  }
  if (self.hasLastTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGetOfflineMsgRespBuilder()
@property (strong) CMsgGetOfflineMsgResp* resultCmsgGetOfflineMsgResp;
@end

@implementation CMsgGetOfflineMsgRespBuilder
@synthesize resultCmsgGetOfflineMsgResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgGetOfflineMsgResp = [[CMsgGetOfflineMsgResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgGetOfflineMsgResp;
}
- (CMsgGetOfflineMsgRespBuilder*) clear {
  self.resultCmsgGetOfflineMsgResp = [[CMsgGetOfflineMsgResp alloc] init];
  return self;
}
- (CMsgGetOfflineMsgRespBuilder*) clone {
  return [CMsgGetOfflineMsgResp builderWithPrototype:resultCmsgGetOfflineMsgResp];
}
- (CMsgGetOfflineMsgResp*) defaultInstance {
  return [CMsgGetOfflineMsgResp defaultInstance];
}
- (CMsgGetOfflineMsgResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGetOfflineMsgResp*) buildPartial {
  CMsgGetOfflineMsgResp* returnMe = resultCmsgGetOfflineMsgResp;
  self.resultCmsgGetOfflineMsgResp = nil;
  return returnMe;
}
- (CMsgGetOfflineMsgRespBuilder*) mergeFrom:(CMsgGetOfflineMsgResp*) other {
  if (other == [CMsgGetOfflineMsgResp defaultInstance]) {
    return self;
  }
  if (other.msgsArray.count > 0) {
    if (resultCmsgGetOfflineMsgResp.msgsArray == nil) {
      resultCmsgGetOfflineMsgResp.msgsArray = [[NSMutableArray alloc] initWithArray:other.msgsArray];
    } else {
      [resultCmsgGetOfflineMsgResp.msgsArray addObjectsFromArray:other.msgsArray];
    }
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  if (other.hasLastMsgid) {
    [self setLastMsgid:other.lastMsgid];
  }
  if (other.hasLastTime) {
    [self setLastTime:other.lastTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGetOfflineMsgRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGetOfflineMsgRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addMsgs:[input readData]];
        break;
      }
      case 16: {
        [self setMsgType:[input readUInt32]];
        break;
      }
      case 24: {
        [self setLastMsgid:[input readUInt64]];
        break;
      }
      case 32: {
        [self setLastTime:[input readUInt64]];
        break;
      }
    }
  }
}
- (NSMutableArray *)msgs {
  return resultCmsgGetOfflineMsgResp.msgsArray;
}
- (NSData*)msgsAtIndex:(NSUInteger)index {
  return [resultCmsgGetOfflineMsgResp msgsAtIndex:index];
}
- (CMsgGetOfflineMsgRespBuilder *)addMsgs:(NSData*)value {
  if (resultCmsgGetOfflineMsgResp.msgsArray == nil) {
    resultCmsgGetOfflineMsgResp.msgsArray = [[NSMutableArray alloc]init];
  }
  [resultCmsgGetOfflineMsgResp.msgsArray addObject:value];
  return self;
}
- (CMsgGetOfflineMsgRespBuilder *)setMsgsArray:(NSArray *)array {
  resultCmsgGetOfflineMsgResp.msgsArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (CMsgGetOfflineMsgRespBuilder *)clearMsgs {
  resultCmsgGetOfflineMsgResp.msgsArray = nil;
  return self;
}
- (BOOL) hasMsgType {
  return resultCmsgGetOfflineMsgResp.hasMsgType;
}
- (UInt32) msgType {
  return resultCmsgGetOfflineMsgResp.msgType;
}
- (CMsgGetOfflineMsgRespBuilder*) setMsgType:(UInt32) value {
  resultCmsgGetOfflineMsgResp.hasMsgType = YES;
  resultCmsgGetOfflineMsgResp.msgType = value;
  return self;
}
- (CMsgGetOfflineMsgRespBuilder*) clearMsgType {
  resultCmsgGetOfflineMsgResp.hasMsgType = NO;
  resultCmsgGetOfflineMsgResp.msgType = 0;
  return self;
}
- (BOOL) hasLastMsgid {
  return resultCmsgGetOfflineMsgResp.hasLastMsgid;
}
- (UInt64) lastMsgid {
  return resultCmsgGetOfflineMsgResp.lastMsgid;
}
- (CMsgGetOfflineMsgRespBuilder*) setLastMsgid:(UInt64) value {
  resultCmsgGetOfflineMsgResp.hasLastMsgid = YES;
  resultCmsgGetOfflineMsgResp.lastMsgid = value;
  return self;
}
- (CMsgGetOfflineMsgRespBuilder*) clearLastMsgid {
  resultCmsgGetOfflineMsgResp.hasLastMsgid = NO;
  resultCmsgGetOfflineMsgResp.lastMsgid = 0L;
  return self;
}
- (BOOL) hasLastTime {
  return resultCmsgGetOfflineMsgResp.hasLastTime;
}
- (UInt64) lastTime {
  return resultCmsgGetOfflineMsgResp.lastTime;
}
- (CMsgGetOfflineMsgRespBuilder*) setLastTime:(UInt64) value {
  resultCmsgGetOfflineMsgResp.hasLastTime = YES;
  resultCmsgGetOfflineMsgResp.lastTime = value;
  return self;
}
- (CMsgGetOfflineMsgRespBuilder*) clearLastTime {
  resultCmsgGetOfflineMsgResp.hasLastTime = NO;
  resultCmsgGetOfflineMsgResp.lastTime = 0L;
  return self;
}
@end

@interface CMsgGetOfflineMsgAckReq ()
@property UInt32 msgType;
@property UInt64 ackMsgId;
@end

@implementation CMsgGetOfflineMsgAckReq

- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) _value_ {
  hasMsgType_ = !!_value_;
}
@synthesize msgType;
- (BOOL) hasAckMsgId {
  return !!hasAckMsgId_;
}
- (void) setHasAckMsgId:(BOOL) _value_ {
  hasAckMsgId_ = !!_value_;
}
@synthesize ackMsgId;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgType = 0;
    self.ackMsgId = 0L;
  }
  return self;
}
static CMsgGetOfflineMsgAckReq* defaultCMsgGetOfflineMsgAckReqInstance = nil;
+ (void) initialize {
  if (self == [CMsgGetOfflineMsgAckReq class]) {
    defaultCMsgGetOfflineMsgAckReqInstance = [[CMsgGetOfflineMsgAckReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgGetOfflineMsgAckReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgGetOfflineMsgAckReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgType) {
    [output writeUInt32:1 value:self.msgType];
  }
  if (self.hasAckMsgId) {
    [output writeUInt64:2 value:self.ackMsgId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgType) {
    size_ += computeUInt32Size(1, self.msgType);
  }
  if (self.hasAckMsgId) {
    size_ += computeUInt64Size(2, self.ackMsgId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGetOfflineMsgAckReq*) parseFromData:(NSData*) data {
  return (CMsgGetOfflineMsgAckReq*)[[[CMsgGetOfflineMsgAckReq builder] mergeFromData:data] build];
}
+ (CMsgGetOfflineMsgAckReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineMsgAckReq*)[[[CMsgGetOfflineMsgAckReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineMsgAckReq*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGetOfflineMsgAckReq*)[[[CMsgGetOfflineMsgAckReq builder] mergeFromInputStream:input] build];
}
+ (CMsgGetOfflineMsgAckReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineMsgAckReq*)[[[CMsgGetOfflineMsgAckReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineMsgAckReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGetOfflineMsgAckReq*)[[[CMsgGetOfflineMsgAckReq builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGetOfflineMsgAckReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineMsgAckReq*)[[[CMsgGetOfflineMsgAckReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineMsgAckReqBuilder*) builder {
  return [[CMsgGetOfflineMsgAckReqBuilder alloc] init];
}
+ (CMsgGetOfflineMsgAckReqBuilder*) builderWithPrototype:(CMsgGetOfflineMsgAckReq*) prototype {
  return [[CMsgGetOfflineMsgAckReq builder] mergeFrom:prototype];
}
- (CMsgGetOfflineMsgAckReqBuilder*) builder {
  return [CMsgGetOfflineMsgAckReq builder];
}
- (CMsgGetOfflineMsgAckReqBuilder*) toBuilder {
  return [CMsgGetOfflineMsgAckReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgType", [NSNumber numberWithInteger:self.msgType]];
  }
  if (self.hasAckMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ackMsgId", [NSNumber numberWithLongLong:self.ackMsgId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGetOfflineMsgAckReq class]]) {
    return NO;
  }
  CMsgGetOfflineMsgAckReq *otherMessage = other;
  return
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      self.hasAckMsgId == otherMessage.hasAckMsgId &&
      (!self.hasAckMsgId || self.ackMsgId == otherMessage.ackMsgId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgType] hash];
  }
  if (self.hasAckMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.ackMsgId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGetOfflineMsgAckReqBuilder()
@property (strong) CMsgGetOfflineMsgAckReq* resultCmsgGetOfflineMsgAckReq;
@end

@implementation CMsgGetOfflineMsgAckReqBuilder
@synthesize resultCmsgGetOfflineMsgAckReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgGetOfflineMsgAckReq = [[CMsgGetOfflineMsgAckReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgGetOfflineMsgAckReq;
}
- (CMsgGetOfflineMsgAckReqBuilder*) clear {
  self.resultCmsgGetOfflineMsgAckReq = [[CMsgGetOfflineMsgAckReq alloc] init];
  return self;
}
- (CMsgGetOfflineMsgAckReqBuilder*) clone {
  return [CMsgGetOfflineMsgAckReq builderWithPrototype:resultCmsgGetOfflineMsgAckReq];
}
- (CMsgGetOfflineMsgAckReq*) defaultInstance {
  return [CMsgGetOfflineMsgAckReq defaultInstance];
}
- (CMsgGetOfflineMsgAckReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGetOfflineMsgAckReq*) buildPartial {
  CMsgGetOfflineMsgAckReq* returnMe = resultCmsgGetOfflineMsgAckReq;
  self.resultCmsgGetOfflineMsgAckReq = nil;
  return returnMe;
}
- (CMsgGetOfflineMsgAckReqBuilder*) mergeFrom:(CMsgGetOfflineMsgAckReq*) other {
  if (other == [CMsgGetOfflineMsgAckReq defaultInstance]) {
    return self;
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  if (other.hasAckMsgId) {
    [self setAckMsgId:other.ackMsgId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGetOfflineMsgAckReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGetOfflineMsgAckReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMsgType:[input readUInt32]];
        break;
      }
      case 16: {
        [self setAckMsgId:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgType {
  return resultCmsgGetOfflineMsgAckReq.hasMsgType;
}
- (UInt32) msgType {
  return resultCmsgGetOfflineMsgAckReq.msgType;
}
- (CMsgGetOfflineMsgAckReqBuilder*) setMsgType:(UInt32) value {
  resultCmsgGetOfflineMsgAckReq.hasMsgType = YES;
  resultCmsgGetOfflineMsgAckReq.msgType = value;
  return self;
}
- (CMsgGetOfflineMsgAckReqBuilder*) clearMsgType {
  resultCmsgGetOfflineMsgAckReq.hasMsgType = NO;
  resultCmsgGetOfflineMsgAckReq.msgType = 0;
  return self;
}
- (BOOL) hasAckMsgId {
  return resultCmsgGetOfflineMsgAckReq.hasAckMsgId;
}
- (UInt64) ackMsgId {
  return resultCmsgGetOfflineMsgAckReq.ackMsgId;
}
- (CMsgGetOfflineMsgAckReqBuilder*) setAckMsgId:(UInt64) value {
  resultCmsgGetOfflineMsgAckReq.hasAckMsgId = YES;
  resultCmsgGetOfflineMsgAckReq.ackMsgId = value;
  return self;
}
- (CMsgGetOfflineMsgAckReqBuilder*) clearAckMsgId {
  resultCmsgGetOfflineMsgAckReq.hasAckMsgId = NO;
  resultCmsgGetOfflineMsgAckReq.ackMsgId = 0L;
  return self;
}
@end

@interface CMsgGetOfflineMsgAckResp ()
@end

@implementation CMsgGetOfflineMsgAckResp

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgGetOfflineMsgAckResp* defaultCMsgGetOfflineMsgAckRespInstance = nil;
+ (void) initialize {
  if (self == [CMsgGetOfflineMsgAckResp class]) {
    defaultCMsgGetOfflineMsgAckRespInstance = [[CMsgGetOfflineMsgAckResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgGetOfflineMsgAckRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgGetOfflineMsgAckRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGetOfflineMsgAckResp*) parseFromData:(NSData*) data {
  return (CMsgGetOfflineMsgAckResp*)[[[CMsgGetOfflineMsgAckResp builder] mergeFromData:data] build];
}
+ (CMsgGetOfflineMsgAckResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineMsgAckResp*)[[[CMsgGetOfflineMsgAckResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineMsgAckResp*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGetOfflineMsgAckResp*)[[[CMsgGetOfflineMsgAckResp builder] mergeFromInputStream:input] build];
}
+ (CMsgGetOfflineMsgAckResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineMsgAckResp*)[[[CMsgGetOfflineMsgAckResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineMsgAckResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGetOfflineMsgAckResp*)[[[CMsgGetOfflineMsgAckResp builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGetOfflineMsgAckResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineMsgAckResp*)[[[CMsgGetOfflineMsgAckResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineMsgAckRespBuilder*) builder {
  return [[CMsgGetOfflineMsgAckRespBuilder alloc] init];
}
+ (CMsgGetOfflineMsgAckRespBuilder*) builderWithPrototype:(CMsgGetOfflineMsgAckResp*) prototype {
  return [[CMsgGetOfflineMsgAckResp builder] mergeFrom:prototype];
}
- (CMsgGetOfflineMsgAckRespBuilder*) builder {
  return [CMsgGetOfflineMsgAckResp builder];
}
- (CMsgGetOfflineMsgAckRespBuilder*) toBuilder {
  return [CMsgGetOfflineMsgAckResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGetOfflineMsgAckResp class]]) {
    return NO;
  }
  CMsgGetOfflineMsgAckResp *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGetOfflineMsgAckRespBuilder()
@property (strong) CMsgGetOfflineMsgAckResp* resultCmsgGetOfflineMsgAckResp;
@end

@implementation CMsgGetOfflineMsgAckRespBuilder
@synthesize resultCmsgGetOfflineMsgAckResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgGetOfflineMsgAckResp = [[CMsgGetOfflineMsgAckResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgGetOfflineMsgAckResp;
}
- (CMsgGetOfflineMsgAckRespBuilder*) clear {
  self.resultCmsgGetOfflineMsgAckResp = [[CMsgGetOfflineMsgAckResp alloc] init];
  return self;
}
- (CMsgGetOfflineMsgAckRespBuilder*) clone {
  return [CMsgGetOfflineMsgAckResp builderWithPrototype:resultCmsgGetOfflineMsgAckResp];
}
- (CMsgGetOfflineMsgAckResp*) defaultInstance {
  return [CMsgGetOfflineMsgAckResp defaultInstance];
}
- (CMsgGetOfflineMsgAckResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGetOfflineMsgAckResp*) buildPartial {
  CMsgGetOfflineMsgAckResp* returnMe = resultCmsgGetOfflineMsgAckResp;
  self.resultCmsgGetOfflineMsgAckResp = nil;
  return returnMe;
}
- (CMsgGetOfflineMsgAckRespBuilder*) mergeFrom:(CMsgGetOfflineMsgAckResp*) other {
  if (other == [CMsgGetOfflineMsgAckResp defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGetOfflineMsgAckRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGetOfflineMsgAckRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgClearOfflineByUidReq ()
@property UInt64 uid;
@property UInt32 msgType;
@end

@implementation CMsgClearOfflineByUidReq

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) _value_ {
  hasMsgType_ = !!_value_;
}
@synthesize msgType;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
    self.msgType = 0;
  }
  return self;
}
static CMsgClearOfflineByUidReq* defaultCMsgClearOfflineByUidReqInstance = nil;
+ (void) initialize {
  if (self == [CMsgClearOfflineByUidReq class]) {
    defaultCMsgClearOfflineByUidReqInstance = [[CMsgClearOfflineByUidReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgClearOfflineByUidReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgClearOfflineByUidReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  if (self.hasMsgType) {
    [output writeUInt32:2 value:self.msgType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  if (self.hasMsgType) {
    size_ += computeUInt32Size(2, self.msgType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgClearOfflineByUidReq*) parseFromData:(NSData*) data {
  return (CMsgClearOfflineByUidReq*)[[[CMsgClearOfflineByUidReq builder] mergeFromData:data] build];
}
+ (CMsgClearOfflineByUidReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgClearOfflineByUidReq*)[[[CMsgClearOfflineByUidReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgClearOfflineByUidReq*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgClearOfflineByUidReq*)[[[CMsgClearOfflineByUidReq builder] mergeFromInputStream:input] build];
}
+ (CMsgClearOfflineByUidReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgClearOfflineByUidReq*)[[[CMsgClearOfflineByUidReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgClearOfflineByUidReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgClearOfflineByUidReq*)[[[CMsgClearOfflineByUidReq builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgClearOfflineByUidReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgClearOfflineByUidReq*)[[[CMsgClearOfflineByUidReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgClearOfflineByUidReqBuilder*) builder {
  return [[CMsgClearOfflineByUidReqBuilder alloc] init];
}
+ (CMsgClearOfflineByUidReqBuilder*) builderWithPrototype:(CMsgClearOfflineByUidReq*) prototype {
  return [[CMsgClearOfflineByUidReq builder] mergeFrom:prototype];
}
- (CMsgClearOfflineByUidReqBuilder*) builder {
  return [CMsgClearOfflineByUidReq builder];
}
- (CMsgClearOfflineByUidReqBuilder*) toBuilder {
  return [CMsgClearOfflineByUidReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgType", [NSNumber numberWithInteger:self.msgType]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgClearOfflineByUidReq class]]) {
    return NO;
  }
  CMsgClearOfflineByUidReq *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgType] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgClearOfflineByUidReqBuilder()
@property (strong) CMsgClearOfflineByUidReq* resultCmsgClearOfflineByUidReq;
@end

@implementation CMsgClearOfflineByUidReqBuilder
@synthesize resultCmsgClearOfflineByUidReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgClearOfflineByUidReq = [[CMsgClearOfflineByUidReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgClearOfflineByUidReq;
}
- (CMsgClearOfflineByUidReqBuilder*) clear {
  self.resultCmsgClearOfflineByUidReq = [[CMsgClearOfflineByUidReq alloc] init];
  return self;
}
- (CMsgClearOfflineByUidReqBuilder*) clone {
  return [CMsgClearOfflineByUidReq builderWithPrototype:resultCmsgClearOfflineByUidReq];
}
- (CMsgClearOfflineByUidReq*) defaultInstance {
  return [CMsgClearOfflineByUidReq defaultInstance];
}
- (CMsgClearOfflineByUidReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgClearOfflineByUidReq*) buildPartial {
  CMsgClearOfflineByUidReq* returnMe = resultCmsgClearOfflineByUidReq;
  self.resultCmsgClearOfflineByUidReq = nil;
  return returnMe;
}
- (CMsgClearOfflineByUidReqBuilder*) mergeFrom:(CMsgClearOfflineByUidReq*) other {
  if (other == [CMsgClearOfflineByUidReq defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgClearOfflineByUidReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgClearOfflineByUidReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 16: {
        [self setMsgType:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultCmsgClearOfflineByUidReq.hasUid;
}
- (UInt64) uid {
  return resultCmsgClearOfflineByUidReq.uid;
}
- (CMsgClearOfflineByUidReqBuilder*) setUid:(UInt64) value {
  resultCmsgClearOfflineByUidReq.hasUid = YES;
  resultCmsgClearOfflineByUidReq.uid = value;
  return self;
}
- (CMsgClearOfflineByUidReqBuilder*) clearUid {
  resultCmsgClearOfflineByUidReq.hasUid = NO;
  resultCmsgClearOfflineByUidReq.uid = 0L;
  return self;
}
- (BOOL) hasMsgType {
  return resultCmsgClearOfflineByUidReq.hasMsgType;
}
- (UInt32) msgType {
  return resultCmsgClearOfflineByUidReq.msgType;
}
- (CMsgClearOfflineByUidReqBuilder*) setMsgType:(UInt32) value {
  resultCmsgClearOfflineByUidReq.hasMsgType = YES;
  resultCmsgClearOfflineByUidReq.msgType = value;
  return self;
}
- (CMsgClearOfflineByUidReqBuilder*) clearMsgType {
  resultCmsgClearOfflineByUidReq.hasMsgType = NO;
  resultCmsgClearOfflineByUidReq.msgType = 0;
  return self;
}
@end

@interface CMsgClearOfflineByUidResp ()
@end

@implementation CMsgClearOfflineByUidResp

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgClearOfflineByUidResp* defaultCMsgClearOfflineByUidRespInstance = nil;
+ (void) initialize {
  if (self == [CMsgClearOfflineByUidResp class]) {
    defaultCMsgClearOfflineByUidRespInstance = [[CMsgClearOfflineByUidResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgClearOfflineByUidRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgClearOfflineByUidRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgClearOfflineByUidResp*) parseFromData:(NSData*) data {
  return (CMsgClearOfflineByUidResp*)[[[CMsgClearOfflineByUidResp builder] mergeFromData:data] build];
}
+ (CMsgClearOfflineByUidResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgClearOfflineByUidResp*)[[[CMsgClearOfflineByUidResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgClearOfflineByUidResp*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgClearOfflineByUidResp*)[[[CMsgClearOfflineByUidResp builder] mergeFromInputStream:input] build];
}
+ (CMsgClearOfflineByUidResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgClearOfflineByUidResp*)[[[CMsgClearOfflineByUidResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgClearOfflineByUidResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgClearOfflineByUidResp*)[[[CMsgClearOfflineByUidResp builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgClearOfflineByUidResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgClearOfflineByUidResp*)[[[CMsgClearOfflineByUidResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgClearOfflineByUidRespBuilder*) builder {
  return [[CMsgClearOfflineByUidRespBuilder alloc] init];
}
+ (CMsgClearOfflineByUidRespBuilder*) builderWithPrototype:(CMsgClearOfflineByUidResp*) prototype {
  return [[CMsgClearOfflineByUidResp builder] mergeFrom:prototype];
}
- (CMsgClearOfflineByUidRespBuilder*) builder {
  return [CMsgClearOfflineByUidResp builder];
}
- (CMsgClearOfflineByUidRespBuilder*) toBuilder {
  return [CMsgClearOfflineByUidResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgClearOfflineByUidResp class]]) {
    return NO;
  }
  CMsgClearOfflineByUidResp *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgClearOfflineByUidRespBuilder()
@property (strong) CMsgClearOfflineByUidResp* resultCmsgClearOfflineByUidResp;
@end

@implementation CMsgClearOfflineByUidRespBuilder
@synthesize resultCmsgClearOfflineByUidResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgClearOfflineByUidResp = [[CMsgClearOfflineByUidResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgClearOfflineByUidResp;
}
- (CMsgClearOfflineByUidRespBuilder*) clear {
  self.resultCmsgClearOfflineByUidResp = [[CMsgClearOfflineByUidResp alloc] init];
  return self;
}
- (CMsgClearOfflineByUidRespBuilder*) clone {
  return [CMsgClearOfflineByUidResp builderWithPrototype:resultCmsgClearOfflineByUidResp];
}
- (CMsgClearOfflineByUidResp*) defaultInstance {
  return [CMsgClearOfflineByUidResp defaultInstance];
}
- (CMsgClearOfflineByUidResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgClearOfflineByUidResp*) buildPartial {
  CMsgClearOfflineByUidResp* returnMe = resultCmsgClearOfflineByUidResp;
  self.resultCmsgClearOfflineByUidResp = nil;
  return returnMe;
}
- (CMsgClearOfflineByUidRespBuilder*) mergeFrom:(CMsgClearOfflineByUidResp*) other {
  if (other == [CMsgClearOfflineByUidResp defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgClearOfflineByUidRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgClearOfflineByUidRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgGetOfflineCountByUidReq ()
@property (strong) PBAppendableArray * uidsArray;
@property UInt32 msgType;
@end

@implementation CMsgGetOfflineCountByUidReq

@synthesize uidsArray;
@dynamic uids;
- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) _value_ {
  hasMsgType_ = !!_value_;
}
@synthesize msgType;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgType = 0;
  }
  return self;
}
static CMsgGetOfflineCountByUidReq* defaultCMsgGetOfflineCountByUidReqInstance = nil;
+ (void) initialize {
  if (self == [CMsgGetOfflineCountByUidReq class]) {
    defaultCMsgGetOfflineCountByUidReqInstance = [[CMsgGetOfflineCountByUidReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgGetOfflineCountByUidReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgGetOfflineCountByUidReqInstance;
}
- (PBArray *)uids {
  return uidsArray;
}
- (UInt64)uidsAtIndex:(NSUInteger)index {
  return [uidsArray uint64AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger uidsArrayCount = self.uidsArray.count;
  if (uidsArrayCount > 0) {
    const UInt64 *values = (const UInt64 *)self.uidsArray.data;
    for (NSUInteger i = 0; i < uidsArrayCount; ++i) {
      [output writeUInt64:1 value:values[i]];
    }
  }
  if (self.hasMsgType) {
    [output writeUInt32:2 value:self.msgType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.uidsArray.count;
    const UInt64 *values = (const UInt64 *)self.uidsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeUInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasMsgType) {
    size_ += computeUInt32Size(2, self.msgType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGetOfflineCountByUidReq*) parseFromData:(NSData*) data {
  return (CMsgGetOfflineCountByUidReq*)[[[CMsgGetOfflineCountByUidReq builder] mergeFromData:data] build];
}
+ (CMsgGetOfflineCountByUidReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineCountByUidReq*)[[[CMsgGetOfflineCountByUidReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineCountByUidReq*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGetOfflineCountByUidReq*)[[[CMsgGetOfflineCountByUidReq builder] mergeFromInputStream:input] build];
}
+ (CMsgGetOfflineCountByUidReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineCountByUidReq*)[[[CMsgGetOfflineCountByUidReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineCountByUidReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGetOfflineCountByUidReq*)[[[CMsgGetOfflineCountByUidReq builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGetOfflineCountByUidReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineCountByUidReq*)[[[CMsgGetOfflineCountByUidReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineCountByUidReqBuilder*) builder {
  return [[CMsgGetOfflineCountByUidReqBuilder alloc] init];
}
+ (CMsgGetOfflineCountByUidReqBuilder*) builderWithPrototype:(CMsgGetOfflineCountByUidReq*) prototype {
  return [[CMsgGetOfflineCountByUidReq builder] mergeFrom:prototype];
}
- (CMsgGetOfflineCountByUidReqBuilder*) builder {
  return [CMsgGetOfflineCountByUidReq builder];
}
- (CMsgGetOfflineCountByUidReqBuilder*) toBuilder {
  return [CMsgGetOfflineCountByUidReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.uidsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uids", obj];
  }];
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgType", [NSNumber numberWithInteger:self.msgType]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGetOfflineCountByUidReq class]]) {
    return NO;
  }
  CMsgGetOfflineCountByUidReq *otherMessage = other;
  return
      [self.uidsArray isEqualToArray:otherMessage.uidsArray] &&
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.uidsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgType] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGetOfflineCountByUidReqBuilder()
@property (strong) CMsgGetOfflineCountByUidReq* resultCmsgGetOfflineCountByUidReq;
@end

@implementation CMsgGetOfflineCountByUidReqBuilder
@synthesize resultCmsgGetOfflineCountByUidReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgGetOfflineCountByUidReq = [[CMsgGetOfflineCountByUidReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgGetOfflineCountByUidReq;
}
- (CMsgGetOfflineCountByUidReqBuilder*) clear {
  self.resultCmsgGetOfflineCountByUidReq = [[CMsgGetOfflineCountByUidReq alloc] init];
  return self;
}
- (CMsgGetOfflineCountByUidReqBuilder*) clone {
  return [CMsgGetOfflineCountByUidReq builderWithPrototype:resultCmsgGetOfflineCountByUidReq];
}
- (CMsgGetOfflineCountByUidReq*) defaultInstance {
  return [CMsgGetOfflineCountByUidReq defaultInstance];
}
- (CMsgGetOfflineCountByUidReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGetOfflineCountByUidReq*) buildPartial {
  CMsgGetOfflineCountByUidReq* returnMe = resultCmsgGetOfflineCountByUidReq;
  self.resultCmsgGetOfflineCountByUidReq = nil;
  return returnMe;
}
- (CMsgGetOfflineCountByUidReqBuilder*) mergeFrom:(CMsgGetOfflineCountByUidReq*) other {
  if (other == [CMsgGetOfflineCountByUidReq defaultInstance]) {
    return self;
  }
  if (other.uidsArray.count > 0) {
    if (resultCmsgGetOfflineCountByUidReq.uidsArray == nil) {
      resultCmsgGetOfflineCountByUidReq.uidsArray = [other.uidsArray copy];
    } else {
      [resultCmsgGetOfflineCountByUidReq.uidsArray appendArray:other.uidsArray];
    }
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGetOfflineCountByUidReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGetOfflineCountByUidReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addUids:[input readUInt64]];
        break;
      }
      case 16: {
        [self setMsgType:[input readUInt32]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)uids {
  return resultCmsgGetOfflineCountByUidReq.uidsArray;
}
- (UInt64)uidsAtIndex:(NSUInteger)index {
  return [resultCmsgGetOfflineCountByUidReq uidsAtIndex:index];
}
- (CMsgGetOfflineCountByUidReqBuilder *)addUids:(UInt64)value {
  if (resultCmsgGetOfflineCountByUidReq.uidsArray == nil) {
    resultCmsgGetOfflineCountByUidReq.uidsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
  }
  [resultCmsgGetOfflineCountByUidReq.uidsArray addUint64:value];
  return self;
}
- (CMsgGetOfflineCountByUidReqBuilder *)setUidsArray:(NSArray *)array {
  resultCmsgGetOfflineCountByUidReq.uidsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CMsgGetOfflineCountByUidReqBuilder *)setUidsValues:(const UInt64 *)values count:(NSUInteger)count {
  resultCmsgGetOfflineCountByUidReq.uidsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CMsgGetOfflineCountByUidReqBuilder *)clearUids {
  resultCmsgGetOfflineCountByUidReq.uidsArray = nil;
  return self;
}
- (BOOL) hasMsgType {
  return resultCmsgGetOfflineCountByUidReq.hasMsgType;
}
- (UInt32) msgType {
  return resultCmsgGetOfflineCountByUidReq.msgType;
}
- (CMsgGetOfflineCountByUidReqBuilder*) setMsgType:(UInt32) value {
  resultCmsgGetOfflineCountByUidReq.hasMsgType = YES;
  resultCmsgGetOfflineCountByUidReq.msgType = value;
  return self;
}
- (CMsgGetOfflineCountByUidReqBuilder*) clearMsgType {
  resultCmsgGetOfflineCountByUidReq.hasMsgType = NO;
  resultCmsgGetOfflineCountByUidReq.msgType = 0;
  return self;
}
@end

@interface CMsgOfflineCountInfo ()
@property UInt64 uid;
@property UInt32 count;
@end

@implementation CMsgOfflineCountInfo

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasCount {
  return !!hasCount_;
}
- (void) setHasCount:(BOOL) _value_ {
  hasCount_ = !!_value_;
}
@synthesize count;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
    self.count = 0;
  }
  return self;
}
static CMsgOfflineCountInfo* defaultCMsgOfflineCountInfoInstance = nil;
+ (void) initialize {
  if (self == [CMsgOfflineCountInfo class]) {
    defaultCMsgOfflineCountInfoInstance = [[CMsgOfflineCountInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgOfflineCountInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgOfflineCountInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  if (self.hasCount) {
    [output writeUInt32:2 value:self.count];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  if (self.hasCount) {
    size_ += computeUInt32Size(2, self.count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgOfflineCountInfo*) parseFromData:(NSData*) data {
  return (CMsgOfflineCountInfo*)[[[CMsgOfflineCountInfo builder] mergeFromData:data] build];
}
+ (CMsgOfflineCountInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgOfflineCountInfo*)[[[CMsgOfflineCountInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgOfflineCountInfo*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgOfflineCountInfo*)[[[CMsgOfflineCountInfo builder] mergeFromInputStream:input] build];
}
+ (CMsgOfflineCountInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgOfflineCountInfo*)[[[CMsgOfflineCountInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgOfflineCountInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgOfflineCountInfo*)[[[CMsgOfflineCountInfo builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgOfflineCountInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgOfflineCountInfo*)[[[CMsgOfflineCountInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgOfflineCountInfoBuilder*) builder {
  return [[CMsgOfflineCountInfoBuilder alloc] init];
}
+ (CMsgOfflineCountInfoBuilder*) builderWithPrototype:(CMsgOfflineCountInfo*) prototype {
  return [[CMsgOfflineCountInfo builder] mergeFrom:prototype];
}
- (CMsgOfflineCountInfoBuilder*) builder {
  return [CMsgOfflineCountInfo builder];
}
- (CMsgOfflineCountInfoBuilder*) toBuilder {
  return [CMsgOfflineCountInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  if (self.hasCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"count", [NSNumber numberWithInteger:self.count]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgOfflineCountInfo class]]) {
    return NO;
  }
  CMsgOfflineCountInfo *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasCount == otherMessage.hasCount &&
      (!self.hasCount || self.count == otherMessage.count) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  if (self.hasCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.count] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgOfflineCountInfoBuilder()
@property (strong) CMsgOfflineCountInfo* resultCmsgOfflineCountInfo;
@end

@implementation CMsgOfflineCountInfoBuilder
@synthesize resultCmsgOfflineCountInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgOfflineCountInfo = [[CMsgOfflineCountInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgOfflineCountInfo;
}
- (CMsgOfflineCountInfoBuilder*) clear {
  self.resultCmsgOfflineCountInfo = [[CMsgOfflineCountInfo alloc] init];
  return self;
}
- (CMsgOfflineCountInfoBuilder*) clone {
  return [CMsgOfflineCountInfo builderWithPrototype:resultCmsgOfflineCountInfo];
}
- (CMsgOfflineCountInfo*) defaultInstance {
  return [CMsgOfflineCountInfo defaultInstance];
}
- (CMsgOfflineCountInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgOfflineCountInfo*) buildPartial {
  CMsgOfflineCountInfo* returnMe = resultCmsgOfflineCountInfo;
  self.resultCmsgOfflineCountInfo = nil;
  return returnMe;
}
- (CMsgOfflineCountInfoBuilder*) mergeFrom:(CMsgOfflineCountInfo*) other {
  if (other == [CMsgOfflineCountInfo defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasCount) {
    [self setCount:other.count];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgOfflineCountInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgOfflineCountInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 16: {
        [self setCount:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultCmsgOfflineCountInfo.hasUid;
}
- (UInt64) uid {
  return resultCmsgOfflineCountInfo.uid;
}
- (CMsgOfflineCountInfoBuilder*) setUid:(UInt64) value {
  resultCmsgOfflineCountInfo.hasUid = YES;
  resultCmsgOfflineCountInfo.uid = value;
  return self;
}
- (CMsgOfflineCountInfoBuilder*) clearUid {
  resultCmsgOfflineCountInfo.hasUid = NO;
  resultCmsgOfflineCountInfo.uid = 0L;
  return self;
}
- (BOOL) hasCount {
  return resultCmsgOfflineCountInfo.hasCount;
}
- (UInt32) count {
  return resultCmsgOfflineCountInfo.count;
}
- (CMsgOfflineCountInfoBuilder*) setCount:(UInt32) value {
  resultCmsgOfflineCountInfo.hasCount = YES;
  resultCmsgOfflineCountInfo.count = value;
  return self;
}
- (CMsgOfflineCountInfoBuilder*) clearCount {
  resultCmsgOfflineCountInfo.hasCount = NO;
  resultCmsgOfflineCountInfo.count = 0;
  return self;
}
@end

@interface CMsgGetOfflineCountByUidResp ()
@property (strong) NSMutableArray * countInfosArray;
@end

@implementation CMsgGetOfflineCountByUidResp

@synthesize countInfosArray;
@dynamic countInfos;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgGetOfflineCountByUidResp* defaultCMsgGetOfflineCountByUidRespInstance = nil;
+ (void) initialize {
  if (self == [CMsgGetOfflineCountByUidResp class]) {
    defaultCMsgGetOfflineCountByUidRespInstance = [[CMsgGetOfflineCountByUidResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgGetOfflineCountByUidRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgGetOfflineCountByUidRespInstance;
}
- (NSArray *)countInfos {
  return countInfosArray;
}
- (CMsgOfflineCountInfo*)countInfosAtIndex:(NSUInteger)index {
  return [countInfosArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.countInfosArray enumerateObjectsUsingBlock:^(CMsgOfflineCountInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.countInfosArray enumerateObjectsUsingBlock:^(CMsgOfflineCountInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGetOfflineCountByUidResp*) parseFromData:(NSData*) data {
  return (CMsgGetOfflineCountByUidResp*)[[[CMsgGetOfflineCountByUidResp builder] mergeFromData:data] build];
}
+ (CMsgGetOfflineCountByUidResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineCountByUidResp*)[[[CMsgGetOfflineCountByUidResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineCountByUidResp*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGetOfflineCountByUidResp*)[[[CMsgGetOfflineCountByUidResp builder] mergeFromInputStream:input] build];
}
+ (CMsgGetOfflineCountByUidResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineCountByUidResp*)[[[CMsgGetOfflineCountByUidResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineCountByUidResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGetOfflineCountByUidResp*)[[[CMsgGetOfflineCountByUidResp builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGetOfflineCountByUidResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineCountByUidResp*)[[[CMsgGetOfflineCountByUidResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineCountByUidRespBuilder*) builder {
  return [[CMsgGetOfflineCountByUidRespBuilder alloc] init];
}
+ (CMsgGetOfflineCountByUidRespBuilder*) builderWithPrototype:(CMsgGetOfflineCountByUidResp*) prototype {
  return [[CMsgGetOfflineCountByUidResp builder] mergeFrom:prototype];
}
- (CMsgGetOfflineCountByUidRespBuilder*) builder {
  return [CMsgGetOfflineCountByUidResp builder];
}
- (CMsgGetOfflineCountByUidRespBuilder*) toBuilder {
  return [CMsgGetOfflineCountByUidResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.countInfosArray enumerateObjectsUsingBlock:^(CMsgOfflineCountInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"countInfos"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGetOfflineCountByUidResp class]]) {
    return NO;
  }
  CMsgGetOfflineCountByUidResp *otherMessage = other;
  return
      [self.countInfosArray isEqualToArray:otherMessage.countInfosArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.countInfosArray enumerateObjectsUsingBlock:^(CMsgOfflineCountInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGetOfflineCountByUidRespBuilder()
@property (strong) CMsgGetOfflineCountByUidResp* resultCmsgGetOfflineCountByUidResp;
@end

@implementation CMsgGetOfflineCountByUidRespBuilder
@synthesize resultCmsgGetOfflineCountByUidResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgGetOfflineCountByUidResp = [[CMsgGetOfflineCountByUidResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgGetOfflineCountByUidResp;
}
- (CMsgGetOfflineCountByUidRespBuilder*) clear {
  self.resultCmsgGetOfflineCountByUidResp = [[CMsgGetOfflineCountByUidResp alloc] init];
  return self;
}
- (CMsgGetOfflineCountByUidRespBuilder*) clone {
  return [CMsgGetOfflineCountByUidResp builderWithPrototype:resultCmsgGetOfflineCountByUidResp];
}
- (CMsgGetOfflineCountByUidResp*) defaultInstance {
  return [CMsgGetOfflineCountByUidResp defaultInstance];
}
- (CMsgGetOfflineCountByUidResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGetOfflineCountByUidResp*) buildPartial {
  CMsgGetOfflineCountByUidResp* returnMe = resultCmsgGetOfflineCountByUidResp;
  self.resultCmsgGetOfflineCountByUidResp = nil;
  return returnMe;
}
- (CMsgGetOfflineCountByUidRespBuilder*) mergeFrom:(CMsgGetOfflineCountByUidResp*) other {
  if (other == [CMsgGetOfflineCountByUidResp defaultInstance]) {
    return self;
  }
  if (other.countInfosArray.count > 0) {
    if (resultCmsgGetOfflineCountByUidResp.countInfosArray == nil) {
      resultCmsgGetOfflineCountByUidResp.countInfosArray = [[NSMutableArray alloc] initWithArray:other.countInfosArray];
    } else {
      [resultCmsgGetOfflineCountByUidResp.countInfosArray addObjectsFromArray:other.countInfosArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGetOfflineCountByUidRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGetOfflineCountByUidRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CMsgOfflineCountInfoBuilder* subBuilder = [CMsgOfflineCountInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCountInfos:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)countInfos {
  return resultCmsgGetOfflineCountByUidResp.countInfosArray;
}
- (CMsgOfflineCountInfo*)countInfosAtIndex:(NSUInteger)index {
  return [resultCmsgGetOfflineCountByUidResp countInfosAtIndex:index];
}
- (CMsgGetOfflineCountByUidRespBuilder *)addCountInfos:(CMsgOfflineCountInfo*)value {
  if (resultCmsgGetOfflineCountByUidResp.countInfosArray == nil) {
    resultCmsgGetOfflineCountByUidResp.countInfosArray = [[NSMutableArray alloc]init];
  }
  [resultCmsgGetOfflineCountByUidResp.countInfosArray addObject:value];
  return self;
}
- (CMsgGetOfflineCountByUidRespBuilder *)setCountInfosArray:(NSArray *)array {
  resultCmsgGetOfflineCountByUidResp.countInfosArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (CMsgGetOfflineCountByUidRespBuilder *)clearCountInfos {
  resultCmsgGetOfflineCountByUidResp.countInfosArray = nil;
  return self;
}
@end

@interface CMsgGetOfflineCountReq ()
@end

@implementation CMsgGetOfflineCountReq

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgGetOfflineCountReq* defaultCMsgGetOfflineCountReqInstance = nil;
+ (void) initialize {
  if (self == [CMsgGetOfflineCountReq class]) {
    defaultCMsgGetOfflineCountReqInstance = [[CMsgGetOfflineCountReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgGetOfflineCountReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgGetOfflineCountReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGetOfflineCountReq*) parseFromData:(NSData*) data {
  return (CMsgGetOfflineCountReq*)[[[CMsgGetOfflineCountReq builder] mergeFromData:data] build];
}
+ (CMsgGetOfflineCountReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineCountReq*)[[[CMsgGetOfflineCountReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineCountReq*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGetOfflineCountReq*)[[[CMsgGetOfflineCountReq builder] mergeFromInputStream:input] build];
}
+ (CMsgGetOfflineCountReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineCountReq*)[[[CMsgGetOfflineCountReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineCountReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGetOfflineCountReq*)[[[CMsgGetOfflineCountReq builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGetOfflineCountReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineCountReq*)[[[CMsgGetOfflineCountReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineCountReqBuilder*) builder {
  return [[CMsgGetOfflineCountReqBuilder alloc] init];
}
+ (CMsgGetOfflineCountReqBuilder*) builderWithPrototype:(CMsgGetOfflineCountReq*) prototype {
  return [[CMsgGetOfflineCountReq builder] mergeFrom:prototype];
}
- (CMsgGetOfflineCountReqBuilder*) builder {
  return [CMsgGetOfflineCountReq builder];
}
- (CMsgGetOfflineCountReqBuilder*) toBuilder {
  return [CMsgGetOfflineCountReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGetOfflineCountReq class]]) {
    return NO;
  }
  CMsgGetOfflineCountReq *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGetOfflineCountReqBuilder()
@property (strong) CMsgGetOfflineCountReq* resultCmsgGetOfflineCountReq;
@end

@implementation CMsgGetOfflineCountReqBuilder
@synthesize resultCmsgGetOfflineCountReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgGetOfflineCountReq = [[CMsgGetOfflineCountReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgGetOfflineCountReq;
}
- (CMsgGetOfflineCountReqBuilder*) clear {
  self.resultCmsgGetOfflineCountReq = [[CMsgGetOfflineCountReq alloc] init];
  return self;
}
- (CMsgGetOfflineCountReqBuilder*) clone {
  return [CMsgGetOfflineCountReq builderWithPrototype:resultCmsgGetOfflineCountReq];
}
- (CMsgGetOfflineCountReq*) defaultInstance {
  return [CMsgGetOfflineCountReq defaultInstance];
}
- (CMsgGetOfflineCountReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGetOfflineCountReq*) buildPartial {
  CMsgGetOfflineCountReq* returnMe = resultCmsgGetOfflineCountReq;
  self.resultCmsgGetOfflineCountReq = nil;
  return returnMe;
}
- (CMsgGetOfflineCountReqBuilder*) mergeFrom:(CMsgGetOfflineCountReq*) other {
  if (other == [CMsgGetOfflineCountReq defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGetOfflineCountReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGetOfflineCountReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgGetOfflineCountResp ()
@property UInt32 msgCount;
@end

@implementation CMsgGetOfflineCountResp

- (BOOL) hasMsgCount {
  return !!hasMsgCount_;
}
- (void) setHasMsgCount:(BOOL) _value_ {
  hasMsgCount_ = !!_value_;
}
@synthesize msgCount;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgCount = 0;
  }
  return self;
}
static CMsgGetOfflineCountResp* defaultCMsgGetOfflineCountRespInstance = nil;
+ (void) initialize {
  if (self == [CMsgGetOfflineCountResp class]) {
    defaultCMsgGetOfflineCountRespInstance = [[CMsgGetOfflineCountResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgGetOfflineCountRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgGetOfflineCountRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgCount) {
    [output writeUInt32:1 value:self.msgCount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgCount) {
    size_ += computeUInt32Size(1, self.msgCount);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGetOfflineCountResp*) parseFromData:(NSData*) data {
  return (CMsgGetOfflineCountResp*)[[[CMsgGetOfflineCountResp builder] mergeFromData:data] build];
}
+ (CMsgGetOfflineCountResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineCountResp*)[[[CMsgGetOfflineCountResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineCountResp*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGetOfflineCountResp*)[[[CMsgGetOfflineCountResp builder] mergeFromInputStream:input] build];
}
+ (CMsgGetOfflineCountResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineCountResp*)[[[CMsgGetOfflineCountResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineCountResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGetOfflineCountResp*)[[[CMsgGetOfflineCountResp builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGetOfflineCountResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetOfflineCountResp*)[[[CMsgGetOfflineCountResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetOfflineCountRespBuilder*) builder {
  return [[CMsgGetOfflineCountRespBuilder alloc] init];
}
+ (CMsgGetOfflineCountRespBuilder*) builderWithPrototype:(CMsgGetOfflineCountResp*) prototype {
  return [[CMsgGetOfflineCountResp builder] mergeFrom:prototype];
}
- (CMsgGetOfflineCountRespBuilder*) builder {
  return [CMsgGetOfflineCountResp builder];
}
- (CMsgGetOfflineCountRespBuilder*) toBuilder {
  return [CMsgGetOfflineCountResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgCount", [NSNumber numberWithInteger:self.msgCount]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGetOfflineCountResp class]]) {
    return NO;
  }
  CMsgGetOfflineCountResp *otherMessage = other;
  return
      self.hasMsgCount == otherMessage.hasMsgCount &&
      (!self.hasMsgCount || self.msgCount == otherMessage.msgCount) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgCount] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGetOfflineCountRespBuilder()
@property (strong) CMsgGetOfflineCountResp* resultCmsgGetOfflineCountResp;
@end

@implementation CMsgGetOfflineCountRespBuilder
@synthesize resultCmsgGetOfflineCountResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgGetOfflineCountResp = [[CMsgGetOfflineCountResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgGetOfflineCountResp;
}
- (CMsgGetOfflineCountRespBuilder*) clear {
  self.resultCmsgGetOfflineCountResp = [[CMsgGetOfflineCountResp alloc] init];
  return self;
}
- (CMsgGetOfflineCountRespBuilder*) clone {
  return [CMsgGetOfflineCountResp builderWithPrototype:resultCmsgGetOfflineCountResp];
}
- (CMsgGetOfflineCountResp*) defaultInstance {
  return [CMsgGetOfflineCountResp defaultInstance];
}
- (CMsgGetOfflineCountResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGetOfflineCountResp*) buildPartial {
  CMsgGetOfflineCountResp* returnMe = resultCmsgGetOfflineCountResp;
  self.resultCmsgGetOfflineCountResp = nil;
  return returnMe;
}
- (CMsgGetOfflineCountRespBuilder*) mergeFrom:(CMsgGetOfflineCountResp*) other {
  if (other == [CMsgGetOfflineCountResp defaultInstance]) {
    return self;
  }
  if (other.hasMsgCount) {
    [self setMsgCount:other.msgCount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGetOfflineCountRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGetOfflineCountRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMsgCount:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgCount {
  return resultCmsgGetOfflineCountResp.hasMsgCount;
}
- (UInt32) msgCount {
  return resultCmsgGetOfflineCountResp.msgCount;
}
- (CMsgGetOfflineCountRespBuilder*) setMsgCount:(UInt32) value {
  resultCmsgGetOfflineCountResp.hasMsgCount = YES;
  resultCmsgGetOfflineCountResp.msgCount = value;
  return self;
}
- (CMsgGetOfflineCountRespBuilder*) clearMsgCount {
  resultCmsgGetOfflineCountResp.hasMsgCount = NO;
  resultCmsgGetOfflineCountResp.msgCount = 0;
  return self;
}
@end

@interface CMsgGetHistoryMsgReq ()
@property UInt64 uid;
@property UInt32 limit;
@property UInt64 startMsgtime;
@property UInt64 startMsgid;
@end

@implementation CMsgGetHistoryMsgReq

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasLimit {
  return !!hasLimit_;
}
- (void) setHasLimit:(BOOL) _value_ {
  hasLimit_ = !!_value_;
}
@synthesize limit;
- (BOOL) hasStartMsgtime {
  return !!hasStartMsgtime_;
}
- (void) setHasStartMsgtime:(BOOL) _value_ {
  hasStartMsgtime_ = !!_value_;
}
@synthesize startMsgtime;
- (BOOL) hasStartMsgid {
  return !!hasStartMsgid_;
}
- (void) setHasStartMsgid:(BOOL) _value_ {
  hasStartMsgid_ = !!_value_;
}
@synthesize startMsgid;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
    self.limit = 0;
    self.startMsgtime = 0L;
    self.startMsgid = 0L;
  }
  return self;
}
static CMsgGetHistoryMsgReq* defaultCMsgGetHistoryMsgReqInstance = nil;
+ (void) initialize {
  if (self == [CMsgGetHistoryMsgReq class]) {
    defaultCMsgGetHistoryMsgReqInstance = [[CMsgGetHistoryMsgReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgGetHistoryMsgReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgGetHistoryMsgReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  if (self.hasLimit) {
    [output writeUInt32:2 value:self.limit];
  }
  if (self.hasStartMsgtime) {
    [output writeUInt64:3 value:self.startMsgtime];
  }
  if (self.hasStartMsgid) {
    [output writeUInt64:4 value:self.startMsgid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  if (self.hasLimit) {
    size_ += computeUInt32Size(2, self.limit);
  }
  if (self.hasStartMsgtime) {
    size_ += computeUInt64Size(3, self.startMsgtime);
  }
  if (self.hasStartMsgid) {
    size_ += computeUInt64Size(4, self.startMsgid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGetHistoryMsgReq*) parseFromData:(NSData*) data {
  return (CMsgGetHistoryMsgReq*)[[[CMsgGetHistoryMsgReq builder] mergeFromData:data] build];
}
+ (CMsgGetHistoryMsgReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetHistoryMsgReq*)[[[CMsgGetHistoryMsgReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetHistoryMsgReq*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGetHistoryMsgReq*)[[[CMsgGetHistoryMsgReq builder] mergeFromInputStream:input] build];
}
+ (CMsgGetHistoryMsgReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetHistoryMsgReq*)[[[CMsgGetHistoryMsgReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetHistoryMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGetHistoryMsgReq*)[[[CMsgGetHistoryMsgReq builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGetHistoryMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetHistoryMsgReq*)[[[CMsgGetHistoryMsgReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetHistoryMsgReqBuilder*) builder {
  return [[CMsgGetHistoryMsgReqBuilder alloc] init];
}
+ (CMsgGetHistoryMsgReqBuilder*) builderWithPrototype:(CMsgGetHistoryMsgReq*) prototype {
  return [[CMsgGetHistoryMsgReq builder] mergeFrom:prototype];
}
- (CMsgGetHistoryMsgReqBuilder*) builder {
  return [CMsgGetHistoryMsgReq builder];
}
- (CMsgGetHistoryMsgReqBuilder*) toBuilder {
  return [CMsgGetHistoryMsgReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  if (self.hasLimit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"limit", [NSNumber numberWithInteger:self.limit]];
  }
  if (self.hasStartMsgtime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startMsgtime", [NSNumber numberWithLongLong:self.startMsgtime]];
  }
  if (self.hasStartMsgid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startMsgid", [NSNumber numberWithLongLong:self.startMsgid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGetHistoryMsgReq class]]) {
    return NO;
  }
  CMsgGetHistoryMsgReq *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasLimit == otherMessage.hasLimit &&
      (!self.hasLimit || self.limit == otherMessage.limit) &&
      self.hasStartMsgtime == otherMessage.hasStartMsgtime &&
      (!self.hasStartMsgtime || self.startMsgtime == otherMessage.startMsgtime) &&
      self.hasStartMsgid == otherMessage.hasStartMsgid &&
      (!self.hasStartMsgid || self.startMsgid == otherMessage.startMsgid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  if (self.hasLimit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.limit] hash];
  }
  if (self.hasStartMsgtime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.startMsgtime] hash];
  }
  if (self.hasStartMsgid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.startMsgid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGetHistoryMsgReqBuilder()
@property (strong) CMsgGetHistoryMsgReq* resultCmsgGetHistoryMsgReq;
@end

@implementation CMsgGetHistoryMsgReqBuilder
@synthesize resultCmsgGetHistoryMsgReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgGetHistoryMsgReq = [[CMsgGetHistoryMsgReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgGetHistoryMsgReq;
}
- (CMsgGetHistoryMsgReqBuilder*) clear {
  self.resultCmsgGetHistoryMsgReq = [[CMsgGetHistoryMsgReq alloc] init];
  return self;
}
- (CMsgGetHistoryMsgReqBuilder*) clone {
  return [CMsgGetHistoryMsgReq builderWithPrototype:resultCmsgGetHistoryMsgReq];
}
- (CMsgGetHistoryMsgReq*) defaultInstance {
  return [CMsgGetHistoryMsgReq defaultInstance];
}
- (CMsgGetHistoryMsgReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGetHistoryMsgReq*) buildPartial {
  CMsgGetHistoryMsgReq* returnMe = resultCmsgGetHistoryMsgReq;
  self.resultCmsgGetHistoryMsgReq = nil;
  return returnMe;
}
- (CMsgGetHistoryMsgReqBuilder*) mergeFrom:(CMsgGetHistoryMsgReq*) other {
  if (other == [CMsgGetHistoryMsgReq defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasLimit) {
    [self setLimit:other.limit];
  }
  if (other.hasStartMsgtime) {
    [self setStartMsgtime:other.startMsgtime];
  }
  if (other.hasStartMsgid) {
    [self setStartMsgid:other.startMsgid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGetHistoryMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGetHistoryMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 16: {
        [self setLimit:[input readUInt32]];
        break;
      }
      case 24: {
        [self setStartMsgtime:[input readUInt64]];
        break;
      }
      case 32: {
        [self setStartMsgid:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultCmsgGetHistoryMsgReq.hasUid;
}
- (UInt64) uid {
  return resultCmsgGetHistoryMsgReq.uid;
}
- (CMsgGetHistoryMsgReqBuilder*) setUid:(UInt64) value {
  resultCmsgGetHistoryMsgReq.hasUid = YES;
  resultCmsgGetHistoryMsgReq.uid = value;
  return self;
}
- (CMsgGetHistoryMsgReqBuilder*) clearUid {
  resultCmsgGetHistoryMsgReq.hasUid = NO;
  resultCmsgGetHistoryMsgReq.uid = 0L;
  return self;
}
- (BOOL) hasLimit {
  return resultCmsgGetHistoryMsgReq.hasLimit;
}
- (UInt32) limit {
  return resultCmsgGetHistoryMsgReq.limit;
}
- (CMsgGetHistoryMsgReqBuilder*) setLimit:(UInt32) value {
  resultCmsgGetHistoryMsgReq.hasLimit = YES;
  resultCmsgGetHistoryMsgReq.limit = value;
  return self;
}
- (CMsgGetHistoryMsgReqBuilder*) clearLimit {
  resultCmsgGetHistoryMsgReq.hasLimit = NO;
  resultCmsgGetHistoryMsgReq.limit = 0;
  return self;
}
- (BOOL) hasStartMsgtime {
  return resultCmsgGetHistoryMsgReq.hasStartMsgtime;
}
- (UInt64) startMsgtime {
  return resultCmsgGetHistoryMsgReq.startMsgtime;
}
- (CMsgGetHistoryMsgReqBuilder*) setStartMsgtime:(UInt64) value {
  resultCmsgGetHistoryMsgReq.hasStartMsgtime = YES;
  resultCmsgGetHistoryMsgReq.startMsgtime = value;
  return self;
}
- (CMsgGetHistoryMsgReqBuilder*) clearStartMsgtime {
  resultCmsgGetHistoryMsgReq.hasStartMsgtime = NO;
  resultCmsgGetHistoryMsgReq.startMsgtime = 0L;
  return self;
}
- (BOOL) hasStartMsgid {
  return resultCmsgGetHistoryMsgReq.hasStartMsgid;
}
- (UInt64) startMsgid {
  return resultCmsgGetHistoryMsgReq.startMsgid;
}
- (CMsgGetHistoryMsgReqBuilder*) setStartMsgid:(UInt64) value {
  resultCmsgGetHistoryMsgReq.hasStartMsgid = YES;
  resultCmsgGetHistoryMsgReq.startMsgid = value;
  return self;
}
- (CMsgGetHistoryMsgReqBuilder*) clearStartMsgid {
  resultCmsgGetHistoryMsgReq.hasStartMsgid = NO;
  resultCmsgGetHistoryMsgReq.startMsgid = 0L;
  return self;
}
@end

@interface CMsgGetHistoryMsgResp ()
@property (strong) NSMutableArray * msgsArray;
@property UInt64 lastMsgtime;
@property UInt64 lastMsgid;
@end

@implementation CMsgGetHistoryMsgResp

@synthesize msgsArray;
@dynamic msgs;
- (BOOL) hasLastMsgtime {
  return !!hasLastMsgtime_;
}
- (void) setHasLastMsgtime:(BOOL) _value_ {
  hasLastMsgtime_ = !!_value_;
}
@synthesize lastMsgtime;
- (BOOL) hasLastMsgid {
  return !!hasLastMsgid_;
}
- (void) setHasLastMsgid:(BOOL) _value_ {
  hasLastMsgid_ = !!_value_;
}
@synthesize lastMsgid;
- (instancetype) init {
  if ((self = [super init])) {
    self.lastMsgtime = 0L;
    self.lastMsgid = 0L;
  }
  return self;
}
static CMsgGetHistoryMsgResp* defaultCMsgGetHistoryMsgRespInstance = nil;
+ (void) initialize {
  if (self == [CMsgGetHistoryMsgResp class]) {
    defaultCMsgGetHistoryMsgRespInstance = [[CMsgGetHistoryMsgResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgGetHistoryMsgRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgGetHistoryMsgRespInstance;
}
- (NSArray *)msgs {
  return msgsArray;
}
- (CMsgPBContent*)msgsAtIndex:(NSUInteger)index {
  return [msgsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.msgsArray enumerateObjectsUsingBlock:^(CMsgPBContent *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasLastMsgtime) {
    [output writeUInt64:2 value:self.lastMsgtime];
  }
  if (self.hasLastMsgid) {
    [output writeUInt64:3 value:self.lastMsgid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.msgsArray enumerateObjectsUsingBlock:^(CMsgPBContent *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasLastMsgtime) {
    size_ += computeUInt64Size(2, self.lastMsgtime);
  }
  if (self.hasLastMsgid) {
    size_ += computeUInt64Size(3, self.lastMsgid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGetHistoryMsgResp*) parseFromData:(NSData*) data {
  return (CMsgGetHistoryMsgResp*)[[[CMsgGetHistoryMsgResp builder] mergeFromData:data] build];
}
+ (CMsgGetHistoryMsgResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetHistoryMsgResp*)[[[CMsgGetHistoryMsgResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetHistoryMsgResp*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGetHistoryMsgResp*)[[[CMsgGetHistoryMsgResp builder] mergeFromInputStream:input] build];
}
+ (CMsgGetHistoryMsgResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetHistoryMsgResp*)[[[CMsgGetHistoryMsgResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetHistoryMsgResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGetHistoryMsgResp*)[[[CMsgGetHistoryMsgResp builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGetHistoryMsgResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetHistoryMsgResp*)[[[CMsgGetHistoryMsgResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetHistoryMsgRespBuilder*) builder {
  return [[CMsgGetHistoryMsgRespBuilder alloc] init];
}
+ (CMsgGetHistoryMsgRespBuilder*) builderWithPrototype:(CMsgGetHistoryMsgResp*) prototype {
  return [[CMsgGetHistoryMsgResp builder] mergeFrom:prototype];
}
- (CMsgGetHistoryMsgRespBuilder*) builder {
  return [CMsgGetHistoryMsgResp builder];
}
- (CMsgGetHistoryMsgRespBuilder*) toBuilder {
  return [CMsgGetHistoryMsgResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.msgsArray enumerateObjectsUsingBlock:^(CMsgPBContent *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgs"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasLastMsgtime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastMsgtime", [NSNumber numberWithLongLong:self.lastMsgtime]];
  }
  if (self.hasLastMsgid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastMsgid", [NSNumber numberWithLongLong:self.lastMsgid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGetHistoryMsgResp class]]) {
    return NO;
  }
  CMsgGetHistoryMsgResp *otherMessage = other;
  return
      [self.msgsArray isEqualToArray:otherMessage.msgsArray] &&
      self.hasLastMsgtime == otherMessage.hasLastMsgtime &&
      (!self.hasLastMsgtime || self.lastMsgtime == otherMessage.lastMsgtime) &&
      self.hasLastMsgid == otherMessage.hasLastMsgid &&
      (!self.hasLastMsgid || self.lastMsgid == otherMessage.lastMsgid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.msgsArray enumerateObjectsUsingBlock:^(CMsgPBContent *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasLastMsgtime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastMsgtime] hash];
  }
  if (self.hasLastMsgid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastMsgid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGetHistoryMsgRespBuilder()
@property (strong) CMsgGetHistoryMsgResp* resultCmsgGetHistoryMsgResp;
@end

@implementation CMsgGetHistoryMsgRespBuilder
@synthesize resultCmsgGetHistoryMsgResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgGetHistoryMsgResp = [[CMsgGetHistoryMsgResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgGetHistoryMsgResp;
}
- (CMsgGetHistoryMsgRespBuilder*) clear {
  self.resultCmsgGetHistoryMsgResp = [[CMsgGetHistoryMsgResp alloc] init];
  return self;
}
- (CMsgGetHistoryMsgRespBuilder*) clone {
  return [CMsgGetHistoryMsgResp builderWithPrototype:resultCmsgGetHistoryMsgResp];
}
- (CMsgGetHistoryMsgResp*) defaultInstance {
  return [CMsgGetHistoryMsgResp defaultInstance];
}
- (CMsgGetHistoryMsgResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGetHistoryMsgResp*) buildPartial {
  CMsgGetHistoryMsgResp* returnMe = resultCmsgGetHistoryMsgResp;
  self.resultCmsgGetHistoryMsgResp = nil;
  return returnMe;
}
- (CMsgGetHistoryMsgRespBuilder*) mergeFrom:(CMsgGetHistoryMsgResp*) other {
  if (other == [CMsgGetHistoryMsgResp defaultInstance]) {
    return self;
  }
  if (other.msgsArray.count > 0) {
    if (resultCmsgGetHistoryMsgResp.msgsArray == nil) {
      resultCmsgGetHistoryMsgResp.msgsArray = [[NSMutableArray alloc] initWithArray:other.msgsArray];
    } else {
      [resultCmsgGetHistoryMsgResp.msgsArray addObjectsFromArray:other.msgsArray];
    }
  }
  if (other.hasLastMsgtime) {
    [self setLastMsgtime:other.lastMsgtime];
  }
  if (other.hasLastMsgid) {
    [self setLastMsgid:other.lastMsgid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGetHistoryMsgRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGetHistoryMsgRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CMsgPBContentBuilder* subBuilder = [CMsgPBContent builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMsgs:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setLastMsgtime:[input readUInt64]];
        break;
      }
      case 24: {
        [self setLastMsgid:[input readUInt64]];
        break;
      }
    }
  }
}
- (NSMutableArray *)msgs {
  return resultCmsgGetHistoryMsgResp.msgsArray;
}
- (CMsgPBContent*)msgsAtIndex:(NSUInteger)index {
  return [resultCmsgGetHistoryMsgResp msgsAtIndex:index];
}
- (CMsgGetHistoryMsgRespBuilder *)addMsgs:(CMsgPBContent*)value {
  if (resultCmsgGetHistoryMsgResp.msgsArray == nil) {
    resultCmsgGetHistoryMsgResp.msgsArray = [[NSMutableArray alloc]init];
  }
  [resultCmsgGetHistoryMsgResp.msgsArray addObject:value];
  return self;
}
- (CMsgGetHistoryMsgRespBuilder *)setMsgsArray:(NSArray *)array {
  resultCmsgGetHistoryMsgResp.msgsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (CMsgGetHistoryMsgRespBuilder *)clearMsgs {
  resultCmsgGetHistoryMsgResp.msgsArray = nil;
  return self;
}
- (BOOL) hasLastMsgtime {
  return resultCmsgGetHistoryMsgResp.hasLastMsgtime;
}
- (UInt64) lastMsgtime {
  return resultCmsgGetHistoryMsgResp.lastMsgtime;
}
- (CMsgGetHistoryMsgRespBuilder*) setLastMsgtime:(UInt64) value {
  resultCmsgGetHistoryMsgResp.hasLastMsgtime = YES;
  resultCmsgGetHistoryMsgResp.lastMsgtime = value;
  return self;
}
- (CMsgGetHistoryMsgRespBuilder*) clearLastMsgtime {
  resultCmsgGetHistoryMsgResp.hasLastMsgtime = NO;
  resultCmsgGetHistoryMsgResp.lastMsgtime = 0L;
  return self;
}
- (BOOL) hasLastMsgid {
  return resultCmsgGetHistoryMsgResp.hasLastMsgid;
}
- (UInt64) lastMsgid {
  return resultCmsgGetHistoryMsgResp.lastMsgid;
}
- (CMsgGetHistoryMsgRespBuilder*) setLastMsgid:(UInt64) value {
  resultCmsgGetHistoryMsgResp.hasLastMsgid = YES;
  resultCmsgGetHistoryMsgResp.lastMsgid = value;
  return self;
}
- (CMsgGetHistoryMsgRespBuilder*) clearLastMsgid {
  resultCmsgGetHistoryMsgResp.hasLastMsgid = NO;
  resultCmsgGetHistoryMsgResp.lastMsgid = 0L;
  return self;
}
@end

@interface CMsgGetLatestMsgReq ()
@property UInt64 uid;
@property UInt32 limit;
@property UInt64 startMsgtime;
@property UInt64 startMsgid;
@end

@implementation CMsgGetLatestMsgReq

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasLimit {
  return !!hasLimit_;
}
- (void) setHasLimit:(BOOL) _value_ {
  hasLimit_ = !!_value_;
}
@synthesize limit;
- (BOOL) hasStartMsgtime {
  return !!hasStartMsgtime_;
}
- (void) setHasStartMsgtime:(BOOL) _value_ {
  hasStartMsgtime_ = !!_value_;
}
@synthesize startMsgtime;
- (BOOL) hasStartMsgid {
  return !!hasStartMsgid_;
}
- (void) setHasStartMsgid:(BOOL) _value_ {
  hasStartMsgid_ = !!_value_;
}
@synthesize startMsgid;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
    self.limit = 0;
    self.startMsgtime = 0L;
    self.startMsgid = 0L;
  }
  return self;
}
static CMsgGetLatestMsgReq* defaultCMsgGetLatestMsgReqInstance = nil;
+ (void) initialize {
  if (self == [CMsgGetLatestMsgReq class]) {
    defaultCMsgGetLatestMsgReqInstance = [[CMsgGetLatestMsgReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgGetLatestMsgReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgGetLatestMsgReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  if (self.hasLimit) {
    [output writeUInt32:2 value:self.limit];
  }
  if (self.hasStartMsgtime) {
    [output writeUInt64:3 value:self.startMsgtime];
  }
  if (self.hasStartMsgid) {
    [output writeUInt64:4 value:self.startMsgid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  if (self.hasLimit) {
    size_ += computeUInt32Size(2, self.limit);
  }
  if (self.hasStartMsgtime) {
    size_ += computeUInt64Size(3, self.startMsgtime);
  }
  if (self.hasStartMsgid) {
    size_ += computeUInt64Size(4, self.startMsgid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGetLatestMsgReq*) parseFromData:(NSData*) data {
  return (CMsgGetLatestMsgReq*)[[[CMsgGetLatestMsgReq builder] mergeFromData:data] build];
}
+ (CMsgGetLatestMsgReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetLatestMsgReq*)[[[CMsgGetLatestMsgReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetLatestMsgReq*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGetLatestMsgReq*)[[[CMsgGetLatestMsgReq builder] mergeFromInputStream:input] build];
}
+ (CMsgGetLatestMsgReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetLatestMsgReq*)[[[CMsgGetLatestMsgReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetLatestMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGetLatestMsgReq*)[[[CMsgGetLatestMsgReq builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGetLatestMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetLatestMsgReq*)[[[CMsgGetLatestMsgReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetLatestMsgReqBuilder*) builder {
  return [[CMsgGetLatestMsgReqBuilder alloc] init];
}
+ (CMsgGetLatestMsgReqBuilder*) builderWithPrototype:(CMsgGetLatestMsgReq*) prototype {
  return [[CMsgGetLatestMsgReq builder] mergeFrom:prototype];
}
- (CMsgGetLatestMsgReqBuilder*) builder {
  return [CMsgGetLatestMsgReq builder];
}
- (CMsgGetLatestMsgReqBuilder*) toBuilder {
  return [CMsgGetLatestMsgReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  if (self.hasLimit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"limit", [NSNumber numberWithInteger:self.limit]];
  }
  if (self.hasStartMsgtime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startMsgtime", [NSNumber numberWithLongLong:self.startMsgtime]];
  }
  if (self.hasStartMsgid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startMsgid", [NSNumber numberWithLongLong:self.startMsgid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGetLatestMsgReq class]]) {
    return NO;
  }
  CMsgGetLatestMsgReq *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasLimit == otherMessage.hasLimit &&
      (!self.hasLimit || self.limit == otherMessage.limit) &&
      self.hasStartMsgtime == otherMessage.hasStartMsgtime &&
      (!self.hasStartMsgtime || self.startMsgtime == otherMessage.startMsgtime) &&
      self.hasStartMsgid == otherMessage.hasStartMsgid &&
      (!self.hasStartMsgid || self.startMsgid == otherMessage.startMsgid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  if (self.hasLimit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.limit] hash];
  }
  if (self.hasStartMsgtime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.startMsgtime] hash];
  }
  if (self.hasStartMsgid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.startMsgid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGetLatestMsgReqBuilder()
@property (strong) CMsgGetLatestMsgReq* resultCmsgGetLatestMsgReq;
@end

@implementation CMsgGetLatestMsgReqBuilder
@synthesize resultCmsgGetLatestMsgReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgGetLatestMsgReq = [[CMsgGetLatestMsgReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgGetLatestMsgReq;
}
- (CMsgGetLatestMsgReqBuilder*) clear {
  self.resultCmsgGetLatestMsgReq = [[CMsgGetLatestMsgReq alloc] init];
  return self;
}
- (CMsgGetLatestMsgReqBuilder*) clone {
  return [CMsgGetLatestMsgReq builderWithPrototype:resultCmsgGetLatestMsgReq];
}
- (CMsgGetLatestMsgReq*) defaultInstance {
  return [CMsgGetLatestMsgReq defaultInstance];
}
- (CMsgGetLatestMsgReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGetLatestMsgReq*) buildPartial {
  CMsgGetLatestMsgReq* returnMe = resultCmsgGetLatestMsgReq;
  self.resultCmsgGetLatestMsgReq = nil;
  return returnMe;
}
- (CMsgGetLatestMsgReqBuilder*) mergeFrom:(CMsgGetLatestMsgReq*) other {
  if (other == [CMsgGetLatestMsgReq defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasLimit) {
    [self setLimit:other.limit];
  }
  if (other.hasStartMsgtime) {
    [self setStartMsgtime:other.startMsgtime];
  }
  if (other.hasStartMsgid) {
    [self setStartMsgid:other.startMsgid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGetLatestMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGetLatestMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 16: {
        [self setLimit:[input readUInt32]];
        break;
      }
      case 24: {
        [self setStartMsgtime:[input readUInt64]];
        break;
      }
      case 32: {
        [self setStartMsgid:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultCmsgGetLatestMsgReq.hasUid;
}
- (UInt64) uid {
  return resultCmsgGetLatestMsgReq.uid;
}
- (CMsgGetLatestMsgReqBuilder*) setUid:(UInt64) value {
  resultCmsgGetLatestMsgReq.hasUid = YES;
  resultCmsgGetLatestMsgReq.uid = value;
  return self;
}
- (CMsgGetLatestMsgReqBuilder*) clearUid {
  resultCmsgGetLatestMsgReq.hasUid = NO;
  resultCmsgGetLatestMsgReq.uid = 0L;
  return self;
}
- (BOOL) hasLimit {
  return resultCmsgGetLatestMsgReq.hasLimit;
}
- (UInt32) limit {
  return resultCmsgGetLatestMsgReq.limit;
}
- (CMsgGetLatestMsgReqBuilder*) setLimit:(UInt32) value {
  resultCmsgGetLatestMsgReq.hasLimit = YES;
  resultCmsgGetLatestMsgReq.limit = value;
  return self;
}
- (CMsgGetLatestMsgReqBuilder*) clearLimit {
  resultCmsgGetLatestMsgReq.hasLimit = NO;
  resultCmsgGetLatestMsgReq.limit = 0;
  return self;
}
- (BOOL) hasStartMsgtime {
  return resultCmsgGetLatestMsgReq.hasStartMsgtime;
}
- (UInt64) startMsgtime {
  return resultCmsgGetLatestMsgReq.startMsgtime;
}
- (CMsgGetLatestMsgReqBuilder*) setStartMsgtime:(UInt64) value {
  resultCmsgGetLatestMsgReq.hasStartMsgtime = YES;
  resultCmsgGetLatestMsgReq.startMsgtime = value;
  return self;
}
- (CMsgGetLatestMsgReqBuilder*) clearStartMsgtime {
  resultCmsgGetLatestMsgReq.hasStartMsgtime = NO;
  resultCmsgGetLatestMsgReq.startMsgtime = 0L;
  return self;
}
- (BOOL) hasStartMsgid {
  return resultCmsgGetLatestMsgReq.hasStartMsgid;
}
- (UInt64) startMsgid {
  return resultCmsgGetLatestMsgReq.startMsgid;
}
- (CMsgGetLatestMsgReqBuilder*) setStartMsgid:(UInt64) value {
  resultCmsgGetLatestMsgReq.hasStartMsgid = YES;
  resultCmsgGetLatestMsgReq.startMsgid = value;
  return self;
}
- (CMsgGetLatestMsgReqBuilder*) clearStartMsgid {
  resultCmsgGetLatestMsgReq.hasStartMsgid = NO;
  resultCmsgGetLatestMsgReq.startMsgid = 0L;
  return self;
}
@end

@interface CMsgGetLatestMsgResp ()
@property (strong) NSMutableArray * msgsArray;
@property UInt64 lastMsgtime;
@property UInt64 lastMsgid;
@end

@implementation CMsgGetLatestMsgResp

@synthesize msgsArray;
@dynamic msgs;
- (BOOL) hasLastMsgtime {
  return !!hasLastMsgtime_;
}
- (void) setHasLastMsgtime:(BOOL) _value_ {
  hasLastMsgtime_ = !!_value_;
}
@synthesize lastMsgtime;
- (BOOL) hasLastMsgid {
  return !!hasLastMsgid_;
}
- (void) setHasLastMsgid:(BOOL) _value_ {
  hasLastMsgid_ = !!_value_;
}
@synthesize lastMsgid;
- (instancetype) init {
  if ((self = [super init])) {
    self.lastMsgtime = 0L;
    self.lastMsgid = 0L;
  }
  return self;
}
static CMsgGetLatestMsgResp* defaultCMsgGetLatestMsgRespInstance = nil;
+ (void) initialize {
  if (self == [CMsgGetLatestMsgResp class]) {
    defaultCMsgGetLatestMsgRespInstance = [[CMsgGetLatestMsgResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgGetLatestMsgRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgGetLatestMsgRespInstance;
}
- (NSArray *)msgs {
  return msgsArray;
}
- (CMsgPBContent*)msgsAtIndex:(NSUInteger)index {
  return [msgsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.msgsArray enumerateObjectsUsingBlock:^(CMsgPBContent *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasLastMsgtime) {
    [output writeUInt64:2 value:self.lastMsgtime];
  }
  if (self.hasLastMsgid) {
    [output writeUInt64:3 value:self.lastMsgid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.msgsArray enumerateObjectsUsingBlock:^(CMsgPBContent *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasLastMsgtime) {
    size_ += computeUInt64Size(2, self.lastMsgtime);
  }
  if (self.hasLastMsgid) {
    size_ += computeUInt64Size(3, self.lastMsgid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGetLatestMsgResp*) parseFromData:(NSData*) data {
  return (CMsgGetLatestMsgResp*)[[[CMsgGetLatestMsgResp builder] mergeFromData:data] build];
}
+ (CMsgGetLatestMsgResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetLatestMsgResp*)[[[CMsgGetLatestMsgResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetLatestMsgResp*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGetLatestMsgResp*)[[[CMsgGetLatestMsgResp builder] mergeFromInputStream:input] build];
}
+ (CMsgGetLatestMsgResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetLatestMsgResp*)[[[CMsgGetLatestMsgResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetLatestMsgResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGetLatestMsgResp*)[[[CMsgGetLatestMsgResp builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGetLatestMsgResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGetLatestMsgResp*)[[[CMsgGetLatestMsgResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGetLatestMsgRespBuilder*) builder {
  return [[CMsgGetLatestMsgRespBuilder alloc] init];
}
+ (CMsgGetLatestMsgRespBuilder*) builderWithPrototype:(CMsgGetLatestMsgResp*) prototype {
  return [[CMsgGetLatestMsgResp builder] mergeFrom:prototype];
}
- (CMsgGetLatestMsgRespBuilder*) builder {
  return [CMsgGetLatestMsgResp builder];
}
- (CMsgGetLatestMsgRespBuilder*) toBuilder {
  return [CMsgGetLatestMsgResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.msgsArray enumerateObjectsUsingBlock:^(CMsgPBContent *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgs"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasLastMsgtime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastMsgtime", [NSNumber numberWithLongLong:self.lastMsgtime]];
  }
  if (self.hasLastMsgid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastMsgid", [NSNumber numberWithLongLong:self.lastMsgid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGetLatestMsgResp class]]) {
    return NO;
  }
  CMsgGetLatestMsgResp *otherMessage = other;
  return
      [self.msgsArray isEqualToArray:otherMessage.msgsArray] &&
      self.hasLastMsgtime == otherMessage.hasLastMsgtime &&
      (!self.hasLastMsgtime || self.lastMsgtime == otherMessage.lastMsgtime) &&
      self.hasLastMsgid == otherMessage.hasLastMsgid &&
      (!self.hasLastMsgid || self.lastMsgid == otherMessage.lastMsgid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.msgsArray enumerateObjectsUsingBlock:^(CMsgPBContent *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasLastMsgtime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastMsgtime] hash];
  }
  if (self.hasLastMsgid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastMsgid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGetLatestMsgRespBuilder()
@property (strong) CMsgGetLatestMsgResp* resultCmsgGetLatestMsgResp;
@end

@implementation CMsgGetLatestMsgRespBuilder
@synthesize resultCmsgGetLatestMsgResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgGetLatestMsgResp = [[CMsgGetLatestMsgResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgGetLatestMsgResp;
}
- (CMsgGetLatestMsgRespBuilder*) clear {
  self.resultCmsgGetLatestMsgResp = [[CMsgGetLatestMsgResp alloc] init];
  return self;
}
- (CMsgGetLatestMsgRespBuilder*) clone {
  return [CMsgGetLatestMsgResp builderWithPrototype:resultCmsgGetLatestMsgResp];
}
- (CMsgGetLatestMsgResp*) defaultInstance {
  return [CMsgGetLatestMsgResp defaultInstance];
}
- (CMsgGetLatestMsgResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGetLatestMsgResp*) buildPartial {
  CMsgGetLatestMsgResp* returnMe = resultCmsgGetLatestMsgResp;
  self.resultCmsgGetLatestMsgResp = nil;
  return returnMe;
}
- (CMsgGetLatestMsgRespBuilder*) mergeFrom:(CMsgGetLatestMsgResp*) other {
  if (other == [CMsgGetLatestMsgResp defaultInstance]) {
    return self;
  }
  if (other.msgsArray.count > 0) {
    if (resultCmsgGetLatestMsgResp.msgsArray == nil) {
      resultCmsgGetLatestMsgResp.msgsArray = [[NSMutableArray alloc] initWithArray:other.msgsArray];
    } else {
      [resultCmsgGetLatestMsgResp.msgsArray addObjectsFromArray:other.msgsArray];
    }
  }
  if (other.hasLastMsgtime) {
    [self setLastMsgtime:other.lastMsgtime];
  }
  if (other.hasLastMsgid) {
    [self setLastMsgid:other.lastMsgid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGetLatestMsgRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGetLatestMsgRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CMsgPBContentBuilder* subBuilder = [CMsgPBContent builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMsgs:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setLastMsgtime:[input readUInt64]];
        break;
      }
      case 24: {
        [self setLastMsgid:[input readUInt64]];
        break;
      }
    }
  }
}
- (NSMutableArray *)msgs {
  return resultCmsgGetLatestMsgResp.msgsArray;
}
- (CMsgPBContent*)msgsAtIndex:(NSUInteger)index {
  return [resultCmsgGetLatestMsgResp msgsAtIndex:index];
}
- (CMsgGetLatestMsgRespBuilder *)addMsgs:(CMsgPBContent*)value {
  if (resultCmsgGetLatestMsgResp.msgsArray == nil) {
    resultCmsgGetLatestMsgResp.msgsArray = [[NSMutableArray alloc]init];
  }
  [resultCmsgGetLatestMsgResp.msgsArray addObject:value];
  return self;
}
- (CMsgGetLatestMsgRespBuilder *)setMsgsArray:(NSArray *)array {
  resultCmsgGetLatestMsgResp.msgsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (CMsgGetLatestMsgRespBuilder *)clearMsgs {
  resultCmsgGetLatestMsgResp.msgsArray = nil;
  return self;
}
- (BOOL) hasLastMsgtime {
  return resultCmsgGetLatestMsgResp.hasLastMsgtime;
}
- (UInt64) lastMsgtime {
  return resultCmsgGetLatestMsgResp.lastMsgtime;
}
- (CMsgGetLatestMsgRespBuilder*) setLastMsgtime:(UInt64) value {
  resultCmsgGetLatestMsgResp.hasLastMsgtime = YES;
  resultCmsgGetLatestMsgResp.lastMsgtime = value;
  return self;
}
- (CMsgGetLatestMsgRespBuilder*) clearLastMsgtime {
  resultCmsgGetLatestMsgResp.hasLastMsgtime = NO;
  resultCmsgGetLatestMsgResp.lastMsgtime = 0L;
  return self;
}
- (BOOL) hasLastMsgid {
  return resultCmsgGetLatestMsgResp.hasLastMsgid;
}
- (UInt64) lastMsgid {
  return resultCmsgGetLatestMsgResp.lastMsgid;
}
- (CMsgGetLatestMsgRespBuilder*) setLastMsgid:(UInt64) value {
  resultCmsgGetLatestMsgResp.hasLastMsgid = YES;
  resultCmsgGetLatestMsgResp.lastMsgid = value;
  return self;
}
- (CMsgGetLatestMsgRespBuilder*) clearLastMsgid {
  resultCmsgGetLatestMsgResp.hasLastMsgid = NO;
  resultCmsgGetLatestMsgResp.lastMsgid = 0L;
  return self;
}
@end

@interface CMsgPushNotify ()
@property UInt64 fromUid;
@property UInt64 toUid;
@property UInt64 msgId;
@property UInt64 time;
@property UInt32 msgType;
@property (strong) NSData* msgData;
@end

@implementation CMsgPushNotify

- (BOOL) hasFromUid {
  return !!hasFromUid_;
}
- (void) setHasFromUid:(BOOL) _value_ {
  hasFromUid_ = !!_value_;
}
@synthesize fromUid;
- (BOOL) hasToUid {
  return !!hasToUid_;
}
- (void) setHasToUid:(BOOL) _value_ {
  hasToUid_ = !!_value_;
}
@synthesize toUid;
- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value_ {
  hasTime_ = !!_value_;
}
@synthesize time;
- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) _value_ {
  hasMsgType_ = !!_value_;
}
@synthesize msgType;
- (BOOL) hasMsgData {
  return !!hasMsgData_;
}
- (void) setHasMsgData:(BOOL) _value_ {
  hasMsgData_ = !!_value_;
}
@synthesize msgData;
- (instancetype) init {
  if ((self = [super init])) {
    self.fromUid = 0L;
    self.toUid = 0L;
    self.msgId = 0L;
    self.time = 0L;
    self.msgType = 0;
    self.msgData = [NSData data];
  }
  return self;
}
static CMsgPushNotify* defaultCMsgPushNotifyInstance = nil;
+ (void) initialize {
  if (self == [CMsgPushNotify class]) {
    defaultCMsgPushNotifyInstance = [[CMsgPushNotify alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgPushNotifyInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgPushNotifyInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFromUid) {
    [output writeUInt64:1 value:self.fromUid];
  }
  if (self.hasToUid) {
    [output writeUInt64:2 value:self.toUid];
  }
  if (self.hasMsgId) {
    [output writeUInt64:3 value:self.msgId];
  }
  if (self.hasTime) {
    [output writeUInt64:4 value:self.time];
  }
  if (self.hasMsgType) {
    [output writeUInt32:5 value:self.msgType];
  }
  if (self.hasMsgData) {
    [output writeData:6 value:self.msgData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFromUid) {
    size_ += computeUInt64Size(1, self.fromUid);
  }
  if (self.hasToUid) {
    size_ += computeUInt64Size(2, self.toUid);
  }
  if (self.hasMsgId) {
    size_ += computeUInt64Size(3, self.msgId);
  }
  if (self.hasTime) {
    size_ += computeUInt64Size(4, self.time);
  }
  if (self.hasMsgType) {
    size_ += computeUInt32Size(5, self.msgType);
  }
  if (self.hasMsgData) {
    size_ += computeDataSize(6, self.msgData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgPushNotify*) parseFromData:(NSData*) data {
  return (CMsgPushNotify*)[[[CMsgPushNotify builder] mergeFromData:data] build];
}
+ (CMsgPushNotify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgPushNotify*)[[[CMsgPushNotify builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgPushNotify*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgPushNotify*)[[[CMsgPushNotify builder] mergeFromInputStream:input] build];
}
+ (CMsgPushNotify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgPushNotify*)[[[CMsgPushNotify builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgPushNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgPushNotify*)[[[CMsgPushNotify builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgPushNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgPushNotify*)[[[CMsgPushNotify builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgPushNotifyBuilder*) builder {
  return [[CMsgPushNotifyBuilder alloc] init];
}
+ (CMsgPushNotifyBuilder*) builderWithPrototype:(CMsgPushNotify*) prototype {
  return [[CMsgPushNotify builder] mergeFrom:prototype];
}
- (CMsgPushNotifyBuilder*) builder {
  return [CMsgPushNotify builder];
}
- (CMsgPushNotifyBuilder*) toBuilder {
  return [CMsgPushNotify builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFromUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUid", [NSNumber numberWithLongLong:self.fromUid]];
  }
  if (self.hasToUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toUid", [NSNumber numberWithLongLong:self.toUid]];
  }
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithLongLong:self.time]];
  }
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgType", [NSNumber numberWithInteger:self.msgType]];
  }
  if (self.hasMsgData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgData", self.msgData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgPushNotify class]]) {
    return NO;
  }
  CMsgPushNotify *otherMessage = other;
  return
      self.hasFromUid == otherMessage.hasFromUid &&
      (!self.hasFromUid || self.fromUid == otherMessage.fromUid) &&
      self.hasToUid == otherMessage.hasToUid &&
      (!self.hasToUid || self.toUid == otherMessage.toUid) &&
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      self.hasMsgData == otherMessage.hasMsgData &&
      (!self.hasMsgData || [self.msgData isEqual:otherMessage.msgData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFromUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.fromUid] hash];
  }
  if (self.hasToUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.toUid] hash];
  }
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.time] hash];
  }
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgType] hash];
  }
  if (self.hasMsgData) {
    hashCode = hashCode * 31 + [self.msgData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgPushNotifyBuilder()
@property (strong) CMsgPushNotify* resultCmsgPushNotify;
@end

@implementation CMsgPushNotifyBuilder
@synthesize resultCmsgPushNotify;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgPushNotify = [[CMsgPushNotify alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgPushNotify;
}
- (CMsgPushNotifyBuilder*) clear {
  self.resultCmsgPushNotify = [[CMsgPushNotify alloc] init];
  return self;
}
- (CMsgPushNotifyBuilder*) clone {
  return [CMsgPushNotify builderWithPrototype:resultCmsgPushNotify];
}
- (CMsgPushNotify*) defaultInstance {
  return [CMsgPushNotify defaultInstance];
}
- (CMsgPushNotify*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgPushNotify*) buildPartial {
  CMsgPushNotify* returnMe = resultCmsgPushNotify;
  self.resultCmsgPushNotify = nil;
  return returnMe;
}
- (CMsgPushNotifyBuilder*) mergeFrom:(CMsgPushNotify*) other {
  if (other == [CMsgPushNotify defaultInstance]) {
    return self;
  }
  if (other.hasFromUid) {
    [self setFromUid:other.fromUid];
  }
  if (other.hasToUid) {
    [self setToUid:other.toUid];
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  if (other.hasMsgData) {
    [self setMsgData:other.msgData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgPushNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgPushNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFromUid:[input readUInt64]];
        break;
      }
      case 16: {
        [self setToUid:[input readUInt64]];
        break;
      }
      case 24: {
        [self setMsgId:[input readUInt64]];
        break;
      }
      case 32: {
        [self setTime:[input readUInt64]];
        break;
      }
      case 40: {
        [self setMsgType:[input readUInt32]];
        break;
      }
      case 50: {
        [self setMsgData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasFromUid {
  return resultCmsgPushNotify.hasFromUid;
}
- (UInt64) fromUid {
  return resultCmsgPushNotify.fromUid;
}
- (CMsgPushNotifyBuilder*) setFromUid:(UInt64) value {
  resultCmsgPushNotify.hasFromUid = YES;
  resultCmsgPushNotify.fromUid = value;
  return self;
}
- (CMsgPushNotifyBuilder*) clearFromUid {
  resultCmsgPushNotify.hasFromUid = NO;
  resultCmsgPushNotify.fromUid = 0L;
  return self;
}
- (BOOL) hasToUid {
  return resultCmsgPushNotify.hasToUid;
}
- (UInt64) toUid {
  return resultCmsgPushNotify.toUid;
}
- (CMsgPushNotifyBuilder*) setToUid:(UInt64) value {
  resultCmsgPushNotify.hasToUid = YES;
  resultCmsgPushNotify.toUid = value;
  return self;
}
- (CMsgPushNotifyBuilder*) clearToUid {
  resultCmsgPushNotify.hasToUid = NO;
  resultCmsgPushNotify.toUid = 0L;
  return self;
}
- (BOOL) hasMsgId {
  return resultCmsgPushNotify.hasMsgId;
}
- (UInt64) msgId {
  return resultCmsgPushNotify.msgId;
}
- (CMsgPushNotifyBuilder*) setMsgId:(UInt64) value {
  resultCmsgPushNotify.hasMsgId = YES;
  resultCmsgPushNotify.msgId = value;
  return self;
}
- (CMsgPushNotifyBuilder*) clearMsgId {
  resultCmsgPushNotify.hasMsgId = NO;
  resultCmsgPushNotify.msgId = 0L;
  return self;
}
- (BOOL) hasTime {
  return resultCmsgPushNotify.hasTime;
}
- (UInt64) time {
  return resultCmsgPushNotify.time;
}
- (CMsgPushNotifyBuilder*) setTime:(UInt64) value {
  resultCmsgPushNotify.hasTime = YES;
  resultCmsgPushNotify.time = value;
  return self;
}
- (CMsgPushNotifyBuilder*) clearTime {
  resultCmsgPushNotify.hasTime = NO;
  resultCmsgPushNotify.time = 0L;
  return self;
}
- (BOOL) hasMsgType {
  return resultCmsgPushNotify.hasMsgType;
}
- (UInt32) msgType {
  return resultCmsgPushNotify.msgType;
}
- (CMsgPushNotifyBuilder*) setMsgType:(UInt32) value {
  resultCmsgPushNotify.hasMsgType = YES;
  resultCmsgPushNotify.msgType = value;
  return self;
}
- (CMsgPushNotifyBuilder*) clearMsgType {
  resultCmsgPushNotify.hasMsgType = NO;
  resultCmsgPushNotify.msgType = 0;
  return self;
}
- (BOOL) hasMsgData {
  return resultCmsgPushNotify.hasMsgData;
}
- (NSData*) msgData {
  return resultCmsgPushNotify.msgData;
}
- (CMsgPushNotifyBuilder*) setMsgData:(NSData*) value {
  resultCmsgPushNotify.hasMsgData = YES;
  resultCmsgPushNotify.msgData = value;
  return self;
}
- (CMsgPushNotifyBuilder*) clearMsgData {
  resultCmsgPushNotify.hasMsgData = NO;
  resultCmsgPushNotify.msgData = [NSData data];
  return self;
}
@end

@interface CMsgMergeMsgReq ()
@property (strong) NSString* mergeImtoken;
@end

@implementation CMsgMergeMsgReq

- (BOOL) hasMergeImtoken {
  return !!hasMergeImtoken_;
}
- (void) setHasMergeImtoken:(BOOL) _value_ {
  hasMergeImtoken_ = !!_value_;
}
@synthesize mergeImtoken;
- (instancetype) init {
  if ((self = [super init])) {
    self.mergeImtoken = @"";
  }
  return self;
}
static CMsgMergeMsgReq* defaultCMsgMergeMsgReqInstance = nil;
+ (void) initialize {
  if (self == [CMsgMergeMsgReq class]) {
    defaultCMsgMergeMsgReqInstance = [[CMsgMergeMsgReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgMergeMsgReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgMergeMsgReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMergeImtoken) {
    [output writeString:1 value:self.mergeImtoken];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMergeImtoken) {
    size_ += computeStringSize(1, self.mergeImtoken);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgMergeMsgReq*) parseFromData:(NSData*) data {
  return (CMsgMergeMsgReq*)[[[CMsgMergeMsgReq builder] mergeFromData:data] build];
}
+ (CMsgMergeMsgReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMergeMsgReq*)[[[CMsgMergeMsgReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgMergeMsgReq*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgMergeMsgReq*)[[[CMsgMergeMsgReq builder] mergeFromInputStream:input] build];
}
+ (CMsgMergeMsgReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMergeMsgReq*)[[[CMsgMergeMsgReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMergeMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgMergeMsgReq*)[[[CMsgMergeMsgReq builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgMergeMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMergeMsgReq*)[[[CMsgMergeMsgReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMergeMsgReqBuilder*) builder {
  return [[CMsgMergeMsgReqBuilder alloc] init];
}
+ (CMsgMergeMsgReqBuilder*) builderWithPrototype:(CMsgMergeMsgReq*) prototype {
  return [[CMsgMergeMsgReq builder] mergeFrom:prototype];
}
- (CMsgMergeMsgReqBuilder*) builder {
  return [CMsgMergeMsgReq builder];
}
- (CMsgMergeMsgReqBuilder*) toBuilder {
  return [CMsgMergeMsgReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMergeImtoken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mergeImtoken", self.mergeImtoken];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgMergeMsgReq class]]) {
    return NO;
  }
  CMsgMergeMsgReq *otherMessage = other;
  return
      self.hasMergeImtoken == otherMessage.hasMergeImtoken &&
      (!self.hasMergeImtoken || [self.mergeImtoken isEqual:otherMessage.mergeImtoken]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMergeImtoken) {
    hashCode = hashCode * 31 + [self.mergeImtoken hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgMergeMsgReqBuilder()
@property (strong) CMsgMergeMsgReq* resultCmsgMergeMsgReq;
@end

@implementation CMsgMergeMsgReqBuilder
@synthesize resultCmsgMergeMsgReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgMergeMsgReq = [[CMsgMergeMsgReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgMergeMsgReq;
}
- (CMsgMergeMsgReqBuilder*) clear {
  self.resultCmsgMergeMsgReq = [[CMsgMergeMsgReq alloc] init];
  return self;
}
- (CMsgMergeMsgReqBuilder*) clone {
  return [CMsgMergeMsgReq builderWithPrototype:resultCmsgMergeMsgReq];
}
- (CMsgMergeMsgReq*) defaultInstance {
  return [CMsgMergeMsgReq defaultInstance];
}
- (CMsgMergeMsgReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgMergeMsgReq*) buildPartial {
  CMsgMergeMsgReq* returnMe = resultCmsgMergeMsgReq;
  self.resultCmsgMergeMsgReq = nil;
  return returnMe;
}
- (CMsgMergeMsgReqBuilder*) mergeFrom:(CMsgMergeMsgReq*) other {
  if (other == [CMsgMergeMsgReq defaultInstance]) {
    return self;
  }
  if (other.hasMergeImtoken) {
    [self setMergeImtoken:other.mergeImtoken];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgMergeMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgMergeMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMergeImtoken:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMergeImtoken {
  return resultCmsgMergeMsgReq.hasMergeImtoken;
}
- (NSString*) mergeImtoken {
  return resultCmsgMergeMsgReq.mergeImtoken;
}
- (CMsgMergeMsgReqBuilder*) setMergeImtoken:(NSString*) value {
  resultCmsgMergeMsgReq.hasMergeImtoken = YES;
  resultCmsgMergeMsgReq.mergeImtoken = value;
  return self;
}
- (CMsgMergeMsgReqBuilder*) clearMergeImtoken {
  resultCmsgMergeMsgReq.hasMergeImtoken = NO;
  resultCmsgMergeMsgReq.mergeImtoken = @"";
  return self;
}
@end

@interface CMsgMergeMsgResp ()
@end

@implementation CMsgMergeMsgResp

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgMergeMsgResp* defaultCMsgMergeMsgRespInstance = nil;
+ (void) initialize {
  if (self == [CMsgMergeMsgResp class]) {
    defaultCMsgMergeMsgRespInstance = [[CMsgMergeMsgResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgMergeMsgRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgMergeMsgRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgMergeMsgResp*) parseFromData:(NSData*) data {
  return (CMsgMergeMsgResp*)[[[CMsgMergeMsgResp builder] mergeFromData:data] build];
}
+ (CMsgMergeMsgResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMergeMsgResp*)[[[CMsgMergeMsgResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgMergeMsgResp*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgMergeMsgResp*)[[[CMsgMergeMsgResp builder] mergeFromInputStream:input] build];
}
+ (CMsgMergeMsgResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMergeMsgResp*)[[[CMsgMergeMsgResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMergeMsgResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgMergeMsgResp*)[[[CMsgMergeMsgResp builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgMergeMsgResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMergeMsgResp*)[[[CMsgMergeMsgResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMergeMsgRespBuilder*) builder {
  return [[CMsgMergeMsgRespBuilder alloc] init];
}
+ (CMsgMergeMsgRespBuilder*) builderWithPrototype:(CMsgMergeMsgResp*) prototype {
  return [[CMsgMergeMsgResp builder] mergeFrom:prototype];
}
- (CMsgMergeMsgRespBuilder*) builder {
  return [CMsgMergeMsgResp builder];
}
- (CMsgMergeMsgRespBuilder*) toBuilder {
  return [CMsgMergeMsgResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgMergeMsgResp class]]) {
    return NO;
  }
  CMsgMergeMsgResp *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgMergeMsgRespBuilder()
@property (strong) CMsgMergeMsgResp* resultCmsgMergeMsgResp;
@end

@implementation CMsgMergeMsgRespBuilder
@synthesize resultCmsgMergeMsgResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgMergeMsgResp = [[CMsgMergeMsgResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgMergeMsgResp;
}
- (CMsgMergeMsgRespBuilder*) clear {
  self.resultCmsgMergeMsgResp = [[CMsgMergeMsgResp alloc] init];
  return self;
}
- (CMsgMergeMsgRespBuilder*) clone {
  return [CMsgMergeMsgResp builderWithPrototype:resultCmsgMergeMsgResp];
}
- (CMsgMergeMsgResp*) defaultInstance {
  return [CMsgMergeMsgResp defaultInstance];
}
- (CMsgMergeMsgResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgMergeMsgResp*) buildPartial {
  CMsgMergeMsgResp* returnMe = resultCmsgMergeMsgResp;
  self.resultCmsgMergeMsgResp = nil;
  return returnMe;
}
- (CMsgMergeMsgRespBuilder*) mergeFrom:(CMsgMergeMsgResp*) other {
  if (other == [CMsgMergeMsgResp defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgMergeMsgRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgMergeMsgRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgClearUnreadByUidReq ()
@property UInt64 uid;
@end

@implementation CMsgClearUnreadByUidReq

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
  }
  return self;
}
static CMsgClearUnreadByUidReq* defaultCMsgClearUnreadByUidReqInstance = nil;
+ (void) initialize {
  if (self == [CMsgClearUnreadByUidReq class]) {
    defaultCMsgClearUnreadByUidReqInstance = [[CMsgClearUnreadByUidReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgClearUnreadByUidReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgClearUnreadByUidReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgClearUnreadByUidReq*) parseFromData:(NSData*) data {
  return (CMsgClearUnreadByUidReq*)[[[CMsgClearUnreadByUidReq builder] mergeFromData:data] build];
}
+ (CMsgClearUnreadByUidReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgClearUnreadByUidReq*)[[[CMsgClearUnreadByUidReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgClearUnreadByUidReq*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgClearUnreadByUidReq*)[[[CMsgClearUnreadByUidReq builder] mergeFromInputStream:input] build];
}
+ (CMsgClearUnreadByUidReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgClearUnreadByUidReq*)[[[CMsgClearUnreadByUidReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgClearUnreadByUidReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgClearUnreadByUidReq*)[[[CMsgClearUnreadByUidReq builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgClearUnreadByUidReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgClearUnreadByUidReq*)[[[CMsgClearUnreadByUidReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgClearUnreadByUidReqBuilder*) builder {
  return [[CMsgClearUnreadByUidReqBuilder alloc] init];
}
+ (CMsgClearUnreadByUidReqBuilder*) builderWithPrototype:(CMsgClearUnreadByUidReq*) prototype {
  return [[CMsgClearUnreadByUidReq builder] mergeFrom:prototype];
}
- (CMsgClearUnreadByUidReqBuilder*) builder {
  return [CMsgClearUnreadByUidReq builder];
}
- (CMsgClearUnreadByUidReqBuilder*) toBuilder {
  return [CMsgClearUnreadByUidReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgClearUnreadByUidReq class]]) {
    return NO;
  }
  CMsgClearUnreadByUidReq *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgClearUnreadByUidReqBuilder()
@property (strong) CMsgClearUnreadByUidReq* resultCmsgClearUnreadByUidReq;
@end

@implementation CMsgClearUnreadByUidReqBuilder
@synthesize resultCmsgClearUnreadByUidReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgClearUnreadByUidReq = [[CMsgClearUnreadByUidReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgClearUnreadByUidReq;
}
- (CMsgClearUnreadByUidReqBuilder*) clear {
  self.resultCmsgClearUnreadByUidReq = [[CMsgClearUnreadByUidReq alloc] init];
  return self;
}
- (CMsgClearUnreadByUidReqBuilder*) clone {
  return [CMsgClearUnreadByUidReq builderWithPrototype:resultCmsgClearUnreadByUidReq];
}
- (CMsgClearUnreadByUidReq*) defaultInstance {
  return [CMsgClearUnreadByUidReq defaultInstance];
}
- (CMsgClearUnreadByUidReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgClearUnreadByUidReq*) buildPartial {
  CMsgClearUnreadByUidReq* returnMe = resultCmsgClearUnreadByUidReq;
  self.resultCmsgClearUnreadByUidReq = nil;
  return returnMe;
}
- (CMsgClearUnreadByUidReqBuilder*) mergeFrom:(CMsgClearUnreadByUidReq*) other {
  if (other == [CMsgClearUnreadByUidReq defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgClearUnreadByUidReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgClearUnreadByUidReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultCmsgClearUnreadByUidReq.hasUid;
}
- (UInt64) uid {
  return resultCmsgClearUnreadByUidReq.uid;
}
- (CMsgClearUnreadByUidReqBuilder*) setUid:(UInt64) value {
  resultCmsgClearUnreadByUidReq.hasUid = YES;
  resultCmsgClearUnreadByUidReq.uid = value;
  return self;
}
- (CMsgClearUnreadByUidReqBuilder*) clearUid {
  resultCmsgClearUnreadByUidReq.hasUid = NO;
  resultCmsgClearUnreadByUidReq.uid = 0L;
  return self;
}
@end

@interface CMsgClearUnreadByUidResp ()
@end

@implementation CMsgClearUnreadByUidResp

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgClearUnreadByUidResp* defaultCMsgClearUnreadByUidRespInstance = nil;
+ (void) initialize {
  if (self == [CMsgClearUnreadByUidResp class]) {
    defaultCMsgClearUnreadByUidRespInstance = [[CMsgClearUnreadByUidResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCMsgClearUnreadByUidRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCMsgClearUnreadByUidRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgClearUnreadByUidResp*) parseFromData:(NSData*) data {
  return (CMsgClearUnreadByUidResp*)[[[CMsgClearUnreadByUidResp builder] mergeFromData:data] build];
}
+ (CMsgClearUnreadByUidResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgClearUnreadByUidResp*)[[[CMsgClearUnreadByUidResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgClearUnreadByUidResp*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgClearUnreadByUidResp*)[[[CMsgClearUnreadByUidResp builder] mergeFromInputStream:input] build];
}
+ (CMsgClearUnreadByUidResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgClearUnreadByUidResp*)[[[CMsgClearUnreadByUidResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgClearUnreadByUidResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgClearUnreadByUidResp*)[[[CMsgClearUnreadByUidResp builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgClearUnreadByUidResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgClearUnreadByUidResp*)[[[CMsgClearUnreadByUidResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgClearUnreadByUidRespBuilder*) builder {
  return [[CMsgClearUnreadByUidRespBuilder alloc] init];
}
+ (CMsgClearUnreadByUidRespBuilder*) builderWithPrototype:(CMsgClearUnreadByUidResp*) prototype {
  return [[CMsgClearUnreadByUidResp builder] mergeFrom:prototype];
}
- (CMsgClearUnreadByUidRespBuilder*) builder {
  return [CMsgClearUnreadByUidResp builder];
}
- (CMsgClearUnreadByUidRespBuilder*) toBuilder {
  return [CMsgClearUnreadByUidResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgClearUnreadByUidResp class]]) {
    return NO;
  }
  CMsgClearUnreadByUidResp *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgClearUnreadByUidRespBuilder()
@property (strong) CMsgClearUnreadByUidResp* resultCmsgClearUnreadByUidResp;
@end

@implementation CMsgClearUnreadByUidRespBuilder
@synthesize resultCmsgClearUnreadByUidResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCmsgClearUnreadByUidResp = [[CMsgClearUnreadByUidResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCmsgClearUnreadByUidResp;
}
- (CMsgClearUnreadByUidRespBuilder*) clear {
  self.resultCmsgClearUnreadByUidResp = [[CMsgClearUnreadByUidResp alloc] init];
  return self;
}
- (CMsgClearUnreadByUidRespBuilder*) clone {
  return [CMsgClearUnreadByUidResp builderWithPrototype:resultCmsgClearUnreadByUidResp];
}
- (CMsgClearUnreadByUidResp*) defaultInstance {
  return [CMsgClearUnreadByUidResp defaultInstance];
}
- (CMsgClearUnreadByUidResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgClearUnreadByUidResp*) buildPartial {
  CMsgClearUnreadByUidResp* returnMe = resultCmsgClearUnreadByUidResp;
  self.resultCmsgClearUnreadByUidResp = nil;
  return returnMe;
}
- (CMsgClearUnreadByUidRespBuilder*) mergeFrom:(CMsgClearUnreadByUidResp*) other {
  if (other == [CMsgClearUnreadByUidResp defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgClearUnreadByUidRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgClearUnreadByUidRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end


// @@protoc_insertion_point(global_scope)
