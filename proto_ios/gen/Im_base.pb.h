// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

// @@protoc_insertion_point(imports)

@class CProtocolClientReq;
@class CProtocolClientReqBuilder;
@class CProtocolServerResp;
@class CProtocolServerRespBuilder;


typedef NS_ENUM(SInt32, EConstSourceTypes) {
  EConstSourceTypesClientTypeUnknown = 0,
  EConstSourceTypesClientTypePcHtml = 1001,
  EConstSourceTypesClientTypeIphoneWeidian = 2001,
  EConstSourceTypesClientTypeIphoneKoudai = 2002,
  EConstSourceTypesClientTypeIphoneBanjia = 2003,
  EConstSourceTypesClientTypeIphoneDaigou = 2004,
  EConstSourceTypesClientTypeIphoneWeidianBuyer = 2005,
  EConstSourceTypesClientTypeAndroidWeidian = 3001,
  EConstSourceTypesClientTypeAndroidKoudai = 3002,
  EConstSourceTypesClientTypeAndroidBanjia = 3003,
  EConstSourceTypesClientTypeAndroidDaigou = 3004,
  EConstSourceTypesClientTypeAndroidWeidianBuyer = 3005,
  EConstSourceTypesClientTypeIpadWeidian = 4001,
  EConstSourceTypesClientTypeIpadKoudai = 4002,
  EConstSourceTypesClientTypeIpadBanjia = 4003,
  EConstSourceTypesClientTypeIpadDaigou = 4004,
  EConstSourceTypesClientTypeIpadWeidianBuyer = 4005,
};

BOOL EConstSourceTypesIsValidValue(EConstSourceTypes value);
NSString *NSStringFromEConstSourceTypes(EConstSourceTypes value);

typedef NS_ENUM(SInt32, EConstPackTypes) {
  EConstPackTypesPackTypeReq = 1,
  EConstPackTypesPackTypeResp = 2,
  EConstPackTypesPackTypeNotify = 3,
};

BOOL EConstPackTypesIsValidValue(EConstPackTypes value);
NSString *NSStringFromEConstPackTypes(EConstPackTypes value);

typedef NS_ENUM(SInt32, EConstPBRespCodes) {
  EConstPBRespCodesPbRespSuccess = 200000,
  EConstPBRespCodesPbRespClientError = 400000,
  EConstPBRespCodesPbRespClientLackParam = 400001,
  EConstPBRespCodesPbRespServerError = 500000,
};

BOOL EConstPBRespCodesIsValidValue(EConstPBRespCodes value);
NSString *NSStringFromEConstPBRespCodes(EConstPBRespCodes value);


@interface ImBaseRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface CProtocolClientReq : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUid_:1;
  BOOL hasCmd_:1;
  BOOL hasSubCmd_:1;
  BOOL hasVersion_:1;
  BOOL hasProtocolContent_:1;
  BOOL hasVcodeSession_:1;
  BOOL hasVcodeUsdata_:1;
  BOOL hasSeq_:1;
  BOOL hasSourceType_:1;
  UInt64 uid;
  NSString* cmd;
  NSString* subCmd;
  NSString* version;
  NSData* protocolContent;
  NSData* vcodeSession;
  NSData* vcodeUsdata;
  UInt32 seq;
  EConstSourceTypes sourceType;
}
- (BOOL) hasCmd;
- (BOOL) hasSubCmd;
- (BOOL) hasVersion;
- (BOOL) hasUid;
- (BOOL) hasSeq;
- (BOOL) hasSourceType;
- (BOOL) hasProtocolContent;
- (BOOL) hasVcodeSession;
- (BOOL) hasVcodeUsdata;
@property (readonly, strong) NSString* cmd;
@property (readonly, strong) NSString* subCmd;
@property (readonly, strong) NSString* version;
@property (readonly) UInt64 uid;
@property (readonly) UInt32 seq;
@property (readonly) EConstSourceTypes sourceType;
@property (readonly, strong) NSData* protocolContent;
@property (readonly, strong) NSData* vcodeSession;
@property (readonly, strong) NSData* vcodeUsdata;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CProtocolClientReqBuilder*) builder;
+ (CProtocolClientReqBuilder*) builder;
+ (CProtocolClientReqBuilder*) builderWithPrototype:(CProtocolClientReq*) prototype;
- (CProtocolClientReqBuilder*) toBuilder;

+ (CProtocolClientReq*) parseFromData:(NSData*) data;
+ (CProtocolClientReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CProtocolClientReq*) parseFromInputStream:(NSInputStream*) input;
+ (CProtocolClientReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CProtocolClientReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CProtocolClientReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CProtocolClientReqBuilder : PBGeneratedMessageBuilder {
@private
  CProtocolClientReq* resultCprotocolClientReq;
}

- (CProtocolClientReq*) defaultInstance;

- (CProtocolClientReqBuilder*) clear;
- (CProtocolClientReqBuilder*) clone;

- (CProtocolClientReq*) build;
- (CProtocolClientReq*) buildPartial;

- (CProtocolClientReqBuilder*) mergeFrom:(CProtocolClientReq*) other;
- (CProtocolClientReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CProtocolClientReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCmd;
- (NSString*) cmd;
- (CProtocolClientReqBuilder*) setCmd:(NSString*) value;
- (CProtocolClientReqBuilder*) clearCmd;

- (BOOL) hasSubCmd;
- (NSString*) subCmd;
- (CProtocolClientReqBuilder*) setSubCmd:(NSString*) value;
- (CProtocolClientReqBuilder*) clearSubCmd;

- (BOOL) hasVersion;
- (NSString*) version;
- (CProtocolClientReqBuilder*) setVersion:(NSString*) value;
- (CProtocolClientReqBuilder*) clearVersion;

- (BOOL) hasUid;
- (UInt64) uid;
- (CProtocolClientReqBuilder*) setUid:(UInt64) value;
- (CProtocolClientReqBuilder*) clearUid;

- (BOOL) hasSeq;
- (UInt32) seq;
- (CProtocolClientReqBuilder*) setSeq:(UInt32) value;
- (CProtocolClientReqBuilder*) clearSeq;

- (BOOL) hasSourceType;
- (EConstSourceTypes) sourceType;
- (CProtocolClientReqBuilder*) setSourceType:(EConstSourceTypes) value;
- (CProtocolClientReqBuilder*) clearSourceType;

- (BOOL) hasProtocolContent;
- (NSData*) protocolContent;
- (CProtocolClientReqBuilder*) setProtocolContent:(NSData*) value;
- (CProtocolClientReqBuilder*) clearProtocolContent;

- (BOOL) hasVcodeSession;
- (NSData*) vcodeSession;
- (CProtocolClientReqBuilder*) setVcodeSession:(NSData*) value;
- (CProtocolClientReqBuilder*) clearVcodeSession;

- (BOOL) hasVcodeUsdata;
- (NSData*) vcodeUsdata;
- (CProtocolClientReqBuilder*) setVcodeUsdata:(NSData*) value;
- (CProtocolClientReqBuilder*) clearVcodeUsdata;
@end

@interface CProtocolServerResp : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUid_:1;
  BOOL hasCmd_:1;
  BOOL hasSubCmd_:1;
  BOOL hasVersion_:1;
  BOOL hasVcodePicdata_:1;
  BOOL hasProtocolContent_:1;
  BOOL hasVcodeSession_:1;
  BOOL hasSeq_:1;
  BOOL hasCode_:1;
  BOOL hasType_:1;
  UInt64 uid;
  NSString* cmd;
  NSString* subCmd;
  NSString* version;
  NSString* vcodePicdata;
  NSData* protocolContent;
  NSData* vcodeSession;
  UInt32 seq;
  UInt32 code;
  EConstPackTypes type;
}
- (BOOL) hasCmd;
- (BOOL) hasSubCmd;
- (BOOL) hasVersion;
- (BOOL) hasUid;
- (BOOL) hasSeq;
- (BOOL) hasType;
- (BOOL) hasCode;
- (BOOL) hasProtocolContent;
- (BOOL) hasVcodeSession;
- (BOOL) hasVcodePicdata;
@property (readonly, strong) NSString* cmd;
@property (readonly, strong) NSString* subCmd;
@property (readonly, strong) NSString* version;
@property (readonly) UInt64 uid;
@property (readonly) UInt32 seq;
@property (readonly) EConstPackTypes type;
@property (readonly) UInt32 code;
@property (readonly, strong) NSData* protocolContent;
@property (readonly, strong) NSData* vcodeSession;
@property (readonly, strong) NSString* vcodePicdata;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CProtocolServerRespBuilder*) builder;
+ (CProtocolServerRespBuilder*) builder;
+ (CProtocolServerRespBuilder*) builderWithPrototype:(CProtocolServerResp*) prototype;
- (CProtocolServerRespBuilder*) toBuilder;

+ (CProtocolServerResp*) parseFromData:(NSData*) data;
+ (CProtocolServerResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CProtocolServerResp*) parseFromInputStream:(NSInputStream*) input;
+ (CProtocolServerResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CProtocolServerResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CProtocolServerResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CProtocolServerRespBuilder : PBGeneratedMessageBuilder {
@private
  CProtocolServerResp* resultCprotocolServerResp;
}

- (CProtocolServerResp*) defaultInstance;

- (CProtocolServerRespBuilder*) clear;
- (CProtocolServerRespBuilder*) clone;

- (CProtocolServerResp*) build;
- (CProtocolServerResp*) buildPartial;

- (CProtocolServerRespBuilder*) mergeFrom:(CProtocolServerResp*) other;
- (CProtocolServerRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CProtocolServerRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCmd;
- (NSString*) cmd;
- (CProtocolServerRespBuilder*) setCmd:(NSString*) value;
- (CProtocolServerRespBuilder*) clearCmd;

- (BOOL) hasSubCmd;
- (NSString*) subCmd;
- (CProtocolServerRespBuilder*) setSubCmd:(NSString*) value;
- (CProtocolServerRespBuilder*) clearSubCmd;

- (BOOL) hasVersion;
- (NSString*) version;
- (CProtocolServerRespBuilder*) setVersion:(NSString*) value;
- (CProtocolServerRespBuilder*) clearVersion;

- (BOOL) hasUid;
- (UInt64) uid;
- (CProtocolServerRespBuilder*) setUid:(UInt64) value;
- (CProtocolServerRespBuilder*) clearUid;

- (BOOL) hasSeq;
- (UInt32) seq;
- (CProtocolServerRespBuilder*) setSeq:(UInt32) value;
- (CProtocolServerRespBuilder*) clearSeq;

- (BOOL) hasType;
- (EConstPackTypes) type;
- (CProtocolServerRespBuilder*) setType:(EConstPackTypes) value;
- (CProtocolServerRespBuilder*) clearType;

- (BOOL) hasCode;
- (UInt32) code;
- (CProtocolServerRespBuilder*) setCode:(UInt32) value;
- (CProtocolServerRespBuilder*) clearCode;

- (BOOL) hasProtocolContent;
- (NSData*) protocolContent;
- (CProtocolServerRespBuilder*) setProtocolContent:(NSData*) value;
- (CProtocolServerRespBuilder*) clearProtocolContent;

- (BOOL) hasVcodeSession;
- (NSData*) vcodeSession;
- (CProtocolServerRespBuilder*) setVcodeSession:(NSData*) value;
- (CProtocolServerRespBuilder*) clearVcodeSession;

- (BOOL) hasVcodePicdata;
- (NSString*) vcodePicdata;
- (CProtocolServerRespBuilder*) setVcodePicdata:(NSString*) value;
- (CProtocolServerRespBuilder*) clearVcodePicdata;
@end


// @@protoc_insertion_point(global_scope)
