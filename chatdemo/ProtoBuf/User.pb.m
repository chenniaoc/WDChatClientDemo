// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "User.pb.h"
// @@protoc_insertion_point(imports)

@implementation UserRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UserRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL EConstPBUserLoginRespCodesIsValidValue(EConstPBUserLoginRespCodes value) {
  switch (value) {
    case EConstPBUserLoginRespCodesPbUserLoginRespPasswdError:
    case EConstPBUserLoginRespCodesPbUserLoginRespUserNotExist:
    case EConstPBUserLoginRespCodesPbUserLoginRespSessionError:
    case EConstPBUserLoginRespCodesPbUserLoginRespCookieError:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromEConstPBUserLoginRespCodes(EConstPBUserLoginRespCodes value) {
  switch (value) {
    case EConstPBUserLoginRespCodesPbUserLoginRespPasswdError:
      return @"EConstPBUserLoginRespCodesPbUserLoginRespPasswdError";
    case EConstPBUserLoginRespCodesPbUserLoginRespUserNotExist:
      return @"EConstPBUserLoginRespCodesPbUserLoginRespUserNotExist";
    case EConstPBUserLoginRespCodesPbUserLoginRespSessionError:
      return @"EConstPBUserLoginRespCodesPbUserLoginRespSessionError";
    case EConstPBUserLoginRespCodesPbUserLoginRespCookieError:
      return @"EConstPBUserLoginRespCodesPbUserLoginRespCookieError";
    default:
      return nil;
  }
}

BOOL EConstPBUserInfoFieldsIsValidValue(EConstPBUserInfoFields value) {
  switch (value) {
    case EConstPBUserInfoFieldsPbUserInfoFieldStatuType:
    case EConstPBUserInfoFieldsPbUserInfoFieldNickName:
    case EConstPBUserInfoFieldsPbUserInfoFieldLoginPolicy:
    case EConstPBUserInfoFieldsPbUserInfoFieldSid:
    case EConstPBUserInfoFieldsPbUserInfoFieldCreateTime:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromEConstPBUserInfoFields(EConstPBUserInfoFields value) {
  switch (value) {
    case EConstPBUserInfoFieldsPbUserInfoFieldStatuType:
      return @"EConstPBUserInfoFieldsPbUserInfoFieldStatuType";
    case EConstPBUserInfoFieldsPbUserInfoFieldNickName:
      return @"EConstPBUserInfoFieldsPbUserInfoFieldNickName";
    case EConstPBUserInfoFieldsPbUserInfoFieldLoginPolicy:
      return @"EConstPBUserInfoFieldsPbUserInfoFieldLoginPolicy";
    case EConstPBUserInfoFieldsPbUserInfoFieldSid:
      return @"EConstPBUserInfoFieldsPbUserInfoFieldSid";
    case EConstPBUserInfoFieldsPbUserInfoFieldCreateTime:
      return @"EConstPBUserInfoFieldsPbUserInfoFieldCreateTime";
    default:
      return nil;
  }
}

BOOL EConstLoginPolicysIsValidValue(EConstLoginPolicys value) {
  switch (value) {
    case EConstLoginPolicysMsgPolicyEnableMultilogin:
    case EConstLoginPolicysMsgPolicyDisableMultilogin:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromEConstLoginPolicys(EConstLoginPolicys value) {
  switch (value) {
    case EConstLoginPolicysMsgPolicyEnableMultilogin:
      return @"EConstLoginPolicysMsgPolicyEnableMultilogin";
    case EConstLoginPolicysMsgPolicyDisableMultilogin:
      return @"EConstLoginPolicysMsgPolicyDisableMultilogin";
    default:
      return nil;
  }
}

BOOL StatusTypesIsValidValue(StatusTypes value) {
  switch (value) {
    case StatusTypesStatusOnline:
    case StatusTypesStatusOffline:
    case StatusTypesStatusBackgroundOnline:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromStatusTypes(StatusTypes value) {
  switch (value) {
    case StatusTypesStatusOnline:
      return @"StatusTypesStatusOnline";
    case StatusTypesStatusOffline:
      return @"StatusTypesStatusOffline";
    case StatusTypesStatusBackgroundOnline:
      return @"StatusTypesStatusBackgroundOnline";
    default:
      return nil;
  }
}

BOOL KickoutReasonIsValidValue(KickoutReason value) {
  switch (value) {
    case KickoutReasonReasonRelogin:
    case KickoutReasonReasonOther:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromKickoutReason(KickoutReason value) {
  switch (value) {
    case KickoutReasonReasonRelogin:
      return @"KickoutReasonReasonRelogin";
    case KickoutReasonReasonOther:
      return @"KickoutReasonReasonOther";
    default:
      return nil;
  }
}

@interface CUserLoginReq ()
@property (strong) NSString* username;
@property (strong) NSString* passwd;
@property (strong) NSData* imToken;
@property (strong) NSString* sid;
@property (strong) NSString* uss;
@property (strong) NSString* clientVersion;
@property (strong) NSData* deviceToken;
@end

@implementation CUserLoginReq

- (BOOL) hasUsername {
  return !!hasUsername_;
}
- (void) setHasUsername:(BOOL) _value_ {
  hasUsername_ = !!_value_;
}
@synthesize username;
- (BOOL) hasPasswd {
  return !!hasPasswd_;
}
- (void) setHasPasswd:(BOOL) _value_ {
  hasPasswd_ = !!_value_;
}
@synthesize passwd;
- (BOOL) hasImToken {
  return !!hasImToken_;
}
- (void) setHasImToken:(BOOL) _value_ {
  hasImToken_ = !!_value_;
}
@synthesize imToken;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) _value_ {
  hasSid_ = !!_value_;
}
@synthesize sid;
- (BOOL) hasUss {
  return !!hasUss_;
}
- (void) setHasUss:(BOOL) _value_ {
  hasUss_ = !!_value_;
}
@synthesize uss;
- (BOOL) hasClientVersion {
  return !!hasClientVersion_;
}
- (void) setHasClientVersion:(BOOL) _value_ {
  hasClientVersion_ = !!_value_;
}
@synthesize clientVersion;
- (BOOL) hasDeviceToken {
  return !!hasDeviceToken_;
}
- (void) setHasDeviceToken:(BOOL) _value_ {
  hasDeviceToken_ = !!_value_;
}
@synthesize deviceToken;
- (instancetype) init {
  if ((self = [super init])) {
    self.username = @"";
    self.passwd = @"";
    self.imToken = [NSData data];
    self.sid = @"";
    self.uss = @"";
    self.clientVersion = @"";
    self.deviceToken = [NSData data];
  }
  return self;
}
static CUserLoginReq* defaultCUserLoginReqInstance = nil;
+ (void) initialize {
  if (self == [CUserLoginReq class]) {
    defaultCUserLoginReqInstance = [[CUserLoginReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserLoginReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserLoginReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUsername) {
    [output writeString:1 value:self.username];
  }
  if (self.hasPasswd) {
    [output writeString:2 value:self.passwd];
  }
  if (self.hasImToken) {
    [output writeData:3 value:self.imToken];
  }
  if (self.hasSid) {
    [output writeString:4 value:self.sid];
  }
  if (self.hasUss) {
    [output writeString:5 value:self.uss];
  }
  if (self.hasClientVersion) {
    [output writeString:6 value:self.clientVersion];
  }
  if (self.hasDeviceToken) {
    [output writeData:7 value:self.deviceToken];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUsername) {
    size_ += computeStringSize(1, self.username);
  }
  if (self.hasPasswd) {
    size_ += computeStringSize(2, self.passwd);
  }
  if (self.hasImToken) {
    size_ += computeDataSize(3, self.imToken);
  }
  if (self.hasSid) {
    size_ += computeStringSize(4, self.sid);
  }
  if (self.hasUss) {
    size_ += computeStringSize(5, self.uss);
  }
  if (self.hasClientVersion) {
    size_ += computeStringSize(6, self.clientVersion);
  }
  if (self.hasDeviceToken) {
    size_ += computeDataSize(7, self.deviceToken);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserLoginReq*) parseFromData:(NSData*) data {
  return (CUserLoginReq*)[[[CUserLoginReq builder] mergeFromData:data] build];
}
+ (CUserLoginReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserLoginReq*)[[[CUserLoginReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserLoginReq*) parseFromInputStream:(NSInputStream*) input {
  return (CUserLoginReq*)[[[CUserLoginReq builder] mergeFromInputStream:input] build];
}
+ (CUserLoginReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserLoginReq*)[[[CUserLoginReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserLoginReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserLoginReq*)[[[CUserLoginReq builder] mergeFromCodedInputStream:input] build];
}
+ (CUserLoginReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserLoginReq*)[[[CUserLoginReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserLoginReqBuilder*) builder {
  return [[CUserLoginReqBuilder alloc] init];
}
+ (CUserLoginReqBuilder*) builderWithPrototype:(CUserLoginReq*) prototype {
  return [[CUserLoginReq builder] mergeFrom:prototype];
}
- (CUserLoginReqBuilder*) builder {
  return [CUserLoginReq builder];
}
- (CUserLoginReqBuilder*) toBuilder {
  return [CUserLoginReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUsername) {
    [output appendFormat:@"%@%@: %@\n", indent, @"username", self.username];
  }
  if (self.hasPasswd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"passwd", self.passwd];
  }
  if (self.hasImToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imToken", self.imToken];
  }
  if (self.hasSid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sid", self.sid];
  }
  if (self.hasUss) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uss", self.uss];
  }
  if (self.hasClientVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientVersion", self.clientVersion];
  }
  if (self.hasDeviceToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceToken", self.deviceToken];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserLoginReq class]]) {
    return NO;
  }
  CUserLoginReq *otherMessage = other;
  return
      self.hasUsername == otherMessage.hasUsername &&
      (!self.hasUsername || [self.username isEqual:otherMessage.username]) &&
      self.hasPasswd == otherMessage.hasPasswd &&
      (!self.hasPasswd || [self.passwd isEqual:otherMessage.passwd]) &&
      self.hasImToken == otherMessage.hasImToken &&
      (!self.hasImToken || [self.imToken isEqual:otherMessage.imToken]) &&
      self.hasSid == otherMessage.hasSid &&
      (!self.hasSid || [self.sid isEqual:otherMessage.sid]) &&
      self.hasUss == otherMessage.hasUss &&
      (!self.hasUss || [self.uss isEqual:otherMessage.uss]) &&
      self.hasClientVersion == otherMessage.hasClientVersion &&
      (!self.hasClientVersion || [self.clientVersion isEqual:otherMessage.clientVersion]) &&
      self.hasDeviceToken == otherMessage.hasDeviceToken &&
      (!self.hasDeviceToken || [self.deviceToken isEqual:otherMessage.deviceToken]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUsername) {
    hashCode = hashCode * 31 + [self.username hash];
  }
  if (self.hasPasswd) {
    hashCode = hashCode * 31 + [self.passwd hash];
  }
  if (self.hasImToken) {
    hashCode = hashCode * 31 + [self.imToken hash];
  }
  if (self.hasSid) {
    hashCode = hashCode * 31 + [self.sid hash];
  }
  if (self.hasUss) {
    hashCode = hashCode * 31 + [self.uss hash];
  }
  if (self.hasClientVersion) {
    hashCode = hashCode * 31 + [self.clientVersion hash];
  }
  if (self.hasDeviceToken) {
    hashCode = hashCode * 31 + [self.deviceToken hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserLoginReqBuilder()
@property (strong) CUserLoginReq* resultCuserLoginReq;
@end

@implementation CUserLoginReqBuilder
@synthesize resultCuserLoginReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserLoginReq = [[CUserLoginReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserLoginReq;
}
- (CUserLoginReqBuilder*) clear {
  self.resultCuserLoginReq = [[CUserLoginReq alloc] init];
  return self;
}
- (CUserLoginReqBuilder*) clone {
  return [CUserLoginReq builderWithPrototype:resultCuserLoginReq];
}
- (CUserLoginReq*) defaultInstance {
  return [CUserLoginReq defaultInstance];
}
- (CUserLoginReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserLoginReq*) buildPartial {
  CUserLoginReq* returnMe = resultCuserLoginReq;
  self.resultCuserLoginReq = nil;
  return returnMe;
}
- (CUserLoginReqBuilder*) mergeFrom:(CUserLoginReq*) other {
  if (other == [CUserLoginReq defaultInstance]) {
    return self;
  }
  if (other.hasUsername) {
    [self setUsername:other.username];
  }
  if (other.hasPasswd) {
    [self setPasswd:other.passwd];
  }
  if (other.hasImToken) {
    [self setImToken:other.imToken];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasUss) {
    [self setUss:other.uss];
  }
  if (other.hasClientVersion) {
    [self setClientVersion:other.clientVersion];
  }
  if (other.hasDeviceToken) {
    [self setDeviceToken:other.deviceToken];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserLoginReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserLoginReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUsername:[input readString]];
        break;
      }
      case 18: {
        [self setPasswd:[input readString]];
        break;
      }
      case 26: {
        [self setImToken:[input readData]];
        break;
      }
      case 34: {
        [self setSid:[input readString]];
        break;
      }
      case 42: {
        [self setUss:[input readString]];
        break;
      }
      case 50: {
        [self setClientVersion:[input readString]];
        break;
      }
      case 58: {
        [self setDeviceToken:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasUsername {
  return resultCuserLoginReq.hasUsername;
}
- (NSString*) username {
  return resultCuserLoginReq.username;
}
- (CUserLoginReqBuilder*) setUsername:(NSString*) value {
  resultCuserLoginReq.hasUsername = YES;
  resultCuserLoginReq.username = value;
  return self;
}
- (CUserLoginReqBuilder*) clearUsername {
  resultCuserLoginReq.hasUsername = NO;
  resultCuserLoginReq.username = @"";
  return self;
}
- (BOOL) hasPasswd {
  return resultCuserLoginReq.hasPasswd;
}
- (NSString*) passwd {
  return resultCuserLoginReq.passwd;
}
- (CUserLoginReqBuilder*) setPasswd:(NSString*) value {
  resultCuserLoginReq.hasPasswd = YES;
  resultCuserLoginReq.passwd = value;
  return self;
}
- (CUserLoginReqBuilder*) clearPasswd {
  resultCuserLoginReq.hasPasswd = NO;
  resultCuserLoginReq.passwd = @"";
  return self;
}
- (BOOL) hasImToken {
  return resultCuserLoginReq.hasImToken;
}
- (NSData*) imToken {
  return resultCuserLoginReq.imToken;
}
- (CUserLoginReqBuilder*) setImToken:(NSData*) value {
  resultCuserLoginReq.hasImToken = YES;
  resultCuserLoginReq.imToken = value;
  return self;
}
- (CUserLoginReqBuilder*) clearImToken {
  resultCuserLoginReq.hasImToken = NO;
  resultCuserLoginReq.imToken = [NSData data];
  return self;
}
- (BOOL) hasSid {
  return resultCuserLoginReq.hasSid;
}
- (NSString*) sid {
  return resultCuserLoginReq.sid;
}
- (CUserLoginReqBuilder*) setSid:(NSString*) value {
  resultCuserLoginReq.hasSid = YES;
  resultCuserLoginReq.sid = value;
  return self;
}
- (CUserLoginReqBuilder*) clearSid {
  resultCuserLoginReq.hasSid = NO;
  resultCuserLoginReq.sid = @"";
  return self;
}
- (BOOL) hasUss {
  return resultCuserLoginReq.hasUss;
}
- (NSString*) uss {
  return resultCuserLoginReq.uss;
}
- (CUserLoginReqBuilder*) setUss:(NSString*) value {
  resultCuserLoginReq.hasUss = YES;
  resultCuserLoginReq.uss = value;
  return self;
}
- (CUserLoginReqBuilder*) clearUss {
  resultCuserLoginReq.hasUss = NO;
  resultCuserLoginReq.uss = @"";
  return self;
}
- (BOOL) hasClientVersion {
  return resultCuserLoginReq.hasClientVersion;
}
- (NSString*) clientVersion {
  return resultCuserLoginReq.clientVersion;
}
- (CUserLoginReqBuilder*) setClientVersion:(NSString*) value {
  resultCuserLoginReq.hasClientVersion = YES;
  resultCuserLoginReq.clientVersion = value;
  return self;
}
- (CUserLoginReqBuilder*) clearClientVersion {
  resultCuserLoginReq.hasClientVersion = NO;
  resultCuserLoginReq.clientVersion = @"";
  return self;
}
- (BOOL) hasDeviceToken {
  return resultCuserLoginReq.hasDeviceToken;
}
- (NSData*) deviceToken {
  return resultCuserLoginReq.deviceToken;
}
- (CUserLoginReqBuilder*) setDeviceToken:(NSData*) value {
  resultCuserLoginReq.hasDeviceToken = YES;
  resultCuserLoginReq.deviceToken = value;
  return self;
}
- (CUserLoginReqBuilder*) clearDeviceToken {
  resultCuserLoginReq.hasDeviceToken = NO;
  resultCuserLoginReq.deviceToken = [NSData data];
  return self;
}
@end

@interface CUserLoginResp ()
@property UInt64 uid;
@property (strong) NSString* username;
@property (strong) NSString* imToken;
@end

@implementation CUserLoginResp

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasUsername {
  return !!hasUsername_;
}
- (void) setHasUsername:(BOOL) _value_ {
  hasUsername_ = !!_value_;
}
@synthesize username;
- (BOOL) hasImToken {
  return !!hasImToken_;
}
- (void) setHasImToken:(BOOL) _value_ {
  hasImToken_ = !!_value_;
}
@synthesize imToken;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
    self.username = @"";
    self.imToken = @"";
  }
  return self;
}
static CUserLoginResp* defaultCUserLoginRespInstance = nil;
+ (void) initialize {
  if (self == [CUserLoginResp class]) {
    defaultCUserLoginRespInstance = [[CUserLoginResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserLoginRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserLoginRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  if (self.hasUsername) {
    [output writeString:2 value:self.username];
  }
  if (self.hasImToken) {
    [output writeString:3 value:self.imToken];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  if (self.hasUsername) {
    size_ += computeStringSize(2, self.username);
  }
  if (self.hasImToken) {
    size_ += computeStringSize(3, self.imToken);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserLoginResp*) parseFromData:(NSData*) data {
  return (CUserLoginResp*)[[[CUserLoginResp builder] mergeFromData:data] build];
}
+ (CUserLoginResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserLoginResp*)[[[CUserLoginResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserLoginResp*) parseFromInputStream:(NSInputStream*) input {
  return (CUserLoginResp*)[[[CUserLoginResp builder] mergeFromInputStream:input] build];
}
+ (CUserLoginResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserLoginResp*)[[[CUserLoginResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserLoginResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserLoginResp*)[[[CUserLoginResp builder] mergeFromCodedInputStream:input] build];
}
+ (CUserLoginResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserLoginResp*)[[[CUserLoginResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserLoginRespBuilder*) builder {
  return [[CUserLoginRespBuilder alloc] init];
}
+ (CUserLoginRespBuilder*) builderWithPrototype:(CUserLoginResp*) prototype {
  return [[CUserLoginResp builder] mergeFrom:prototype];
}
- (CUserLoginRespBuilder*) builder {
  return [CUserLoginResp builder];
}
- (CUserLoginRespBuilder*) toBuilder {
  return [CUserLoginResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  if (self.hasUsername) {
    [output appendFormat:@"%@%@: %@\n", indent, @"username", self.username];
  }
  if (self.hasImToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imToken", self.imToken];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserLoginResp class]]) {
    return NO;
  }
  CUserLoginResp *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasUsername == otherMessage.hasUsername &&
      (!self.hasUsername || [self.username isEqual:otherMessage.username]) &&
      self.hasImToken == otherMessage.hasImToken &&
      (!self.hasImToken || [self.imToken isEqual:otherMessage.imToken]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  if (self.hasUsername) {
    hashCode = hashCode * 31 + [self.username hash];
  }
  if (self.hasImToken) {
    hashCode = hashCode * 31 + [self.imToken hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserLoginRespBuilder()
@property (strong) CUserLoginResp* resultCuserLoginResp;
@end

@implementation CUserLoginRespBuilder
@synthesize resultCuserLoginResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserLoginResp = [[CUserLoginResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserLoginResp;
}
- (CUserLoginRespBuilder*) clear {
  self.resultCuserLoginResp = [[CUserLoginResp alloc] init];
  return self;
}
- (CUserLoginRespBuilder*) clone {
  return [CUserLoginResp builderWithPrototype:resultCuserLoginResp];
}
- (CUserLoginResp*) defaultInstance {
  return [CUserLoginResp defaultInstance];
}
- (CUserLoginResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserLoginResp*) buildPartial {
  CUserLoginResp* returnMe = resultCuserLoginResp;
  self.resultCuserLoginResp = nil;
  return returnMe;
}
- (CUserLoginRespBuilder*) mergeFrom:(CUserLoginResp*) other {
  if (other == [CUserLoginResp defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasUsername) {
    [self setUsername:other.username];
  }
  if (other.hasImToken) {
    [self setImToken:other.imToken];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserLoginRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserLoginRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 18: {
        [self setUsername:[input readString]];
        break;
      }
      case 26: {
        [self setImToken:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultCuserLoginResp.hasUid;
}
- (UInt64) uid {
  return resultCuserLoginResp.uid;
}
- (CUserLoginRespBuilder*) setUid:(UInt64) value {
  resultCuserLoginResp.hasUid = YES;
  resultCuserLoginResp.uid = value;
  return self;
}
- (CUserLoginRespBuilder*) clearUid {
  resultCuserLoginResp.hasUid = NO;
  resultCuserLoginResp.uid = 0L;
  return self;
}
- (BOOL) hasUsername {
  return resultCuserLoginResp.hasUsername;
}
- (NSString*) username {
  return resultCuserLoginResp.username;
}
- (CUserLoginRespBuilder*) setUsername:(NSString*) value {
  resultCuserLoginResp.hasUsername = YES;
  resultCuserLoginResp.username = value;
  return self;
}
- (CUserLoginRespBuilder*) clearUsername {
  resultCuserLoginResp.hasUsername = NO;
  resultCuserLoginResp.username = @"";
  return self;
}
- (BOOL) hasImToken {
  return resultCuserLoginResp.hasImToken;
}
- (NSString*) imToken {
  return resultCuserLoginResp.imToken;
}
- (CUserLoginRespBuilder*) setImToken:(NSString*) value {
  resultCuserLoginResp.hasImToken = YES;
  resultCuserLoginResp.imToken = value;
  return self;
}
- (CUserLoginRespBuilder*) clearImToken {
  resultCuserLoginResp.hasImToken = NO;
  resultCuserLoginResp.imToken = @"";
  return self;
}
@end

@interface CUserLogoutBySidReq ()
@property (strong) NSString* sid;
@property (strong) NSString* uss;
@end

@implementation CUserLogoutBySidReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) _value_ {
  hasSid_ = !!_value_;
}
@synthesize sid;
- (BOOL) hasUss {
  return !!hasUss_;
}
- (void) setHasUss:(BOOL) _value_ {
  hasUss_ = !!_value_;
}
@synthesize uss;
- (instancetype) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.uss = @"";
  }
  return self;
}
static CUserLogoutBySidReq* defaultCUserLogoutBySidReqInstance = nil;
+ (void) initialize {
  if (self == [CUserLogoutBySidReq class]) {
    defaultCUserLogoutBySidReqInstance = [[CUserLogoutBySidReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserLogoutBySidReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserLogoutBySidReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasUss) {
    [output writeString:2 value:self.uss];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSid) {
    size_ += computeStringSize(1, self.sid);
  }
  if (self.hasUss) {
    size_ += computeStringSize(2, self.uss);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserLogoutBySidReq*) parseFromData:(NSData*) data {
  return (CUserLogoutBySidReq*)[[[CUserLogoutBySidReq builder] mergeFromData:data] build];
}
+ (CUserLogoutBySidReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserLogoutBySidReq*)[[[CUserLogoutBySidReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserLogoutBySidReq*) parseFromInputStream:(NSInputStream*) input {
  return (CUserLogoutBySidReq*)[[[CUserLogoutBySidReq builder] mergeFromInputStream:input] build];
}
+ (CUserLogoutBySidReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserLogoutBySidReq*)[[[CUserLogoutBySidReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserLogoutBySidReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserLogoutBySidReq*)[[[CUserLogoutBySidReq builder] mergeFromCodedInputStream:input] build];
}
+ (CUserLogoutBySidReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserLogoutBySidReq*)[[[CUserLogoutBySidReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserLogoutBySidReqBuilder*) builder {
  return [[CUserLogoutBySidReqBuilder alloc] init];
}
+ (CUserLogoutBySidReqBuilder*) builderWithPrototype:(CUserLogoutBySidReq*) prototype {
  return [[CUserLogoutBySidReq builder] mergeFrom:prototype];
}
- (CUserLogoutBySidReqBuilder*) builder {
  return [CUserLogoutBySidReq builder];
}
- (CUserLogoutBySidReqBuilder*) toBuilder {
  return [CUserLogoutBySidReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sid", self.sid];
  }
  if (self.hasUss) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uss", self.uss];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserLogoutBySidReq class]]) {
    return NO;
  }
  CUserLogoutBySidReq *otherMessage = other;
  return
      self.hasSid == otherMessage.hasSid &&
      (!self.hasSid || [self.sid isEqual:otherMessage.sid]) &&
      self.hasUss == otherMessage.hasUss &&
      (!self.hasUss || [self.uss isEqual:otherMessage.uss]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSid) {
    hashCode = hashCode * 31 + [self.sid hash];
  }
  if (self.hasUss) {
    hashCode = hashCode * 31 + [self.uss hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserLogoutBySidReqBuilder()
@property (strong) CUserLogoutBySidReq* resultCuserLogoutBySidReq;
@end

@implementation CUserLogoutBySidReqBuilder
@synthesize resultCuserLogoutBySidReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserLogoutBySidReq = [[CUserLogoutBySidReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserLogoutBySidReq;
}
- (CUserLogoutBySidReqBuilder*) clear {
  self.resultCuserLogoutBySidReq = [[CUserLogoutBySidReq alloc] init];
  return self;
}
- (CUserLogoutBySidReqBuilder*) clone {
  return [CUserLogoutBySidReq builderWithPrototype:resultCuserLogoutBySidReq];
}
- (CUserLogoutBySidReq*) defaultInstance {
  return [CUserLogoutBySidReq defaultInstance];
}
- (CUserLogoutBySidReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserLogoutBySidReq*) buildPartial {
  CUserLogoutBySidReq* returnMe = resultCuserLogoutBySidReq;
  self.resultCuserLogoutBySidReq = nil;
  return returnMe;
}
- (CUserLogoutBySidReqBuilder*) mergeFrom:(CUserLogoutBySidReq*) other {
  if (other == [CUserLogoutBySidReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasUss) {
    [self setUss:other.uss];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserLogoutBySidReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserLogoutBySidReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 18: {
        [self setUss:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return resultCuserLogoutBySidReq.hasSid;
}
- (NSString*) sid {
  return resultCuserLogoutBySidReq.sid;
}
- (CUserLogoutBySidReqBuilder*) setSid:(NSString*) value {
  resultCuserLogoutBySidReq.hasSid = YES;
  resultCuserLogoutBySidReq.sid = value;
  return self;
}
- (CUserLogoutBySidReqBuilder*) clearSid {
  resultCuserLogoutBySidReq.hasSid = NO;
  resultCuserLogoutBySidReq.sid = @"";
  return self;
}
- (BOOL) hasUss {
  return resultCuserLogoutBySidReq.hasUss;
}
- (NSString*) uss {
  return resultCuserLogoutBySidReq.uss;
}
- (CUserLogoutBySidReqBuilder*) setUss:(NSString*) value {
  resultCuserLogoutBySidReq.hasUss = YES;
  resultCuserLogoutBySidReq.uss = value;
  return self;
}
- (CUserLogoutBySidReqBuilder*) clearUss {
  resultCuserLogoutBySidReq.hasUss = NO;
  resultCuserLogoutBySidReq.uss = @"";
  return self;
}
@end

@interface CUserLogoutBySidResp ()
@end

@implementation CUserLogoutBySidResp

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CUserLogoutBySidResp* defaultCUserLogoutBySidRespInstance = nil;
+ (void) initialize {
  if (self == [CUserLogoutBySidResp class]) {
    defaultCUserLogoutBySidRespInstance = [[CUserLogoutBySidResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserLogoutBySidRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserLogoutBySidRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserLogoutBySidResp*) parseFromData:(NSData*) data {
  return (CUserLogoutBySidResp*)[[[CUserLogoutBySidResp builder] mergeFromData:data] build];
}
+ (CUserLogoutBySidResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserLogoutBySidResp*)[[[CUserLogoutBySidResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserLogoutBySidResp*) parseFromInputStream:(NSInputStream*) input {
  return (CUserLogoutBySidResp*)[[[CUserLogoutBySidResp builder] mergeFromInputStream:input] build];
}
+ (CUserLogoutBySidResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserLogoutBySidResp*)[[[CUserLogoutBySidResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserLogoutBySidResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserLogoutBySidResp*)[[[CUserLogoutBySidResp builder] mergeFromCodedInputStream:input] build];
}
+ (CUserLogoutBySidResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserLogoutBySidResp*)[[[CUserLogoutBySidResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserLogoutBySidRespBuilder*) builder {
  return [[CUserLogoutBySidRespBuilder alloc] init];
}
+ (CUserLogoutBySidRespBuilder*) builderWithPrototype:(CUserLogoutBySidResp*) prototype {
  return [[CUserLogoutBySidResp builder] mergeFrom:prototype];
}
- (CUserLogoutBySidRespBuilder*) builder {
  return [CUserLogoutBySidResp builder];
}
- (CUserLogoutBySidRespBuilder*) toBuilder {
  return [CUserLogoutBySidResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserLogoutBySidResp class]]) {
    return NO;
  }
  CUserLogoutBySidResp *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserLogoutBySidRespBuilder()
@property (strong) CUserLogoutBySidResp* resultCuserLogoutBySidResp;
@end

@implementation CUserLogoutBySidRespBuilder
@synthesize resultCuserLogoutBySidResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserLogoutBySidResp = [[CUserLogoutBySidResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserLogoutBySidResp;
}
- (CUserLogoutBySidRespBuilder*) clear {
  self.resultCuserLogoutBySidResp = [[CUserLogoutBySidResp alloc] init];
  return self;
}
- (CUserLogoutBySidRespBuilder*) clone {
  return [CUserLogoutBySidResp builderWithPrototype:resultCuserLogoutBySidResp];
}
- (CUserLogoutBySidResp*) defaultInstance {
  return [CUserLogoutBySidResp defaultInstance];
}
- (CUserLogoutBySidResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserLogoutBySidResp*) buildPartial {
  CUserLogoutBySidResp* returnMe = resultCuserLogoutBySidResp;
  self.resultCuserLogoutBySidResp = nil;
  return returnMe;
}
- (CUserLogoutBySidRespBuilder*) mergeFrom:(CUserLogoutBySidResp*) other {
  if (other == [CUserLogoutBySidResp defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserLogoutBySidRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserLogoutBySidRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CUserQueryReq ()
@property (strong) PBAppendableArray * uidsArray;
@property (strong) PBAppendableArray * fieldsArray;
@end

@implementation CUserQueryReq

@synthesize uidsArray;
@dynamic uids;
@synthesize fieldsArray;
@dynamic fields;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CUserQueryReq* defaultCUserQueryReqInstance = nil;
+ (void) initialize {
  if (self == [CUserQueryReq class]) {
    defaultCUserQueryReqInstance = [[CUserQueryReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserQueryReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserQueryReqInstance;
}
- (PBArray *)uids {
  return uidsArray;
}
- (UInt64)uidsAtIndex:(NSUInteger)index {
  return [uidsArray uint64AtIndex:index];
}
- (PBArray *)fields {
  return fieldsArray;
}
- (UInt32)fieldsAtIndex:(NSUInteger)index {
  return [fieldsArray uint32AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger uidsArrayCount = self.uidsArray.count;
  if (uidsArrayCount > 0) {
    const UInt64 *values = (const UInt64 *)self.uidsArray.data;
    for (NSUInteger i = 0; i < uidsArrayCount; ++i) {
      [output writeUInt64:1 value:values[i]];
    }
  }
  const NSUInteger fieldsArrayCount = self.fieldsArray.count;
  if (fieldsArrayCount > 0) {
    const UInt32 *values = (const UInt32 *)self.fieldsArray.data;
    for (NSUInteger i = 0; i < fieldsArrayCount; ++i) {
      [output writeUInt32:2 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.uidsArray.count;
    const UInt64 *values = (const UInt64 *)self.uidsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeUInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.fieldsArray.count;
    const UInt32 *values = (const UInt32 *)self.fieldsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeUInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserQueryReq*) parseFromData:(NSData*) data {
  return (CUserQueryReq*)[[[CUserQueryReq builder] mergeFromData:data] build];
}
+ (CUserQueryReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserQueryReq*)[[[CUserQueryReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserQueryReq*) parseFromInputStream:(NSInputStream*) input {
  return (CUserQueryReq*)[[[CUserQueryReq builder] mergeFromInputStream:input] build];
}
+ (CUserQueryReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserQueryReq*)[[[CUserQueryReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserQueryReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserQueryReq*)[[[CUserQueryReq builder] mergeFromCodedInputStream:input] build];
}
+ (CUserQueryReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserQueryReq*)[[[CUserQueryReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserQueryReqBuilder*) builder {
  return [[CUserQueryReqBuilder alloc] init];
}
+ (CUserQueryReqBuilder*) builderWithPrototype:(CUserQueryReq*) prototype {
  return [[CUserQueryReq builder] mergeFrom:prototype];
}
- (CUserQueryReqBuilder*) builder {
  return [CUserQueryReq builder];
}
- (CUserQueryReqBuilder*) toBuilder {
  return [CUserQueryReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.uidsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uids", obj];
  }];
  [self.fieldsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fields", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserQueryReq class]]) {
    return NO;
  }
  CUserQueryReq *otherMessage = other;
  return
      [self.uidsArray isEqualToArray:otherMessage.uidsArray] &&
      [self.fieldsArray isEqualToArray:otherMessage.fieldsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.uidsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.fieldsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserQueryReqBuilder()
@property (strong) CUserQueryReq* resultCuserQueryReq;
@end

@implementation CUserQueryReqBuilder
@synthesize resultCuserQueryReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserQueryReq = [[CUserQueryReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserQueryReq;
}
- (CUserQueryReqBuilder*) clear {
  self.resultCuserQueryReq = [[CUserQueryReq alloc] init];
  return self;
}
- (CUserQueryReqBuilder*) clone {
  return [CUserQueryReq builderWithPrototype:resultCuserQueryReq];
}
- (CUserQueryReq*) defaultInstance {
  return [CUserQueryReq defaultInstance];
}
- (CUserQueryReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserQueryReq*) buildPartial {
  CUserQueryReq* returnMe = resultCuserQueryReq;
  self.resultCuserQueryReq = nil;
  return returnMe;
}
- (CUserQueryReqBuilder*) mergeFrom:(CUserQueryReq*) other {
  if (other == [CUserQueryReq defaultInstance]) {
    return self;
  }
  if (other.uidsArray.count > 0) {
    if (resultCuserQueryReq.uidsArray == nil) {
      resultCuserQueryReq.uidsArray = [other.uidsArray copy];
    } else {
      [resultCuserQueryReq.uidsArray appendArray:other.uidsArray];
    }
  }
  if (other.fieldsArray.count > 0) {
    if (resultCuserQueryReq.fieldsArray == nil) {
      resultCuserQueryReq.fieldsArray = [other.fieldsArray copy];
    } else {
      [resultCuserQueryReq.fieldsArray appendArray:other.fieldsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserQueryReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserQueryReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addUids:[input readUInt64]];
        break;
      }
      case 16: {
        [self addFields:[input readUInt32]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)uids {
  return resultCuserQueryReq.uidsArray;
}
- (UInt64)uidsAtIndex:(NSUInteger)index {
  return [resultCuserQueryReq uidsAtIndex:index];
}
- (CUserQueryReqBuilder *)addUids:(UInt64)value {
  if (resultCuserQueryReq.uidsArray == nil) {
    resultCuserQueryReq.uidsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
  }
  [resultCuserQueryReq.uidsArray addUint64:value];
  return self;
}
- (CUserQueryReqBuilder *)setUidsArray:(NSArray *)array {
  resultCuserQueryReq.uidsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CUserQueryReqBuilder *)setUidsValues:(const UInt64 *)values count:(NSUInteger)count {
  resultCuserQueryReq.uidsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CUserQueryReqBuilder *)clearUids {
  resultCuserQueryReq.uidsArray = nil;
  return self;
}
- (PBAppendableArray *)fields {
  return resultCuserQueryReq.fieldsArray;
}
- (UInt32)fieldsAtIndex:(NSUInteger)index {
  return [resultCuserQueryReq fieldsAtIndex:index];
}
- (CUserQueryReqBuilder *)addFields:(UInt32)value {
  if (resultCuserQueryReq.fieldsArray == nil) {
    resultCuserQueryReq.fieldsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
  }
  [resultCuserQueryReq.fieldsArray addUint32:value];
  return self;
}
- (CUserQueryReqBuilder *)setFieldsArray:(NSArray *)array {
  resultCuserQueryReq.fieldsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt32];
  return self;
}
- (CUserQueryReqBuilder *)setFieldsValues:(const UInt32 *)values count:(NSUInteger)count {
  resultCuserQueryReq.fieldsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt32];
  return self;
}
- (CUserQueryReqBuilder *)clearFields {
  resultCuserQueryReq.fieldsArray = nil;
  return self;
}
@end

@interface CFieldInfo ()
@property UInt32 field;
@property (strong) NSString* value;
@end

@implementation CFieldInfo

- (BOOL) hasField {
  return !!hasField_;
}
- (void) setHasField:(BOOL) _value_ {
  hasField_ = !!_value_;
}
@synthesize field;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) _value_ {
  hasValue_ = !!_value_;
}
@synthesize value;
- (instancetype) init {
  if ((self = [super init])) {
    self.field = 0;
    self.value = @"";
  }
  return self;
}
static CFieldInfo* defaultCFieldInfoInstance = nil;
+ (void) initialize {
  if (self == [CFieldInfo class]) {
    defaultCFieldInfoInstance = [[CFieldInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCFieldInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultCFieldInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasField) {
    [output writeUInt32:1 value:self.field];
  }
  if (self.hasValue) {
    [output writeString:2 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasField) {
    size_ += computeUInt32Size(1, self.field);
  }
  if (self.hasValue) {
    size_ += computeStringSize(2, self.value);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CFieldInfo*) parseFromData:(NSData*) data {
  return (CFieldInfo*)[[[CFieldInfo builder] mergeFromData:data] build];
}
+ (CFieldInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CFieldInfo*)[[[CFieldInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CFieldInfo*) parseFromInputStream:(NSInputStream*) input {
  return (CFieldInfo*)[[[CFieldInfo builder] mergeFromInputStream:input] build];
}
+ (CFieldInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CFieldInfo*)[[[CFieldInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CFieldInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CFieldInfo*)[[[CFieldInfo builder] mergeFromCodedInputStream:input] build];
}
+ (CFieldInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CFieldInfo*)[[[CFieldInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CFieldInfoBuilder*) builder {
  return [[CFieldInfoBuilder alloc] init];
}
+ (CFieldInfoBuilder*) builderWithPrototype:(CFieldInfo*) prototype {
  return [[CFieldInfo builder] mergeFrom:prototype];
}
- (CFieldInfoBuilder*) builder {
  return [CFieldInfo builder];
}
- (CFieldInfoBuilder*) toBuilder {
  return [CFieldInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasField) {
    [output appendFormat:@"%@%@: %@\n", indent, @"field", [NSNumber numberWithInteger:self.field]];
  }
  if (self.hasValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"value", self.value];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CFieldInfo class]]) {
    return NO;
  }
  CFieldInfo *otherMessage = other;
  return
      self.hasField == otherMessage.hasField &&
      (!self.hasField || self.field == otherMessage.field) &&
      self.hasValue == otherMessage.hasValue &&
      (!self.hasValue || [self.value isEqual:otherMessage.value]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasField) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.field] hash];
  }
  if (self.hasValue) {
    hashCode = hashCode * 31 + [self.value hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CFieldInfoBuilder()
@property (strong) CFieldInfo* resultCfieldInfo;
@end

@implementation CFieldInfoBuilder
@synthesize resultCfieldInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCfieldInfo = [[CFieldInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCfieldInfo;
}
- (CFieldInfoBuilder*) clear {
  self.resultCfieldInfo = [[CFieldInfo alloc] init];
  return self;
}
- (CFieldInfoBuilder*) clone {
  return [CFieldInfo builderWithPrototype:resultCfieldInfo];
}
- (CFieldInfo*) defaultInstance {
  return [CFieldInfo defaultInstance];
}
- (CFieldInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CFieldInfo*) buildPartial {
  CFieldInfo* returnMe = resultCfieldInfo;
  self.resultCfieldInfo = nil;
  return returnMe;
}
- (CFieldInfoBuilder*) mergeFrom:(CFieldInfo*) other {
  if (other == [CFieldInfo defaultInstance]) {
    return self;
  }
  if (other.hasField) {
    [self setField:other.field];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CFieldInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CFieldInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setField:[input readUInt32]];
        break;
      }
      case 18: {
        [self setValue:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasField {
  return resultCfieldInfo.hasField;
}
- (UInt32) field {
  return resultCfieldInfo.field;
}
- (CFieldInfoBuilder*) setField:(UInt32) value {
  resultCfieldInfo.hasField = YES;
  resultCfieldInfo.field = value;
  return self;
}
- (CFieldInfoBuilder*) clearField {
  resultCfieldInfo.hasField = NO;
  resultCfieldInfo.field = 0;
  return self;
}
- (BOOL) hasValue {
  return resultCfieldInfo.hasValue;
}
- (NSString*) value {
  return resultCfieldInfo.value;
}
- (CFieldInfoBuilder*) setValue:(NSString*) value {
  resultCfieldInfo.hasValue = YES;
  resultCfieldInfo.value = value;
  return self;
}
- (CFieldInfoBuilder*) clearValue {
  resultCfieldInfo.hasValue = NO;
  resultCfieldInfo.value = @"";
  return self;
}
@end

@interface CUserInfo ()
@property UInt64 uid;
@property (strong) NSMutableArray * infosArray;
@end

@implementation CUserInfo

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
@synthesize infosArray;
@dynamic infos;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
  }
  return self;
}
static CUserInfo* defaultCUserInfoInstance = nil;
+ (void) initialize {
  if (self == [CUserInfo class]) {
    defaultCUserInfoInstance = [[CUserInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserInfoInstance;
}
- (NSArray *)infos {
  return infosArray;
}
- (CFieldInfo*)infosAtIndex:(NSUInteger)index {
  return [infosArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  [self.infosArray enumerateObjectsUsingBlock:^(CFieldInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  [self.infosArray enumerateObjectsUsingBlock:^(CFieldInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserInfo*) parseFromData:(NSData*) data {
  return (CUserInfo*)[[[CUserInfo builder] mergeFromData:data] build];
}
+ (CUserInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserInfo*)[[[CUserInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserInfo*) parseFromInputStream:(NSInputStream*) input {
  return (CUserInfo*)[[[CUserInfo builder] mergeFromInputStream:input] build];
}
+ (CUserInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserInfo*)[[[CUserInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserInfo*)[[[CUserInfo builder] mergeFromCodedInputStream:input] build];
}
+ (CUserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserInfo*)[[[CUserInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserInfoBuilder*) builder {
  return [[CUserInfoBuilder alloc] init];
}
+ (CUserInfoBuilder*) builderWithPrototype:(CUserInfo*) prototype {
  return [[CUserInfo builder] mergeFrom:prototype];
}
- (CUserInfoBuilder*) builder {
  return [CUserInfo builder];
}
- (CUserInfoBuilder*) toBuilder {
  return [CUserInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  [self.infosArray enumerateObjectsUsingBlock:^(CFieldInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"infos"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserInfo class]]) {
    return NO;
  }
  CUserInfo *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      [self.infosArray isEqualToArray:otherMessage.infosArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  [self.infosArray enumerateObjectsUsingBlock:^(CFieldInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserInfoBuilder()
@property (strong) CUserInfo* resultCuserInfo;
@end

@implementation CUserInfoBuilder
@synthesize resultCuserInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserInfo = [[CUserInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserInfo;
}
- (CUserInfoBuilder*) clear {
  self.resultCuserInfo = [[CUserInfo alloc] init];
  return self;
}
- (CUserInfoBuilder*) clone {
  return [CUserInfo builderWithPrototype:resultCuserInfo];
}
- (CUserInfo*) defaultInstance {
  return [CUserInfo defaultInstance];
}
- (CUserInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserInfo*) buildPartial {
  CUserInfo* returnMe = resultCuserInfo;
  self.resultCuserInfo = nil;
  return returnMe;
}
- (CUserInfoBuilder*) mergeFrom:(CUserInfo*) other {
  if (other == [CUserInfo defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.infosArray.count > 0) {
    if (resultCuserInfo.infosArray == nil) {
      resultCuserInfo.infosArray = [[NSMutableArray alloc] initWithArray:other.infosArray];
    } else {
      [resultCuserInfo.infosArray addObjectsFromArray:other.infosArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 18: {
        CFieldInfoBuilder* subBuilder = [CFieldInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInfos:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultCuserInfo.hasUid;
}
- (UInt64) uid {
  return resultCuserInfo.uid;
}
- (CUserInfoBuilder*) setUid:(UInt64) value {
  resultCuserInfo.hasUid = YES;
  resultCuserInfo.uid = value;
  return self;
}
- (CUserInfoBuilder*) clearUid {
  resultCuserInfo.hasUid = NO;
  resultCuserInfo.uid = 0L;
  return self;
}
- (NSMutableArray *)infos {
  return resultCuserInfo.infosArray;
}
- (CFieldInfo*)infosAtIndex:(NSUInteger)index {
  return [resultCuserInfo infosAtIndex:index];
}
- (CUserInfoBuilder *)addInfos:(CFieldInfo*)value {
  if (resultCuserInfo.infosArray == nil) {
    resultCuserInfo.infosArray = [[NSMutableArray alloc]init];
  }
  [resultCuserInfo.infosArray addObject:value];
  return self;
}
- (CUserInfoBuilder *)setInfosArray:(NSArray *)array {
  resultCuserInfo.infosArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (CUserInfoBuilder *)clearInfos {
  resultCuserInfo.infosArray = nil;
  return self;
}
@end

@interface CUserQueryResp ()
@property (strong) NSMutableArray * userInfosArray;
@end

@implementation CUserQueryResp

@synthesize userInfosArray;
@dynamic userInfos;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CUserQueryResp* defaultCUserQueryRespInstance = nil;
+ (void) initialize {
  if (self == [CUserQueryResp class]) {
    defaultCUserQueryRespInstance = [[CUserQueryResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserQueryRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserQueryRespInstance;
}
- (NSArray *)userInfos {
  return userInfosArray;
}
- (CUserInfo*)userInfosAtIndex:(NSUInteger)index {
  return [userInfosArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.userInfosArray enumerateObjectsUsingBlock:^(CUserInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.userInfosArray enumerateObjectsUsingBlock:^(CUserInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserQueryResp*) parseFromData:(NSData*) data {
  return (CUserQueryResp*)[[[CUserQueryResp builder] mergeFromData:data] build];
}
+ (CUserQueryResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserQueryResp*)[[[CUserQueryResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserQueryResp*) parseFromInputStream:(NSInputStream*) input {
  return (CUserQueryResp*)[[[CUserQueryResp builder] mergeFromInputStream:input] build];
}
+ (CUserQueryResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserQueryResp*)[[[CUserQueryResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserQueryResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserQueryResp*)[[[CUserQueryResp builder] mergeFromCodedInputStream:input] build];
}
+ (CUserQueryResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserQueryResp*)[[[CUserQueryResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserQueryRespBuilder*) builder {
  return [[CUserQueryRespBuilder alloc] init];
}
+ (CUserQueryRespBuilder*) builderWithPrototype:(CUserQueryResp*) prototype {
  return [[CUserQueryResp builder] mergeFrom:prototype];
}
- (CUserQueryRespBuilder*) builder {
  return [CUserQueryResp builder];
}
- (CUserQueryRespBuilder*) toBuilder {
  return [CUserQueryResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.userInfosArray enumerateObjectsUsingBlock:^(CUserInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userInfos"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserQueryResp class]]) {
    return NO;
  }
  CUserQueryResp *otherMessage = other;
  return
      [self.userInfosArray isEqualToArray:otherMessage.userInfosArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.userInfosArray enumerateObjectsUsingBlock:^(CUserInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserQueryRespBuilder()
@property (strong) CUserQueryResp* resultCuserQueryResp;
@end

@implementation CUserQueryRespBuilder
@synthesize resultCuserQueryResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserQueryResp = [[CUserQueryResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserQueryResp;
}
- (CUserQueryRespBuilder*) clear {
  self.resultCuserQueryResp = [[CUserQueryResp alloc] init];
  return self;
}
- (CUserQueryRespBuilder*) clone {
  return [CUserQueryResp builderWithPrototype:resultCuserQueryResp];
}
- (CUserQueryResp*) defaultInstance {
  return [CUserQueryResp defaultInstance];
}
- (CUserQueryResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserQueryResp*) buildPartial {
  CUserQueryResp* returnMe = resultCuserQueryResp;
  self.resultCuserQueryResp = nil;
  return returnMe;
}
- (CUserQueryRespBuilder*) mergeFrom:(CUserQueryResp*) other {
  if (other == [CUserQueryResp defaultInstance]) {
    return self;
  }
  if (other.userInfosArray.count > 0) {
    if (resultCuserQueryResp.userInfosArray == nil) {
      resultCuserQueryResp.userInfosArray = [[NSMutableArray alloc] initWithArray:other.userInfosArray];
    } else {
      [resultCuserQueryResp.userInfosArray addObjectsFromArray:other.userInfosArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserQueryRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserQueryRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 18: {
        CUserInfoBuilder* subBuilder = [CUserInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserInfos:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)userInfos {
  return resultCuserQueryResp.userInfosArray;
}
- (CUserInfo*)userInfosAtIndex:(NSUInteger)index {
  return [resultCuserQueryResp userInfosAtIndex:index];
}
- (CUserQueryRespBuilder *)addUserInfos:(CUserInfo*)value {
  if (resultCuserQueryResp.userInfosArray == nil) {
    resultCuserQueryResp.userInfosArray = [[NSMutableArray alloc]init];
  }
  [resultCuserQueryResp.userInfosArray addObject:value];
  return self;
}
- (CUserQueryRespBuilder *)setUserInfosArray:(NSArray *)array {
  resultCuserQueryResp.userInfosArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (CUserQueryRespBuilder *)clearUserInfos {
  resultCuserQueryResp.userInfosArray = nil;
  return self;
}
@end

@interface CUserExchangeUIDReq ()
@property (strong) NSString* sid;
@end

@implementation CUserExchangeUIDReq

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) _value_ {
  hasSid_ = !!_value_;
}
@synthesize sid;
- (instancetype) init {
  if ((self = [super init])) {
    self.sid = @"";
  }
  return self;
}
static CUserExchangeUIDReq* defaultCUserExchangeUIDReqInstance = nil;
+ (void) initialize {
  if (self == [CUserExchangeUIDReq class]) {
    defaultCUserExchangeUIDReqInstance = [[CUserExchangeUIDReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserExchangeUIDReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserExchangeUIDReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSid) {
    size_ += computeStringSize(1, self.sid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserExchangeUIDReq*) parseFromData:(NSData*) data {
  return (CUserExchangeUIDReq*)[[[CUserExchangeUIDReq builder] mergeFromData:data] build];
}
+ (CUserExchangeUIDReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserExchangeUIDReq*)[[[CUserExchangeUIDReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserExchangeUIDReq*) parseFromInputStream:(NSInputStream*) input {
  return (CUserExchangeUIDReq*)[[[CUserExchangeUIDReq builder] mergeFromInputStream:input] build];
}
+ (CUserExchangeUIDReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserExchangeUIDReq*)[[[CUserExchangeUIDReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserExchangeUIDReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserExchangeUIDReq*)[[[CUserExchangeUIDReq builder] mergeFromCodedInputStream:input] build];
}
+ (CUserExchangeUIDReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserExchangeUIDReq*)[[[CUserExchangeUIDReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserExchangeUIDReqBuilder*) builder {
  return [[CUserExchangeUIDReqBuilder alloc] init];
}
+ (CUserExchangeUIDReqBuilder*) builderWithPrototype:(CUserExchangeUIDReq*) prototype {
  return [[CUserExchangeUIDReq builder] mergeFrom:prototype];
}
- (CUserExchangeUIDReqBuilder*) builder {
  return [CUserExchangeUIDReq builder];
}
- (CUserExchangeUIDReqBuilder*) toBuilder {
  return [CUserExchangeUIDReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sid", self.sid];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserExchangeUIDReq class]]) {
    return NO;
  }
  CUserExchangeUIDReq *otherMessage = other;
  return
      self.hasSid == otherMessage.hasSid &&
      (!self.hasSid || [self.sid isEqual:otherMessage.sid]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSid) {
    hashCode = hashCode * 31 + [self.sid hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserExchangeUIDReqBuilder()
@property (strong) CUserExchangeUIDReq* resultCuserExchangeUidreq;
@end

@implementation CUserExchangeUIDReqBuilder
@synthesize resultCuserExchangeUidreq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserExchangeUidreq = [[CUserExchangeUIDReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserExchangeUidreq;
}
- (CUserExchangeUIDReqBuilder*) clear {
  self.resultCuserExchangeUidreq = [[CUserExchangeUIDReq alloc] init];
  return self;
}
- (CUserExchangeUIDReqBuilder*) clone {
  return [CUserExchangeUIDReq builderWithPrototype:resultCuserExchangeUidreq];
}
- (CUserExchangeUIDReq*) defaultInstance {
  return [CUserExchangeUIDReq defaultInstance];
}
- (CUserExchangeUIDReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserExchangeUIDReq*) buildPartial {
  CUserExchangeUIDReq* returnMe = resultCuserExchangeUidreq;
  self.resultCuserExchangeUidreq = nil;
  return returnMe;
}
- (CUserExchangeUIDReqBuilder*) mergeFrom:(CUserExchangeUIDReq*) other {
  if (other == [CUserExchangeUIDReq defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserExchangeUIDReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserExchangeUIDReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return resultCuserExchangeUidreq.hasSid;
}
- (NSString*) sid {
  return resultCuserExchangeUidreq.sid;
}
- (CUserExchangeUIDReqBuilder*) setSid:(NSString*) value {
  resultCuserExchangeUidreq.hasSid = YES;
  resultCuserExchangeUidreq.sid = value;
  return self;
}
- (CUserExchangeUIDReqBuilder*) clearSid {
  resultCuserExchangeUidreq.hasSid = NO;
  resultCuserExchangeUidreq.sid = @"";
  return self;
}
@end

@interface CUserExchangeUIDResp ()
@property UInt64 uid;
@end

@implementation CUserExchangeUIDResp

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
  }
  return self;
}
static CUserExchangeUIDResp* defaultCUserExchangeUIDRespInstance = nil;
+ (void) initialize {
  if (self == [CUserExchangeUIDResp class]) {
    defaultCUserExchangeUIDRespInstance = [[CUserExchangeUIDResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserExchangeUIDRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserExchangeUIDRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserExchangeUIDResp*) parseFromData:(NSData*) data {
  return (CUserExchangeUIDResp*)[[[CUserExchangeUIDResp builder] mergeFromData:data] build];
}
+ (CUserExchangeUIDResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserExchangeUIDResp*)[[[CUserExchangeUIDResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserExchangeUIDResp*) parseFromInputStream:(NSInputStream*) input {
  return (CUserExchangeUIDResp*)[[[CUserExchangeUIDResp builder] mergeFromInputStream:input] build];
}
+ (CUserExchangeUIDResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserExchangeUIDResp*)[[[CUserExchangeUIDResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserExchangeUIDResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserExchangeUIDResp*)[[[CUserExchangeUIDResp builder] mergeFromCodedInputStream:input] build];
}
+ (CUserExchangeUIDResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserExchangeUIDResp*)[[[CUserExchangeUIDResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserExchangeUIDRespBuilder*) builder {
  return [[CUserExchangeUIDRespBuilder alloc] init];
}
+ (CUserExchangeUIDRespBuilder*) builderWithPrototype:(CUserExchangeUIDResp*) prototype {
  return [[CUserExchangeUIDResp builder] mergeFrom:prototype];
}
- (CUserExchangeUIDRespBuilder*) builder {
  return [CUserExchangeUIDResp builder];
}
- (CUserExchangeUIDRespBuilder*) toBuilder {
  return [CUserExchangeUIDResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserExchangeUIDResp class]]) {
    return NO;
  }
  CUserExchangeUIDResp *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserExchangeUIDRespBuilder()
@property (strong) CUserExchangeUIDResp* resultCuserExchangeUidresp;
@end

@implementation CUserExchangeUIDRespBuilder
@synthesize resultCuserExchangeUidresp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserExchangeUidresp = [[CUserExchangeUIDResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserExchangeUidresp;
}
- (CUserExchangeUIDRespBuilder*) clear {
  self.resultCuserExchangeUidresp = [[CUserExchangeUIDResp alloc] init];
  return self;
}
- (CUserExchangeUIDRespBuilder*) clone {
  return [CUserExchangeUIDResp builderWithPrototype:resultCuserExchangeUidresp];
}
- (CUserExchangeUIDResp*) defaultInstance {
  return [CUserExchangeUIDResp defaultInstance];
}
- (CUserExchangeUIDResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserExchangeUIDResp*) buildPartial {
  CUserExchangeUIDResp* returnMe = resultCuserExchangeUidresp;
  self.resultCuserExchangeUidresp = nil;
  return returnMe;
}
- (CUserExchangeUIDRespBuilder*) mergeFrom:(CUserExchangeUIDResp*) other {
  if (other == [CUserExchangeUIDResp defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserExchangeUIDRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserExchangeUIDRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultCuserExchangeUidresp.hasUid;
}
- (UInt64) uid {
  return resultCuserExchangeUidresp.uid;
}
- (CUserExchangeUIDRespBuilder*) setUid:(UInt64) value {
  resultCuserExchangeUidresp.hasUid = YES;
  resultCuserExchangeUidresp.uid = value;
  return self;
}
- (CUserExchangeUIDRespBuilder*) clearUid {
  resultCuserExchangeUidresp.hasUid = NO;
  resultCuserExchangeUidresp.uid = 0L;
  return self;
}
@end

@interface CUserSetInfoReq ()
@property UInt64 uid;
@property (strong) NSMutableArray * infosArray;
@end

@implementation CUserSetInfoReq

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
@synthesize infosArray;
@dynamic infos;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
  }
  return self;
}
static CUserSetInfoReq* defaultCUserSetInfoReqInstance = nil;
+ (void) initialize {
  if (self == [CUserSetInfoReq class]) {
    defaultCUserSetInfoReqInstance = [[CUserSetInfoReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserSetInfoReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserSetInfoReqInstance;
}
- (NSArray *)infos {
  return infosArray;
}
- (CFieldInfo*)infosAtIndex:(NSUInteger)index {
  return [infosArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  [self.infosArray enumerateObjectsUsingBlock:^(CFieldInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  [self.infosArray enumerateObjectsUsingBlock:^(CFieldInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserSetInfoReq*) parseFromData:(NSData*) data {
  return (CUserSetInfoReq*)[[[CUserSetInfoReq builder] mergeFromData:data] build];
}
+ (CUserSetInfoReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserSetInfoReq*)[[[CUserSetInfoReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserSetInfoReq*) parseFromInputStream:(NSInputStream*) input {
  return (CUserSetInfoReq*)[[[CUserSetInfoReq builder] mergeFromInputStream:input] build];
}
+ (CUserSetInfoReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserSetInfoReq*)[[[CUserSetInfoReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserSetInfoReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserSetInfoReq*)[[[CUserSetInfoReq builder] mergeFromCodedInputStream:input] build];
}
+ (CUserSetInfoReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserSetInfoReq*)[[[CUserSetInfoReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserSetInfoReqBuilder*) builder {
  return [[CUserSetInfoReqBuilder alloc] init];
}
+ (CUserSetInfoReqBuilder*) builderWithPrototype:(CUserSetInfoReq*) prototype {
  return [[CUserSetInfoReq builder] mergeFrom:prototype];
}
- (CUserSetInfoReqBuilder*) builder {
  return [CUserSetInfoReq builder];
}
- (CUserSetInfoReqBuilder*) toBuilder {
  return [CUserSetInfoReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  [self.infosArray enumerateObjectsUsingBlock:^(CFieldInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"infos"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserSetInfoReq class]]) {
    return NO;
  }
  CUserSetInfoReq *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      [self.infosArray isEqualToArray:otherMessage.infosArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  [self.infosArray enumerateObjectsUsingBlock:^(CFieldInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserSetInfoReqBuilder()
@property (strong) CUserSetInfoReq* resultCuserSetInfoReq;
@end

@implementation CUserSetInfoReqBuilder
@synthesize resultCuserSetInfoReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserSetInfoReq = [[CUserSetInfoReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserSetInfoReq;
}
- (CUserSetInfoReqBuilder*) clear {
  self.resultCuserSetInfoReq = [[CUserSetInfoReq alloc] init];
  return self;
}
- (CUserSetInfoReqBuilder*) clone {
  return [CUserSetInfoReq builderWithPrototype:resultCuserSetInfoReq];
}
- (CUserSetInfoReq*) defaultInstance {
  return [CUserSetInfoReq defaultInstance];
}
- (CUserSetInfoReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserSetInfoReq*) buildPartial {
  CUserSetInfoReq* returnMe = resultCuserSetInfoReq;
  self.resultCuserSetInfoReq = nil;
  return returnMe;
}
- (CUserSetInfoReqBuilder*) mergeFrom:(CUserSetInfoReq*) other {
  if (other == [CUserSetInfoReq defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.infosArray.count > 0) {
    if (resultCuserSetInfoReq.infosArray == nil) {
      resultCuserSetInfoReq.infosArray = [[NSMutableArray alloc] initWithArray:other.infosArray];
    } else {
      [resultCuserSetInfoReq.infosArray addObjectsFromArray:other.infosArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserSetInfoReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserSetInfoReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 18: {
        CFieldInfoBuilder* subBuilder = [CFieldInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInfos:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultCuserSetInfoReq.hasUid;
}
- (UInt64) uid {
  return resultCuserSetInfoReq.uid;
}
- (CUserSetInfoReqBuilder*) setUid:(UInt64) value {
  resultCuserSetInfoReq.hasUid = YES;
  resultCuserSetInfoReq.uid = value;
  return self;
}
- (CUserSetInfoReqBuilder*) clearUid {
  resultCuserSetInfoReq.hasUid = NO;
  resultCuserSetInfoReq.uid = 0L;
  return self;
}
- (NSMutableArray *)infos {
  return resultCuserSetInfoReq.infosArray;
}
- (CFieldInfo*)infosAtIndex:(NSUInteger)index {
  return [resultCuserSetInfoReq infosAtIndex:index];
}
- (CUserSetInfoReqBuilder *)addInfos:(CFieldInfo*)value {
  if (resultCuserSetInfoReq.infosArray == nil) {
    resultCuserSetInfoReq.infosArray = [[NSMutableArray alloc]init];
  }
  [resultCuserSetInfoReq.infosArray addObject:value];
  return self;
}
- (CUserSetInfoReqBuilder *)setInfosArray:(NSArray *)array {
  resultCuserSetInfoReq.infosArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (CUserSetInfoReqBuilder *)clearInfos {
  resultCuserSetInfoReq.infosArray = nil;
  return self;
}
@end

@interface CUserSetInfoResp ()
@end

@implementation CUserSetInfoResp

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CUserSetInfoResp* defaultCUserSetInfoRespInstance = nil;
+ (void) initialize {
  if (self == [CUserSetInfoResp class]) {
    defaultCUserSetInfoRespInstance = [[CUserSetInfoResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserSetInfoRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserSetInfoRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserSetInfoResp*) parseFromData:(NSData*) data {
  return (CUserSetInfoResp*)[[[CUserSetInfoResp builder] mergeFromData:data] build];
}
+ (CUserSetInfoResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserSetInfoResp*)[[[CUserSetInfoResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserSetInfoResp*) parseFromInputStream:(NSInputStream*) input {
  return (CUserSetInfoResp*)[[[CUserSetInfoResp builder] mergeFromInputStream:input] build];
}
+ (CUserSetInfoResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserSetInfoResp*)[[[CUserSetInfoResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserSetInfoResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserSetInfoResp*)[[[CUserSetInfoResp builder] mergeFromCodedInputStream:input] build];
}
+ (CUserSetInfoResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserSetInfoResp*)[[[CUserSetInfoResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserSetInfoRespBuilder*) builder {
  return [[CUserSetInfoRespBuilder alloc] init];
}
+ (CUserSetInfoRespBuilder*) builderWithPrototype:(CUserSetInfoResp*) prototype {
  return [[CUserSetInfoResp builder] mergeFrom:prototype];
}
- (CUserSetInfoRespBuilder*) builder {
  return [CUserSetInfoResp builder];
}
- (CUserSetInfoRespBuilder*) toBuilder {
  return [CUserSetInfoResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserSetInfoResp class]]) {
    return NO;
  }
  CUserSetInfoResp *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserSetInfoRespBuilder()
@property (strong) CUserSetInfoResp* resultCuserSetInfoResp;
@end

@implementation CUserSetInfoRespBuilder
@synthesize resultCuserSetInfoResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserSetInfoResp = [[CUserSetInfoResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserSetInfoResp;
}
- (CUserSetInfoRespBuilder*) clear {
  self.resultCuserSetInfoResp = [[CUserSetInfoResp alloc] init];
  return self;
}
- (CUserSetInfoRespBuilder*) clone {
  return [CUserSetInfoResp builderWithPrototype:resultCuserSetInfoResp];
}
- (CUserSetInfoResp*) defaultInstance {
  return [CUserSetInfoResp defaultInstance];
}
- (CUserSetInfoResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserSetInfoResp*) buildPartial {
  CUserSetInfoResp* returnMe = resultCuserSetInfoResp;
  self.resultCuserSetInfoResp = nil;
  return returnMe;
}
- (CUserSetInfoRespBuilder*) mergeFrom:(CUserSetInfoResp*) other {
  if (other == [CUserSetInfoResp defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserSetInfoRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserSetInfoRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CUserKickoutNotify ()
@property KickoutReason reason;
@property UInt32 fromSourceType;
@end

@implementation CUserKickoutNotify

- (BOOL) hasReason {
  return !!hasReason_;
}
- (void) setHasReason:(BOOL) _value_ {
  hasReason_ = !!_value_;
}
@synthesize reason;
- (BOOL) hasFromSourceType {
  return !!hasFromSourceType_;
}
- (void) setHasFromSourceType:(BOOL) _value_ {
  hasFromSourceType_ = !!_value_;
}
@synthesize fromSourceType;
- (instancetype) init {
  if ((self = [super init])) {
    self.reason = KickoutReasonReasonRelogin;
    self.fromSourceType = 0;
  }
  return self;
}
static CUserKickoutNotify* defaultCUserKickoutNotifyInstance = nil;
+ (void) initialize {
  if (self == [CUserKickoutNotify class]) {
    defaultCUserKickoutNotifyInstance = [[CUserKickoutNotify alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserKickoutNotifyInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserKickoutNotifyInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasReason) {
    [output writeEnum:1 value:self.reason];
  }
  if (self.hasFromSourceType) {
    [output writeUInt32:2 value:self.fromSourceType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasReason) {
    size_ += computeEnumSize(1, self.reason);
  }
  if (self.hasFromSourceType) {
    size_ += computeUInt32Size(2, self.fromSourceType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserKickoutNotify*) parseFromData:(NSData*) data {
  return (CUserKickoutNotify*)[[[CUserKickoutNotify builder] mergeFromData:data] build];
}
+ (CUserKickoutNotify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserKickoutNotify*)[[[CUserKickoutNotify builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserKickoutNotify*) parseFromInputStream:(NSInputStream*) input {
  return (CUserKickoutNotify*)[[[CUserKickoutNotify builder] mergeFromInputStream:input] build];
}
+ (CUserKickoutNotify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserKickoutNotify*)[[[CUserKickoutNotify builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserKickoutNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserKickoutNotify*)[[[CUserKickoutNotify builder] mergeFromCodedInputStream:input] build];
}
+ (CUserKickoutNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserKickoutNotify*)[[[CUserKickoutNotify builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserKickoutNotifyBuilder*) builder {
  return [[CUserKickoutNotifyBuilder alloc] init];
}
+ (CUserKickoutNotifyBuilder*) builderWithPrototype:(CUserKickoutNotify*) prototype {
  return [[CUserKickoutNotify builder] mergeFrom:prototype];
}
- (CUserKickoutNotifyBuilder*) builder {
  return [CUserKickoutNotify builder];
}
- (CUserKickoutNotifyBuilder*) toBuilder {
  return [CUserKickoutNotify builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasReason) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reason", NSStringFromKickoutReason(self.reason)];
  }
  if (self.hasFromSourceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromSourceType", [NSNumber numberWithInteger:self.fromSourceType]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserKickoutNotify class]]) {
    return NO;
  }
  CUserKickoutNotify *otherMessage = other;
  return
      self.hasReason == otherMessage.hasReason &&
      (!self.hasReason || self.reason == otherMessage.reason) &&
      self.hasFromSourceType == otherMessage.hasFromSourceType &&
      (!self.hasFromSourceType || self.fromSourceType == otherMessage.fromSourceType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasReason) {
    hashCode = hashCode * 31 + self.reason;
  }
  if (self.hasFromSourceType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.fromSourceType] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserKickoutNotifyBuilder()
@property (strong) CUserKickoutNotify* resultCuserKickoutNotify;
@end

@implementation CUserKickoutNotifyBuilder
@synthesize resultCuserKickoutNotify;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserKickoutNotify = [[CUserKickoutNotify alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserKickoutNotify;
}
- (CUserKickoutNotifyBuilder*) clear {
  self.resultCuserKickoutNotify = [[CUserKickoutNotify alloc] init];
  return self;
}
- (CUserKickoutNotifyBuilder*) clone {
  return [CUserKickoutNotify builderWithPrototype:resultCuserKickoutNotify];
}
- (CUserKickoutNotify*) defaultInstance {
  return [CUserKickoutNotify defaultInstance];
}
- (CUserKickoutNotify*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserKickoutNotify*) buildPartial {
  CUserKickoutNotify* returnMe = resultCuserKickoutNotify;
  self.resultCuserKickoutNotify = nil;
  return returnMe;
}
- (CUserKickoutNotifyBuilder*) mergeFrom:(CUserKickoutNotify*) other {
  if (other == [CUserKickoutNotify defaultInstance]) {
    return self;
  }
  if (other.hasReason) {
    [self setReason:other.reason];
  }
  if (other.hasFromSourceType) {
    [self setFromSourceType:other.fromSourceType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserKickoutNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserKickoutNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        KickoutReason value = (KickoutReason)[input readEnum];
        if (KickoutReasonIsValidValue(value)) {
          [self setReason:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setFromSourceType:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasReason {
  return resultCuserKickoutNotify.hasReason;
}
- (KickoutReason) reason {
  return resultCuserKickoutNotify.reason;
}
- (CUserKickoutNotifyBuilder*) setReason:(KickoutReason) value {
  resultCuserKickoutNotify.hasReason = YES;
  resultCuserKickoutNotify.reason = value;
  return self;
}
- (CUserKickoutNotifyBuilder*) clearReason {
  resultCuserKickoutNotify.hasReason = NO;
  resultCuserKickoutNotify.reason = KickoutReasonReasonRelogin;
  return self;
}
- (BOOL) hasFromSourceType {
  return resultCuserKickoutNotify.hasFromSourceType;
}
- (UInt32) fromSourceType {
  return resultCuserKickoutNotify.fromSourceType;
}
- (CUserKickoutNotifyBuilder*) setFromSourceType:(UInt32) value {
  resultCuserKickoutNotify.hasFromSourceType = YES;
  resultCuserKickoutNotify.fromSourceType = value;
  return self;
}
- (CUserKickoutNotifyBuilder*) clearFromSourceType {
  resultCuserKickoutNotify.hasFromSourceType = NO;
  resultCuserKickoutNotify.fromSourceType = 0;
  return self;
}
@end

@interface CUserGetVCodeReq ()
@end

@implementation CUserGetVCodeReq

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static CUserGetVCodeReq* defaultCUserGetVCodeReqInstance = nil;
+ (void) initialize {
  if (self == [CUserGetVCodeReq class]) {
    defaultCUserGetVCodeReqInstance = [[CUserGetVCodeReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserGetVCodeReqInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserGetVCodeReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserGetVCodeReq*) parseFromData:(NSData*) data {
  return (CUserGetVCodeReq*)[[[CUserGetVCodeReq builder] mergeFromData:data] build];
}
+ (CUserGetVCodeReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserGetVCodeReq*)[[[CUserGetVCodeReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserGetVCodeReq*) parseFromInputStream:(NSInputStream*) input {
  return (CUserGetVCodeReq*)[[[CUserGetVCodeReq builder] mergeFromInputStream:input] build];
}
+ (CUserGetVCodeReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserGetVCodeReq*)[[[CUserGetVCodeReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserGetVCodeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserGetVCodeReq*)[[[CUserGetVCodeReq builder] mergeFromCodedInputStream:input] build];
}
+ (CUserGetVCodeReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserGetVCodeReq*)[[[CUserGetVCodeReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserGetVCodeReqBuilder*) builder {
  return [[CUserGetVCodeReqBuilder alloc] init];
}
+ (CUserGetVCodeReqBuilder*) builderWithPrototype:(CUserGetVCodeReq*) prototype {
  return [[CUserGetVCodeReq builder] mergeFrom:prototype];
}
- (CUserGetVCodeReqBuilder*) builder {
  return [CUserGetVCodeReq builder];
}
- (CUserGetVCodeReqBuilder*) toBuilder {
  return [CUserGetVCodeReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserGetVCodeReq class]]) {
    return NO;
  }
  CUserGetVCodeReq *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserGetVCodeReqBuilder()
@property (strong) CUserGetVCodeReq* resultCuserGetVcodeReq;
@end

@implementation CUserGetVCodeReqBuilder
@synthesize resultCuserGetVcodeReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserGetVcodeReq = [[CUserGetVCodeReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserGetVcodeReq;
}
- (CUserGetVCodeReqBuilder*) clear {
  self.resultCuserGetVcodeReq = [[CUserGetVCodeReq alloc] init];
  return self;
}
- (CUserGetVCodeReqBuilder*) clone {
  return [CUserGetVCodeReq builderWithPrototype:resultCuserGetVcodeReq];
}
- (CUserGetVCodeReq*) defaultInstance {
  return [CUserGetVCodeReq defaultInstance];
}
- (CUserGetVCodeReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserGetVCodeReq*) buildPartial {
  CUserGetVCodeReq* returnMe = resultCuserGetVcodeReq;
  self.resultCuserGetVcodeReq = nil;
  return returnMe;
}
- (CUserGetVCodeReqBuilder*) mergeFrom:(CUserGetVCodeReq*) other {
  if (other == [CUserGetVCodeReq defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserGetVCodeReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserGetVCodeReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CUserGetVCodeResp ()
@property (strong) NSData* vcodeSession;
@property (strong) NSData* vcodePicdata;
@end

@implementation CUserGetVCodeResp

- (BOOL) hasVcodeSession {
  return !!hasVcodeSession_;
}
- (void) setHasVcodeSession:(BOOL) _value_ {
  hasVcodeSession_ = !!_value_;
}
@synthesize vcodeSession;
- (BOOL) hasVcodePicdata {
  return !!hasVcodePicdata_;
}
- (void) setHasVcodePicdata:(BOOL) _value_ {
  hasVcodePicdata_ = !!_value_;
}
@synthesize vcodePicdata;
- (instancetype) init {
  if ((self = [super init])) {
    self.vcodeSession = [NSData data];
    self.vcodePicdata = [NSData data];
  }
  return self;
}
static CUserGetVCodeResp* defaultCUserGetVCodeRespInstance = nil;
+ (void) initialize {
  if (self == [CUserGetVCodeResp class]) {
    defaultCUserGetVCodeRespInstance = [[CUserGetVCodeResp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultCUserGetVCodeRespInstance;
}
- (instancetype) defaultInstance {
  return defaultCUserGetVCodeRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVcodeSession) {
    [output writeData:1 value:self.vcodeSession];
  }
  if (self.hasVcodePicdata) {
    [output writeData:2 value:self.vcodePicdata];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasVcodeSession) {
    size_ += computeDataSize(1, self.vcodeSession);
  }
  if (self.hasVcodePicdata) {
    size_ += computeDataSize(2, self.vcodePicdata);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CUserGetVCodeResp*) parseFromData:(NSData*) data {
  return (CUserGetVCodeResp*)[[[CUserGetVCodeResp builder] mergeFromData:data] build];
}
+ (CUserGetVCodeResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserGetVCodeResp*)[[[CUserGetVCodeResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CUserGetVCodeResp*) parseFromInputStream:(NSInputStream*) input {
  return (CUserGetVCodeResp*)[[[CUserGetVCodeResp builder] mergeFromInputStream:input] build];
}
+ (CUserGetVCodeResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserGetVCodeResp*)[[[CUserGetVCodeResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserGetVCodeResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CUserGetVCodeResp*)[[[CUserGetVCodeResp builder] mergeFromCodedInputStream:input] build];
}
+ (CUserGetVCodeResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CUserGetVCodeResp*)[[[CUserGetVCodeResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CUserGetVCodeRespBuilder*) builder {
  return [[CUserGetVCodeRespBuilder alloc] init];
}
+ (CUserGetVCodeRespBuilder*) builderWithPrototype:(CUserGetVCodeResp*) prototype {
  return [[CUserGetVCodeResp builder] mergeFrom:prototype];
}
- (CUserGetVCodeRespBuilder*) builder {
  return [CUserGetVCodeResp builder];
}
- (CUserGetVCodeRespBuilder*) toBuilder {
  return [CUserGetVCodeResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVcodeSession) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vcodeSession", self.vcodeSession];
  }
  if (self.hasVcodePicdata) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vcodePicdata", self.vcodePicdata];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CUserGetVCodeResp class]]) {
    return NO;
  }
  CUserGetVCodeResp *otherMessage = other;
  return
      self.hasVcodeSession == otherMessage.hasVcodeSession &&
      (!self.hasVcodeSession || [self.vcodeSession isEqual:otherMessage.vcodeSession]) &&
      self.hasVcodePicdata == otherMessage.hasVcodePicdata &&
      (!self.hasVcodePicdata || [self.vcodePicdata isEqual:otherMessage.vcodePicdata]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasVcodeSession) {
    hashCode = hashCode * 31 + [self.vcodeSession hash];
  }
  if (self.hasVcodePicdata) {
    hashCode = hashCode * 31 + [self.vcodePicdata hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CUserGetVCodeRespBuilder()
@property (strong) CUserGetVCodeResp* resultCuserGetVcodeResp;
@end

@implementation CUserGetVCodeRespBuilder
@synthesize resultCuserGetVcodeResp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCuserGetVcodeResp = [[CUserGetVCodeResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCuserGetVcodeResp;
}
- (CUserGetVCodeRespBuilder*) clear {
  self.resultCuserGetVcodeResp = [[CUserGetVCodeResp alloc] init];
  return self;
}
- (CUserGetVCodeRespBuilder*) clone {
  return [CUserGetVCodeResp builderWithPrototype:resultCuserGetVcodeResp];
}
- (CUserGetVCodeResp*) defaultInstance {
  return [CUserGetVCodeResp defaultInstance];
}
- (CUserGetVCodeResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CUserGetVCodeResp*) buildPartial {
  CUserGetVCodeResp* returnMe = resultCuserGetVcodeResp;
  self.resultCuserGetVcodeResp = nil;
  return returnMe;
}
- (CUserGetVCodeRespBuilder*) mergeFrom:(CUserGetVCodeResp*) other {
  if (other == [CUserGetVCodeResp defaultInstance]) {
    return self;
  }
  if (other.hasVcodeSession) {
    [self setVcodeSession:other.vcodeSession];
  }
  if (other.hasVcodePicdata) {
    [self setVcodePicdata:other.vcodePicdata];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CUserGetVCodeRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CUserGetVCodeRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setVcodeSession:[input readData]];
        break;
      }
      case 18: {
        [self setVcodePicdata:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasVcodeSession {
  return resultCuserGetVcodeResp.hasVcodeSession;
}
- (NSData*) vcodeSession {
  return resultCuserGetVcodeResp.vcodeSession;
}
- (CUserGetVCodeRespBuilder*) setVcodeSession:(NSData*) value {
  resultCuserGetVcodeResp.hasVcodeSession = YES;
  resultCuserGetVcodeResp.vcodeSession = value;
  return self;
}
- (CUserGetVCodeRespBuilder*) clearVcodeSession {
  resultCuserGetVcodeResp.hasVcodeSession = NO;
  resultCuserGetVcodeResp.vcodeSession = [NSData data];
  return self;
}
- (BOOL) hasVcodePicdata {
  return resultCuserGetVcodeResp.hasVcodePicdata;
}
- (NSData*) vcodePicdata {
  return resultCuserGetVcodeResp.vcodePicdata;
}
- (CUserGetVCodeRespBuilder*) setVcodePicdata:(NSData*) value {
  resultCuserGetVcodeResp.hasVcodePicdata = YES;
  resultCuserGetVcodeResp.vcodePicdata = value;
  return self;
}
- (CUserGetVCodeRespBuilder*) clearVcodePicdata {
  resultCuserGetVcodeResp.hasVcodePicdata = NO;
  resultCuserGetVcodeResp.vcodePicdata = [NSData data];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
